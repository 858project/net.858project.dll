<?xml version="1.0"?>
<doc>
    <assembly>
        <name>858project.com</name>
    </assembly>
    <members>
        <member name="T:Project858.ComponentModel.DoubleAttribute">
            <summary>
            Validaciu decimalu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.DoubleAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.DoubleAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.DoubleAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.DoubleAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.DoubleAttribute.MinValue">
            <summary>
            Definuje minimalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.DoubleAttribute.MaxValue">
            <summary>
            Definuje maximalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.TimeSpanAttribute">
            <summary>
            Validacia textu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.TimeSpanAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.TimeSpanAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.TimeSpanAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.TimeSpanAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.TimeSpanAttribute.MinValue">
            <summary>
            Definuje minimalnu hdonotu
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.TimeSpanAttribute.MaxValue">
            <summary>
            Definuje maximalnu hodnotu
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.UnsignedIntegerrAttribute">
            <summary>
            Validacia textu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.UnsignedIntegerrAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.UnsignedIntegerrAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.UnsignedIntegerrAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.UnsignedIntegerrAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.UnsignedIntegerrAttribute.MinValue">
            <summary>
            Definuje minimalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.UnsignedIntegerrAttribute.MaxValue">
            <summary>
            Definuje maximalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.LongAttribute">
            <summary>
            Validacia longu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.LongAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.LongAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.LongAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.LongAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.LongAttribute.MinValue">
            <summary>
            Definuje minimalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.LongAttribute.MaxValue">
            <summary>
            Definuje maximalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.ConfigurationTypes">
            <summary>
            Definuje typy konfiguracie
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.ConfigurationTypes.Bin">
            <summary>
            Binarna serializacia
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.ConfigurationTypes.Xml">
            <summary>
            Xml serializacia
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.FileModelBase">
            <summary>
            Model reprezentujuci task
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.ModelBase">
            <summary>
            Model base pre vytvaranie modelov
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.IModel">
            <summary>
            Model definujuci vzhlad objektov prenasajucich dat
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.IModel.Validate">
            <summary>
            Overi spravnost modelu
            </summary>
            <returns>True = model je spravny, inak false</returns>
        </member>
        <member name="M:Project858.ComponentModel.ModelBase.Validate">
            <summary>
            Overi platnost modelu
            </summary>
            <returns>True = model je plany, inak false</returns>
        </member>
        <member name="P:Project858.ComponentModel.ModelBase.CreateDate">
            <summary>
            Datum vytvorenia zaznamu
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ModelBase.UpdateDate">
            <summary>
            Datum poslednej aktualizacie zaznamu
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.FileModelBase.IdFile">
            <summary>
            Id tasku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.FileModelBase.Name">
            <summary>
            Meno suboru
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.FileModelBase.ContentType">
            <summary>
            Meno suboru
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.FileModelBase.Data">
            <summary>
            Id uzivatela ktory ulohu zadal
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.GuidAttribute">
            <summary>
            Validacia guid
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.GuidAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.GuidAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.GuidAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.IMailComponent">
            <summary>
            Interface predpisujuci vzhlad komponenty s podporov odosielania emailov
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.IMailComponent.MailEvent">
            <summary>
            Event oznamujuci poziadavku na odoslanie emailu
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.IMailComponent.MailEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'EmailEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.IMailComponent.MailMessageInternalProcess">
            <summary>
            (Get / Set) Definuje ci je zapnute  odosielanie emailovych sprav v ramci klienta
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.IMailComponent.MailClient">
            <summary>
            (Get / Set) Klient zabezpecujuci odosielanie emailovych správ
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.ByteAttribute">
            <summary>
            Validacia bytu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.ByteAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.ByteAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.ByteAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ByteAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ByteAttribute.MinValue">
            <summary>
            Definuje minimalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ByteAttribute.MaxValue">
            <summary>
            Definuje maximalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.ISqlComponent">
            <summary>
            Component zabezpecujuci pristup k vykonavaniu poziadaviek na sql server
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ISqlComponent.SqlClient">
            <summary>
            (Get / Set) Klient zabezpecujuci pristup k SQL serveru a vykonavanie prikazov
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.IntegerAttribute">
            <summary>
            Validacia textu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.IntegerAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.IntegerAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="P:Project858.ComponentModel.IntegerAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.IntegerAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.IntegerAttribute.MinValue">
            <summary>
            Definuje minimalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.IntegerAttribute.MaxValue">
            <summary>
            Definuje maximalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.ColumnAttribute">
            <summary>
            Nastavenie strlca tabulky
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.ColumnAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.Size">
            <summary>
            Definuje dlzku contextu
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.IsRequiredWhenInserting">
            <summary>
            Definuje ci hodnotu potrebne pripojit do Insert
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.IsRequiredWhenUpdating">
            <summary>
            Definuje ci hodnotu potrebne pripojit do Update
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.TypeName">
            <summary>
            Meno typu. Vyuzivane hlavne pri SqlDbType.Udt
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.CanBeNull">
            <summary>
            Definuje ci moze byt hodnota null
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.Type">
            <summary>
            Typ objektu v databaze
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.IsDbGenerated">
            <summary>
            Definuje ci je hodnota generovana databazou
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ColumnAttribute.IsPrimaryKey">
            <summary>
            Definuje ci je hodnota primernym klucom
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.ViewAttribute">
            <summary>
            Atribut na definovanie informacii o view
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.ViewAttribute.Name">
            <summary>
            Meno view tabulky
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SQLiteClient">
            <summary>
            Klient zabezpecujuci vykonavanie prikazov do SQL databazy 
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SQLiteClientBase">
            <summary>
            Klient zabezpecujuci vykonavanie prikazov do SQL databazy 
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.Client.ClientBase">
            <summary>
            ClientBase / predpis a implementacia zakladnych vlastnosti klienta / modulu
            </summary>traceTypes
        </member>
        <member name="T:Project858.ComponentModel.ITraceComponent">
            <summary>
            Component zabezpecujuci logovanie informacii
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.ITraceComponent.TraceEvent">
            <summary>
            Event oznamujuci poziadavku na logovanie informacii
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ITraceComponent.TraceClient">
            <summary>
            (Get / Set) Klient zabezpecujuci logovanie data
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ITraceComponent.TraceEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'TraceEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ITraceComponent.TraceType">
            <summary>
            (Get / Set) Definuje typ logovania informacii
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ITraceComponent.TraceErrorAlways">
            <summary>
            (Get / Set) Definuje ci je logovanie chyb zapnute za kazdych okolnosti
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.ITraceComponent.TraceInternalProcess">
            <summary>
            (Get / Set) Definuje ci je zapnute logovanie informaci v ramci klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="T:Project858.ComponentModel.Client.IClient">
            <summary>
            Predpis pre implementaciu jednodlivych modulov / klientov v ramci aplikacie
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.IClient.Start">
            <summary>
            Spusti funkciu vrstvy
            </summary>
            <returns>True = vrstva bola uspesne spustena</returns>
        </member>
        <member name="M:Project858.ComponentModel.Client.IClient.Pause">
            <summary>
            Pozastavi funkciu vrstvy
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.IClient.Stop">
            <summary>
            Ukonci funkciu vrstvy
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.IClient.ClientStartEvent">
            <summary>
            Event oznamujuci start klienta
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.IClient.ClientPauseEvent">
            <summary>
            Event oznamujuci pozastavenie klienta
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.IClient.ClientStopEvent">
            <summary>
            Event oznamujuci ukoncenie klienta
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.IClient.IsDisposed">
            <summary>
            (Get) Definuje ci bolo na tiedu zavolane Dispose()
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.IClient.IsRun">
            <summary>
            (Get) Urcuje ci je funkcia vrstvy spustena
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.IClient.ClientStartEventAsync">
            <summary>
            (Get / Set) Nastavi asynchronny mod na event oznamujuci start klienta
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.IClient.ClientPauseEventAsync">
            <summary>
            (Get / Set) Nastavi asynchronny mod na event oznamujuci pozastavenie klienta
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.IClient.ClientStopEventAsync">
            <summary>
            (Get / Set) Nastavi asynchronny mod na event oznamujuci ukoncenie klienta
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.IClient.ClientState">
            <summary>
            (Get) Vrati stav v akom sa klient nachádza
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._mailMessageInternalProcess">
            <summary>
            Definuje ci je zapnute odosielanie emailov v ramci klienta
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._mailClient">
            <summary>
            Klient zabezpecujuci odosielanie emailových sprav
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._mailEventAsync">
            <summary>
            Definuje ci je event 'EmailEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._clientStartEventAsync">
            <summary>
            Definuje ci je event 'ClientStart' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._clientPauseEventAsync">
            <summary>
            Definuje ci je event 'ClientPause' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._clientStopEventAsync">
            <summary>
            Definuje ci je event 'ClientStop' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._clientState">
            <summary>
            Definuje stav klienta
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._disposed">
            <summary>
            Track if dispose has been called
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase.m_eventLock">
            <summary>
            Pomocny objekt na synchronizaciu pristupu k eventom
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._traceEventAsync">
            <summary>
            Definuje ci je event 'TraceEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._traceClient">
            <summary>
            Klient zabezpecujuci logovanie data
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._traceInternalProcess">
            <summary>
            Definuje ci je zapnute logovanie informaci v ramci klienta
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._traceErrorAlways">
            <summary>
            Detekuje ci logovania errorov pozadovane stale
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._traceType">
            <summary>
            Typ logovania ktory je nastaveny
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientBase._sqlClient">
            <summary>
            Klient zabezpecujuci pristup k SQL serveru a vykonavanie prikazov
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.Start">
            <summary>
            Inicializuje klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak je klient v stave 'start'
            </exception>
            <returns>True = start klienta bol uspesny</returns>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.Stop">
            <summary>
            Ukonci funkciu vrstvy / klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.Pause">
            <summary>
            
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak klient nie je v stave 'start'
            </exception>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.Dispose">
            <summary>
            Deinicializuje cely objekt
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.ToString">
            <summary>
            Vrati meno, popis klienta
            </summary>
            <returns>Popis klienta</returns>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalStart">
            <summary>
            NotImplementedException
            </summary>
            <exception cref="T:System.NotImplementedException">
            Metoda nie je implementovana
            </exception>
            <returns>NotImplementedException</returns>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalStop">
            <summary>
            NotImplementedException
            </summary>
            <exception cref="T:System.NotImplementedException">
            Metoda nie je implementovana
            </exception>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalPause">
            <summary>
            NotImplementedException
            </summary>
            <exception cref="T:System.NotImplementedException">
            Metoda nie je implementovana
            </exception>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalDispose">
            <summary>
            Metoda volana pred Dispose objektu
            </summary>
            <exception cref="T:System.NotImplementedException">
            Metoda nie je implementovana
            </exception>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalException(System.Exception)">
            <summary>
            Metoda volana vzdy pri internej chybe klienta
            </summary>
            <param name="exception">Chyba ktora vznikla</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalMailMessage(System.Net.Mail.MailMessage)">
            <summary>
            Spracuje emailovu spravu ktora sa ma odoslat
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupnt argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Polozka Subject, alebo Body nie je v sprave vyplnena
            </exception>
            <param name="message">Sprava na odoslanie</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnInternalMailMessage(System.Net.Mail.MailMessage)">
            <summary>
            Spracuje emailovu spravu ktora sa ma odoslat
            </summary>
            <param name="message">Sprava na odoslanie</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalTrace(Project858.Diagnostics.TraceTypes,System.String,System.Object[])">
            <summary>
            Spracuje logovacie spravy. Ak sprava vyhovuje nastaveniam odosle ju vyssej vrstve
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Argument 'message' je null alebo empty
            </exception>
            <param name="type">Typ spravy</param>
            <param name="message">Text spravy</param>
            <param name="msgArgs">Dalsie argumenty do String.Format k sprave</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.InternalTrace(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.Object[])">
            <summary>
            Spracuje logovacie spravy. Ak sprava vyhovuje nastaveniam odosle ju na logovanie
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Argument 'message' je null alebo empty
            </exception>
            <param name="time">Cas kedy sprava vznikla</param>
            <param name="type">Typ spravy</param>
            <param name="message">Text spravy</param>
            <param name="msgArgs">Dalsie argumenty do String.Format k sprave</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnInternalTrace(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.Object[])">
            <summary>
            Vykona logovanie spravy
            </summary>
            <param name="time">Cas kedy sprava vznikla</param>
            <param name="type">Typ spravy</param>
            <param name="message">Text spravy</param>
            <param name="msgArgs">Dalsie argumenty do String.Format k sprave</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.AddInternalExceptionToLog(System.Exception)">
            <summary>
            Zaloguje chybu do log suboru
            </summary>
            <param name="exception">Exception</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnClientStart(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci uspesny start klienta
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnClientPause(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci pozastavenie klienta
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnClientStop(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci uspesne ukoncenie klienta
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnMailMessage(Project858.Net.Mail.MailEventArgs)">
            <summary>
            Vygeneruje event oznamujuci poziadavku na odoslanie emailovej spravy
            </summary>
            <param name="e">MailEventArgs</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.OnTrace(Project858.Diagnostics.TraceEventArgs)">
            <summary>
            Vygeneruje event oznamujuci poziadavku na logovanie informacii
            </summary>
            <param name="e">TraceEventArgs</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.AddInternalExceptionToMail(System.Exception)">
            <summary>
            Vytvori a odosle email o chybe pri vykonavani comanndu do SQL
            </summary>
            <param name="exception">Vzniknuta chyba</param>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the Transport object.
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientBase.Finalize">
            <summary>
            Finalizer
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase._mailEvent">
            <summary>
            Event oznamujuci poziadavku na odoslanie emailu
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.MailEvent">
            <summary>
            Event oznamujuci poziadavku na odoslanie emailu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.clientStartEvent">
            <summary>
            Event oznamujuci uspesny start klienta
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.ClientStartEvent">
            <summary>
            Event oznamujuci uspesny start klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.clientPauseEvent">
            <summary>
            Event oznamujuci uspesne pozastavenie klienta
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.ClientPauseEvent">
            <summary>
            Event oznamujuci uspesne pozastavenie klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.clientStopEvent">
            <summary>
            Event oznamujuci uspesne ukoncanie klienta
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.ClientStopEvent">
            <summary>
            Event oznamujuci uspesne ukoncanie klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.traceEvent">
            <summary>
            Event oznamujuci poziadavku na logovanie informacii
            </summary>
        </member>
        <member name="E:Project858.ComponentModel.Client.ClientBase.TraceEvent">
            <summary>
            Event oznamujuci poziadavku na logovanie informacii
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.SqlClient">
            <summary>
            (Get / Set) Klient zabezpecujuci pristup k SQL serveru a vykonavanie prikazov
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.MailEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'EmailEvent' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.MailMessageInternalProcess">
            <summary>
            (Get / Set) Definuje ci je zapnute  odosielanie emailovych sprav v ramci klienta
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.MailClient">
            <summary>
            (Get / Set) Klient zabezpecujuci odosielanie emailovych správ
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.TraceClient">
            <summary>
            (Get / Set) Klient zabezpecujuci logovanie data
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.TraceEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'TraceEvent' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.TraceType">
            <summary>
            (Get / Set) Definuje typ logovania informacii
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.TraceErrorAlways">
            <summary>
            (Get / Set) Definuje ci je logovanie chyb zapnute za kazdych okolnosti
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.TraceInternalProcess">
            <summary>
            (Get / Set) Definuje ci je zapnute logovanie informaci v ramci klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.IsDisposed">
            <summary>
            (Get) Definuje ci bolo na tiedu zavolane Dispose()
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.IsRun">
            <summary>
            (Get) Urcuje ci je klient spusteny. Ak ano stav klienta je 'start' alebo 'pause'
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.ClientState">
            <summary>
            (Get) Definuje stav klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.ClientStartEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ClientStart' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.ClientPauseEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ClientPause' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.ComponentModel.Client.ClientBase.ClientStopEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ClientStop' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="T:Project858.Data.SqlClient.ISqlClient">
            <summary>
            Interface ako predpis pre klienta zabezpecujuceho spravu dat do SQL
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.#ctor(System.Data.SQLite.SQLiteConnectionStringBuilder)">
            <summary>
            Initialize this class
            </summary>
            <param name="builder">Strng builder na vytvorenie SQL connection stringu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.#ctor(System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <param name="database">Databaza do ktorej pristupujeme</param>
            <param name="password">Heslo k SQL serveru</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase.m_truncateValue">
            <summary>
            Definuje ci dojde k skracovaniu hodnot pri vlozeni do DB
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase._connectionStateChangeEventAsync">
            <summary>
            Definuje ci je event 'ConnectionStateChangeEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase._connectingFaultEventAsync">
            <summary>
            Definuje ci je event 'ConnectingFaultEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase._autoConnectingTimeout">
            <summary>
            Timeout aky sa ma najdlhsie pokusat pripojit k sql serveru
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase._state">
            <summary>
            Stav spojenia v aktualnom stave
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase._startConnecting">
            <summary>
            Urcuje cas kedy doslo k spusteniu pripajania
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase._lockObj">
            <summary>
            Pomocny synchronizacny objekt na pristup k pripojeniu
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase.m_connection">
            <summary>
            Sql pripojenie k serveru
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase.m_database">
            <summary>
            Databaza do ktorej pristupujeme
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClientBase.m_password">
            <summary>
            Heslo k SQL serveru
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.ExecuteReader(System.Data.SQLite.SQLiteCommand)">
            <summary>
            Vykona pozadovany prikaz na aktivne pripojenie k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="!:SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">Prikaz ktory chceme vykonat</param>
            <returns>The first column of the first row in the result set, or a null reference</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.ExecuteNonQuery(System.Data.SQLite.SQLiteCommand)">
            <summary>
            Vykona pozadovany prikaz na aktivne pripojenie k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.Data.SQLite.SQLiteException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">Prikaz ktory chceme vykonat</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.ExecuteScalar(System.Data.SQLite.SQLiteCommand)">
            <summary>
            Vykona pozadovany prikaz na aktivne pripojenie k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="!:SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">Prikaz ktory chceme vykonat</param>
            <returns>The first column of the first row in the result set, or a null reference</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.DataFill(System.Data.SQLite.SQLiteCommand)">
            <summary>
            Nacita pozadovane data z databazy
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="!:SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">prikaz na nacitanie dat</param>
            <returns>Data ktore boli nacitane z databazy</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.ToString">
            <summary>
            Vrati meno, popis triedy
            </summary>
            <returns>Meno</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalStart">
            <summary>
            Interne spustenie klienta
            </summary>
            <returns>True = spustenie klienta bolo uspesne</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalPause">
            <summary>
            Pozastavi funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalStop">
            <summary>
            Ukonci funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalDispose">
            <summary>
            Vykona pred ukoncenim klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalChange(System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <param name="database">Databaza ku ktorej sa pripajame</param>
            <param name="password">Prihlasovacie heslo k serveru</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.CheckClientState">
            <summary>
            Overi stav klienta a komunikaciu pri volani public metody
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalCheckConnection">
            <summary>
            Overi stav spojenia. Ak spojenie nie je vykona start automatickeho reconnectu
            </summary>
            <returns>True = spojenie je aktivne</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalConnect">
            <summary>
            Spusti automaticky connect k sql serveru
            </summary>
            <returns>True = spojenie bolo vytvorene, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalDisconnect">
            <summary>
            Ukonci automaticky reconnect alebo aktivne spojenie k sql serveru
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalOpenConnection">
            <summary>
            Inicializuje a otvori spojenie na definovany _sqlServer a databazu
            </summary>
            <returns>True = connect bol uspesny</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.InternalCloseConnection">
            <summary>
            Ukonci spojenie s sql serverom
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.GetConnectionString">
            <summary>
            Vrati connection string na pripojeni k SQL serveru
            </summary>
            <returns>ConnectionString</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.OnConnectionStateChange(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci zmenu stavu pripojenia
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClientBase.OnConnectingFault(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci uplynutie timeoutu na pripojenie k sql serveru
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:Project858.Data.SqlClient.SQLiteClientBase._connectingFaultEvent">
            <summary>
            Event oznamujuci uplynutie intervalu na pripojenie k sql serveru
            </summary>
        </member>
        <member name="E:Project858.Data.SqlClient.SQLiteClientBase.ConnectingFaultEvent">
            <summary>
            Event oznamujuci uplynutie intervalu na pripojenie k sql serveru
            </summary>
        </member>
        <member name="E:Project858.Data.SqlClient.SQLiteClientBase._connectionStateChangeEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
        </member>
        <member name="E:Project858.Data.SqlClient.SQLiteClientBase.ConnectionStateChangeEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.TruncateValue">
            <summary>
            Definuje ci dojde k skracovaniu hodnot pri vlozeni do DB
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.ConnectionStateChangeEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ConnectionStateChangeEvent' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.ConnectingFaultEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ConnectingFaultEvent' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.Database">
            <summary>
            (Get) Databaza do ktorej pristupujeme
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.Password">
            <summary>
            (Get) Heslo k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.ConnectionState">
            <summary>
            (Get) Vrati stav aktualneho pripojenia k sql serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClientBase.AutoConnectingTimeout">
            <summary>
            (Get / Set) Timeout aky sa ma najdlhsie pokusat pripojit k sql serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Minimalna hodnota timeoutu je 00:00:30
            </exception>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.#ctor(System.Data.SQLite.SQLiteConnectionStringBuilder)">
            <summary>
            Initialize this class
            </summary>
            <param name="builder">Strng builder na vytvorenie SQL connection stringu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.#ctor(System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <param name="database">Databaza do ktorej pristupujeme</param>
            <param name="password">Heslo k SQL serveru</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClient.m_reflectionPropertyCollection">
            <summary>
            Buffer na ukladanie reglekcii objektov
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.DeleteObject(System.Object)">
            <summary>
            Vykona vymazanie objektu
            </summary>
            <param name="item">Objekt ktory chceme vymazat</param>
            <returns>True = objekt bol vymazany, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.Select``1">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.TryInsertObject(System.Object)">
            <summary>
            Vlozi pozadovany objekt do SQL
            </summary>
            <param name="item">objekt ktorych chceme vlozit</param>
            <returns>True = objekt bol uspesne vlozeny</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InsertObject(System.Object)">
            <summary>
            Vlozi pozadovany objekt do SQL
            </summary>
            <param name="item">objekt ktorych chceme vlozit</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.TryUpdateObject(System.Object)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <typeparam name="T">Typ objektu ktory chceme aktualizovat</typeparam>
            <param name="item">objekt ktorych chceme aktualizovat</param>
            <returns>True = objekt bol uspesne aktualizovany</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.UpdateObject(System.Object)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <param name="item">objekt ktorych chceme aktualizovat</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.UpdateAndReloadObject(System.Object)">
            <summary>
            Aktualizuje a nacita pozadovany objekt v / z SQL
            </summary>
            <param name="item">Objekt ktory chceme aktualizovat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.GetObject``1(System.Data.SQLite.SQLiteDataReader)">
            <summary>
            Nacita objekt z sql readera
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <returns>Objekt ktory necitavame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReadObjectCollection``1(System.Data.SQLite.SQLiteCommand)">
            <summary>
            Nacita objekty z pozadovaneho commandu
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="command">SqlCommand</param>
            <returns>Kolekcia objektov alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReadFirstObject``1(System.Data.SQLite.SQLiteCommand)">
            <summary>
            Nacita prvy objekt alebo vrati null
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="command">SqlCommand</param>
            <returns>Object alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ToString">
            <summary>
            Vrati meno, popis triedy
            </summary>
            <returns>Meno</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalStart">
            <summary>
            Interne spustenie klienta
            </summary>
            <returns>True = spustenie klienta bolo uspesne</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalPause">
            <summary>
            Pozastavi funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalStop">
            <summary>
            Ukonci funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalDispose">
            <summary>
            Vykona pred ukoncenim klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalUpdateAndReloadObject(System.Object)">
            <summary>
            Aktualizuje a nacita pozadovany objekt v / z SQL
            </summary>
            <param name="item">Objekt ktory chceme aktualizovat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalDeleteObject(System.Object)">
            <summary>
            Vykona vymazanie objektu
            </summary>
            <param name="item">Objekt ktory chceme vymazat</param>
            <returns>True = objekt bol vymazany, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalReloadObject(System.Object)">
            <summary>
            Vykona aktualizaciu objektu
            </summary>
            <param name="item">Objekt ktory chceme aktualizovat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalGetObject``1(System.Data.SQLite.SQLiteDataReader,``0)">
            <summary>
            Nacita objekt z sql readera
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <param name="item">Objekt ktoryc chceme aktualizovat</param>
            <returns>Objekt ktory necitavame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalSelect``1">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalInsertObject(System.Object)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <typeparam name="T">Typ objektu ktory chceme aktualizovat</typeparam>
            <param name="item">objekt ktorych chceme aktualizovat</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalUpdateObject(System.Object)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <param name="item">objekt ktorych chceme aktualizovat</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalValidateValue(System.Object)">
            <summary>
            Overi hodnotu a vrati jej spravny format
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>Hodnota</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalFindPropertiesWithPrimaryKeyState(System.Reflection.PropertyInfo[])">
            <summary>
            Vyhlada property ktore su nastavene ako primarny kluc objektu
            </summary>
            <param name="propertyInfo">Kolekcia v ktorej chceme vyhladat</param>
            <returns>Property ktore obsahuju nastaveny stav primarneho kluca</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.InternalFindPropertiesWithColumnAttribute(System.Reflection.PropertyInfo[])">
            <summary>
            Vyhlada property ktore obsahuju pozadovany typ atributu
            </summary>
            <param name="propertyInfo">Kolekcia v ktorej chceme vyhladat</param>
            <returns>Pole najdenych property ktore obsahuju pozadovany atribut</returns>
        </member>
        <member name="T:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItem">
            <summary>
            Polozka zahrnucjuca reglekciu objektu a jeho property
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItem.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initialize this class
            </summary>
            <param name="property">Property ktoru objekt reprezentuje</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItem.m_attributes">
            <summary>
            Atributy prisluchajucej property
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItem.m_property">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItem.Attributes">
            <summary>
            Vrati atributy prisluchajucej property
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItem.Property">
            <summary>
            Property ktoru objekt reprezentuje
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItemCollection">
            <summary>
            Kolekcia property prisluchajuca konkretnemu objektu
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItemCollection.#ctor(System.Type)">
            <summary>
            Initialize this class
            </summary>
            <param name="type">Typ objektu ktoreho property objekt reprezentuje</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItemCollection.FindProperty(System.String)">
            <summary>
            Vrati pozadovanu property a jej informacie na zaklade mena
            </summary>
            <param name="name">Meno property ktoru ziadame</param>
            <returns>ReflectionPropertyItem alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReflectionPropertyItemCollection.InternalInitializeProperty(System.Type)">
            <summary>
            Inicializuje property objektu
            </summary>
            <param name="type">Typ objektu ktoreho property objekt reprezentuje</param>
        </member>
        <member name="T:Project858.Data.SqlClient.SQLiteClient.ReflectionObjectItemCollection">
            <summary>
            Kolekcia objektov definovanych typom obsahujucich informacie o properties
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReflectionObjectItemCollection.FindPropertyCollection(System.Type)">
            <summary>
            Vrati alebo vytvori a vrati kolekciu property pre pozadovany typ objektu
            </summary>
            <param name="type">Typ objektu pre ktory chceme informacie vratit</param>
            <returns>ReflectionPropertyItemCollection</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SQLiteClient.ReflectionObjectItemCollection.InternalCreateType(System.Type)">
            <summary>
            Prida objekt pre pozadovany type
            </summary>
            <param name="type">Type objektu pre ktory chceme property nacitat</param>
        </member>
        <member name="T:Project858.Data.SqlClient.SqlClientBase">
            <summary>
            Klient zabezpecujuci vykonavanie prikazov do SQL databazy 
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.#ctor(System.Data.SqlClient.SqlConnectionStringBuilder)">
            <summary>
            Initialize this class
            </summary>
            <param name="builder">Strng builder na vytvorenie SQL connection stringu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <param name="sqlServer">Meno SQL servera na pristup k datam</param>
            <param name="sqlDatabase">Databaza do ktorej pristupujeme</param>
            <param name="sqlLogin">Login k SQL serveru</param>
            <param name="sqlPassword">Heslo k SQL serveru</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase.m_transaction">
            <summary>
            Sql transakcia ktora prebieha
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase.m_truncateValue">
            <summary>
            Definuje ci dojde k skracovaniu hodnot pri vlozeni do DB
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase._connectionStateChangeEventAsync">
            <summary>
            Definuje ci je event 'ConnectionStateChangeEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase._connectingFaultEventAsync">
            <summary>
            Definuje ci je event 'ConnectingFaultEvent' v asynchronnom mode
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase._state">
            <summary>
            Stav spojenia v aktualnom stave
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase._startConnecting">
            <summary>
            Urcuje cas kedy doslo k spusteniu pripajania
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase.m_lockObj">
            <summary>
            Pomocny synchronizacny objekt na pristup k pripojeniu
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase.m_connection">
            <summary>
            Sql pripojenie k serveru
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClientBase.m_connectionStringBuilder">
            <summary>
            String builder na vytvorenie SQL connection stringu
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
            Zaciatok transakcie
            </summary>
            <param name="level">The isolation level under which the transaction should run.</param>
            <exception cref="T:System.InvalidOperationException">
            Chyba vyvolana v pripade ze konekcia nie je aktivna
            </exception>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.EndTransaction">
            <summary>
            Koniec transakcie
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Chyba vyvolana v pripade ze nie je aktivna ziadna transakcia
            </exception>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.RollbackTransaction">
            <summary>
            Vratenie zmien transakcie
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Chyba vyvolana v pripade ze nie je aktivna ziadna transakcia
            </exception>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.ExecuteReader(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona pozadovany prikaz na aktivne pripojenie k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.Data.SqlClient.SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">Prikaz ktory chceme vykonat</param>
            <returns>The first column of the first row in the result set, or a null reference</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.ExecuteNonQuery(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona pozadovany prikaz na aktivne pripojenie k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.Data.SqlClient.SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">Prikaz ktory chceme vykonat</param>
            <returns>The number of rows affected.</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.ExecuteScalarWithQuery(System.String)">
            <summary>
            Vykona vstupnu query a vrati scalarnu hodnotu
            </summary>
            <param name="query">Query na vykonanie prikazu</param>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <returns>The first column of the first row in the result set, or a null reference</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.ExecuteScalar(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona pozadovany prikaz na aktivne pripojenie k SQL serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.Data.SqlClient.SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">Prikaz ktory chceme vykonat</param>
            <returns>The first column of the first row in the result set, or a null reference</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.DataFill(System.Data.SqlClient.SqlCommand)">
            <summary>
            Nacita pozadovane data z databazy
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.Data.SqlClient.SqlException">
            Chyba tykajuca sa SQL servera alebo commandu
            </exception>
            <exception cref="T:System.Exception">
            Ina chyba v ramci metody
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <exception cref="T:System.ArgumentException">
            Command neobsahuje ziadny CommandText
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Vynimka nastavne v pripade ze je metoda volana ak je klient v inom stave ako 'Start'
            </exception>
            <param name="command">prikaz na nacitanie dat</param>
            <returns>Data ktore boli nacitane z databazy</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.ToString">
            <summary>
            Vrati meno, popis triedy
            </summary>
            <returns>Meno</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalStart">
            <summary>
            Interne spustenie klienta
            </summary>
            <returns>True = spustenie klienta bolo uspesne</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalPause">
            <summary>
            Pozastavi funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalStop">
            <summary>
            Ukonci funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalDispose">
            <summary>
            Vykona pred ukoncenim klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalChange(System.Data.SqlClient.SqlConnectionStringBuilder)">
            <summary>
            Initialize this class
            </summary>
            <param name="builder">Builder na vytvorenie SQL connection stringu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalCheckClientState">
            <summary>
            Overi stav klienta a komunikaciu pri volani public metody
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalCheckConnection">
            <summary>
            Overi stav spojenia. Ak spojenie nie je vykona start automatickeho reconnectu
            </summary>
            <returns>True = spojenie je aktivne</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalConnect">
            <summary>
            Spusti automaticky connect k sql serveru
            </summary>
            <returns>True = spojenie bolo vytvorene, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalDisconnect">
            <summary>
            Ukonci automaticky reconnect alebo aktivne spojenie k sql serveru
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalOpenConnection">
            <summary>
            Inicializuje a otvori spojenie na definovany _sqlServer a databazu
            </summary>
            <returns>True = connect bol uspesny</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.InternalCloseConnection">
            <summary>
            Ukonci spojenie s sql serverom
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.GetConnectionString">
            <summary>
            Vrati connection string na pripojeni k SQL serveru
            </summary>
            <returns>ConnectionString</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.OnConnectionStateChange(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci zmenu stavu pripojenia
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClientBase.OnConnectingFault(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci uplynutie timeoutu na pripojenie k sql serveru
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:Project858.Data.SqlClient.SqlClientBase._connectingFaultEvent">
            <summary>
            Event oznamujuci uplynutie intervalu na pripojenie k sql serveru
            </summary>
        </member>
        <member name="E:Project858.Data.SqlClient.SqlClientBase.ConnectingFaultEvent">
            <summary>
            Event oznamujuci uplynutie intervalu na pripojenie k sql serveru
            </summary>
        </member>
        <member name="E:Project858.Data.SqlClient.SqlClientBase._connectionStateChangeEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
        </member>
        <member name="E:Project858.Data.SqlClient.SqlClientBase.ConnectionStateChangeEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClientBase.TruncateValue">
            <summary>
            Definuje ci dojde k skracovaniu hodnot pri vlozeni do DB
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClientBase.ConnectionStateChangeEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ConnectionStateChangeEvent' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClientBase.ConnectingFaultEventAsync">
            <summary>
            (Get / Set) Definuje ci je event 'ConnectingFaultEvent' v asynchronnom mode
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClientBase.ConnectionStringBuilder">
            <summary>
            (Get) String builder na vytvoreie connection stringu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClientBase.ConnectionState">
            <summary>
            (Get) Vrati stav aktualneho pripojenia k sql serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="T:Project858.Data.SqlClient.TableAttribute">
            <summary>
            Atribut na definovanie informacii o tabulke
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.TableAttribute.Name">
            <summary>
            Meno tabulky
            </summary>
        </member>
        <member name="T:Project858.Diagnostics.ConsoleLogger">
            <summary>
            Zaloguje informacie do kontrolnej consoly v zvolenom formate
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.ConsoleLogger._globalLock">
            <summary>
            Pomocny synchronizacny objekt
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.ConsoleLogger.WriteLine(System.String,System.Object[])">
            <summary>
            Zapise data do konzoly v zvolenom formate
            </summary>
            <param name="format">String format</param>
            <param name="arg">Argumenty</param>
        </member>
        <member name="M:Project858.Diagnostics.ConsoleLogger.WriteLine(System.Object)">
            <summary>
            Zapise data do konzoly v zvolenom formate
            </summary>
            <param name="object">Objekty ktory chceme vypisat. (ToString())</param>
        </member>
        <member name="T:Project858.Diagnostics.TraceEventArgs">
            <summary>
            EventArgs pre event oznamujuci poziadavku na logovanie informacii
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceEventArgs.#ctor(System.DateTime,System.String,Project858.Diagnostics.TraceTypes,System.String)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Chybny argument typu String
            </exception>
            <param name="time">Cas a datum vzniku logovacej spravy</param>
            <param name="modul">Meno modulu ktory spravu vytvorill</param>
            <param name="traceType">Typ logovacej spravy</param>
            <param name="message">Sprava s informaciou</param>
        </member>
        <member name="F:Project858.Diagnostics.TraceEventArgs.time">
            <summary>
            Cas a datum vzniku spravy
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceEventArgs.modul">
            <summary>
            Modul ktory spravu vytvoril
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceEventArgs.traceType">
            <summary>
            Typ logovacej spravy
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceEventArgs.message">
            <summary>
            Sprava informacia....
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceEventArgs.Time">
            <summary>
            (Get) Cas a datum vzniku spravy
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceEventArgs.Modul">
            <summary>
            (Get) Modul ktory spravu vytvoril
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceEventArgs.TraceType">
            <summary>
            (Get) Typ logovacej spravy
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceEventArgs.Message">
            <summary>
            (Get) Sprava informacia....
            </summary>
        </member>
        <member name="T:Project858.Diagnostics.TraceEventHandler">
            <summary>
            Delegat ako predpis pre event oznamujuci poziadavku na logovanie informacii
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">TraceEventArgs</param>
        </member>
        <member name="T:Project858.Drawing.ImageUtility">
            <summary>
            Rozne pomocne metody na upravu a spravu obrazkov
            </summary>
        </member>
        <member name="F:Project858.Drawing.ImageUtility._disabledImageColorMatrix">
            <summary>
            Color Metrix na zmenu farebnej sklay
            </summary>
        </member>
        <member name="M:Project858.Drawing.ImageUtility.SetOpacity(System.Drawing.Image,System.Single)">
            <summary>
            Nastavi obrazku Opacity parameter
            </summary>
            <param name="image">Obrazok na ktory chcem nastavit opacity</param>
            <param name="imgOpac">Hodnota Opacity</param>
            <returns>Upraveny obrazok</returns>
        </member>
        <member name="M:Project858.Drawing.ImageUtility.CreateDisabledImage(System.Drawing.Image)">
            <summary>
            Spracuje vstupny obrazok a vrati obrazok so zmenenou farebnou skalou
            </summary>
            <param name="normalImage">Obrazok ktory chceme upravit</param>
            <returns>Upraveny obrazok</returns>
        </member>
        <member name="M:Project858.Drawing.ImageUtility.GetDisabledImageColorMatrix">
            <summary>
            Vytvori a vrati Matrix na upravu obrazku do disbale modu
            </summary>
            <returns>ColorMatrix na upravu obrazku</returns>
        </member>
        <member name="M:Project858.Drawing.ImageUtility.MultiplyColorMatrix(System.Single[][],System.Single[][])">
            <summary>
            Vynasobi dve farebne sklady
            </summary>
            <param name="matrix1">Prva Matrix na nasobenie</param>
            <param name="matrix2">Druha Matrix na nasobenie</param>
            <returns>Vysledok nasobenia metrix</returns>
        </member>
        <member name="P:Project858.Drawing.ImageUtility.DisabledImageColorMatrix">
            <summary>
            (Get) Vrati metrix na zmenu farebnej skaly obrazku
            </summary>
        </member>
        <member name="T:Project858.Drawing.UseGraphicsAntiAlias">
            <summary>
            Nastavu SmoothingMode=AntiAlias ktory sa zrusi pri _disposed.
            </summary>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsAntiAlias.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize this class
            </summary>
            <param name="graphics">Graphic na vykreslovanie</param>
        </member>
        <member name="F:Project858.Drawing.UseGraphicsAntiAlias._graphics">
            <summary>
            Graphic na vykreslovanie
            </summary>
        </member>
        <member name="F:Project858.Drawing.UseGraphicsAntiAlias._smoothingMode">
            <summary>
            Povodny mod
            </summary>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsAntiAlias.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be _disposed; otherwise, false.</param>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsAntiAlias.Dispose">
            <summary>
            Releases all resources used by the class. 
            </summary>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsAntiAlias.Finalize">
            <summary>
            Deinitialize this class
            </summary>
        </member>
        <member name="T:Project858.Drawing.UseGraphicsClearTypeGridFit">
            <summary>
            Nastavi TextRenderingHint.ClearTypeGridFit ktory sa zrusi pri _disposed.
            </summary>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsClearTypeGridFit.#ctor(System.Drawing.Graphics)">
            <summary>
            Initialize a new instance of the UseClearTypeGridFit class.
            </summary>
            <param name="graphics">Graphics instance.</param>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsClearTypeGridFit.Dispose">
            <summary>
            Releases all resources used by the class. 
            </summary>
        </member>
        <member name="F:Project858.Drawing.UseGraphicsClearTypeGridFit._graphics">
            <summary>
            Graphic na vykreslovanie
            </summary>
        </member>
        <member name="F:Project858.Drawing.UseGraphicsClearTypeGridFit._textRenderingHint">
            <summary>
            Renderer
            </summary>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsClearTypeGridFit.Dispose(System.Boolean)">
            <summary> 
            Clean up any resources being used.
            </summary>
            <param name="disposing">true if managed resources should be _disposed; otherwise, false.</param>
        </member>
        <member name="M:Project858.Drawing.UseGraphicsClearTypeGridFit.Finalize">
            <summary>
            Deinitialize this class
            </summary>
        </member>
        <member name="T:Project858.Globalization.CalendarNames">
            <summary>
            Kalendar min.
            Data: http://www.kalendar.sk/medzinarodne/
            Data: http://www.juko56.dobrosoft.sk/historia4.htm
            </summary>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.#cctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Globalization.CalendarNames._itemCollection">
            <summary>
            Kolekcia dostupnych dat
            </summary>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.GetItemData(Project858.Globalization.CalendarNames.ItemDate)">
            <summary>
            Vrati data ku konrketnemu casovemu itemu
            </summary>
            <param name="date">Casovy item definujuci den a mesiac</param>
            <returns>Data z pozadovaneho dna a mesiaa alebo null</returns>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollection">
            <summary>
            Inicializuje kolekciu dostupnych dat
            </summary>
            <returns>Kolekcia dostupnych dat</returns>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionJanuary(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre januar
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionFebruary(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre februar
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionMarch(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre marec
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionApril(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre april
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionMay(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre May
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionJune(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre June
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionJuly(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre July
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionAugust(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre August
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionSeptember(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre September
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionOctober(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre October
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionNovember(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre November
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.InitializeItemCollectionDecember(System.Collections.Generic.Dictionary{Project858.Globalization.CalendarNames.ItemDate,Project858.Globalization.CalendarNames.ItemData}@)">
            <summary>
            Inicializuje data pre December
            </summary>
            <param name="collection">Kolekcia do ktorej chceme data vlozit</param>
        </member>
        <member name="T:Project858.Globalization.CalendarNames.ItemDate">
            <summary>
            Item definujuci datum a den v mesiaci
            </summary>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.ItemDate.#ctor(System.Int32,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <param name="month">Mesiac</param>
            <param name="day">Dan</param>
        </member>
        <member name="F:Project858.Globalization.CalendarNames.ItemDate._month">
            <summary>
            Mesiac
            </summary>
        </member>
        <member name="F:Project858.Globalization.CalendarNames.ItemDate._day">
            <summary>
            Rok
            </summary>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.ItemDate.Equals(System.Object)">
            <summary>
            Overi aktualny objekt so vstupnym objektom
            </summary>
            <param name="obj">Objekt ktory chceme porovnat</param>
            <returns>True = objekty su zhodne</returns>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.ItemDate.GetHashCode">
            <summary>
            Vrati hesovaci kod triedy
            </summary>
            <returns>Hesovaci kod</returns>
        </member>
        <member name="P:Project858.Globalization.CalendarNames.ItemDate.Month">
            <summary>
            Mesiac
            </summary>
        </member>
        <member name="P:Project858.Globalization.CalendarNames.ItemDate.Day">
            <summary>
            Rok
            </summary>
        </member>
        <member name="T:Project858.Globalization.CalendarNames.ItemData">
            <summary>
            Data prisluchajuce konkretnemu casovemu itemu
            </summary>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.ItemData.#ctor(System.String)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany vstupny argument
            </exception>
            <param name="name">Meno alebo udalost prisluchajuca danemu dnu</param>
        </member>
        <member name="F:Project858.Globalization.CalendarNames.ItemData._internationalDayInfo">
            <summary>
            Kolekcia udalosti patriacich medzi medzinarodne dni
            </summary>
        </member>
        <member name="F:Project858.Globalization.CalendarNames.ItemData._name">
            <summary>
            Meno alebo udalost prisluchajuca danemu dnu 
            </summary>
        </member>
        <member name="M:Project858.Globalization.CalendarNames.ItemData.AddInternationalDayInfo(System.String)">
            <summary>
            Prida info o medzinarodnom dni
            </summary>
            <param name="info">Info ktore chceme pridat</param>
        </member>
        <member name="P:Project858.Globalization.CalendarNames.ItemData.Name">
            <summary>
            Meno alebo udalost prisluchajuca danemu dnu 
            </summary>
        </member>
        <member name="P:Project858.Globalization.CalendarNames.ItemData.InternationalDayInfo">
            <summary>
            Kolekcia udalosti patriacich medzi medzinarodne dni
            </summary>
        </member>
        <member name="T:Project858.Net.DataEventHandler">
            <summary>
            Delegat na oznamenie vykonania operacie s datami
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">DataEventArgs</param>
        </member>
        <member name="T:Project858.Management.ExitTheWin">
            <summary>
            Implements methods to exit Windows.
            </summary>
        </member>
        <member name="F:Project858.Management.ExitTheWin.TOKEN_ADJUST_PRIVILEGES">
            <summary>
            Required to enable or disable the privileges in an access token.
            </summary>
        </member>
        <member name="F:Project858.Management.ExitTheWin.TOKEN_QUERY">
            <summary>
            Required to query an access token.
            </summary>
        </member>
        <member name="F:Project858.Management.ExitTheWin.SE_PRIVILEGE_ENABLED">
            <summary>
            The privilege is enabled.
            </summary>
        </member>
        <member name="F:Project858.Management.ExitTheWin.FORMAT_MESSAGE_FROM_SYSTEM">
            <summary>
            Specifies that the function should search the system message-table resource(s) for the 
            requested message.
            </summary>
        </member>
        <member name="F:Project858.Management.ExitTheWin.EWX_FORCE">
            <summary>
            Forces processes to terminate. When this flag is set, 
            the system does not send the WM_QUERYENDSESSION and WM_ENDSESSION messages. 
            This can cause the applications to lose data. Therefore, you should only use this flag in an 
            emergency.
            </summary>
        </member>
        <member name="M:Project858.Management.ExitTheWin.SystemEvent(Project858.Management.SystemEventTypes,System.Boolean)">
            <summary>
            Exits windows (and tries to enable any required access rights, if necesarry).
            </summary>
            <param name="how">One of the RestartOptions values that specifies how to exit windows.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <exception cref="T:Project858.Management.PrivilegeException">There was an error while requesting a required privilege.</exception>
            <exception cref="T:System.PlatformNotSupportedException">The requested exit method is not supported on this platform.</exception>
        </member>
        <member name="M:Project858.Management.ExitTheWin.CheckEntryPoint(System.String,System.String)">
            <summary>
            Checks whether a specified method exists on the local computer.
            </summary>
            <param name="library">The library that holds the method.</param>
            <param name="method">The entry point of the requested method.</param>
            <returns>True if the specified method is present, false otherwise.</returns>
        </member>
        <member name="M:Project858.Management.ExitTheWin.ExitWindows(System.Int32,System.Boolean)">
            <summary>
            Exits windows (and tries to enable any required access rights, if necesarry).
            </summary>
            <param name="how">One of the RestartOptions values that specifies how to exit windows.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <remarks>This method cannot hibernate or suspend the system.</remarks>
            <exception cref="T:Project858.Management.PrivilegeException">There was an error while requesting a required privilege.</exception>
        </member>
        <member name="M:Project858.Management.ExitTheWin.EnableToken(System.String)">
            <summary>
            Tries to enable the specified privilege.
            </summary>
            <param name="privilege">The privilege to enable.</param>
            <exception cref="T:Project858.Management.PrivilegeException">There was an error while requesting a required privilege.</exception>
            <remarks>Thanks to Michael S. Muegel for notifying us about a bug in this code.</remarks>
        </member>
        <member name="M:Project858.Management.ExitTheWin.SuspendSystem(System.Boolean,System.Boolean)">
            <summary>
            Suspends or hibernates the system.
            </summary>
            <param name="hibernate">True if the system has to hibernate, false if the system has to be suspended.</param>
            <param name="force">True if the exit has to be forced, false otherwise.</param>
            <exception cref="T:System.PlatformNotSupportedException">The requested exit method is not supported on this platform.</exception>
        </member>
        <member name="M:Project858.Management.ExitTheWin.FormatError(System.Int32)">
            <summary>
            Formats an error number into an error message.
            </summary>
            <param name="number">The error number to convert.</param>
            <returns>A string representation of the specified error number.</returns>
        </member>
        <member name="T:Project858.Management.PrivilegeException">
            <summary>
            The exception that is thrown when an error occures when requesting a specific privilege.
            </summary>
        </member>
        <member name="M:Project858.Management.PrivilegeException.#ctor">
            <summary>
            Initializes a new instance of the PrivilegeException class.
            </summary>
        </member>
        <member name="M:Project858.Management.PrivilegeException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the PrivilegeException class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="T:Project858.Management.SystemEventTypes">
            <summary>
            Specifies the type of restart options that an application can use.
            </summary>
        </member>
        <member name="F:Project858.Management.SystemEventTypes.LogOff">
            <summary>
            Shuts down all processes running in the security context of the process that called the ExitWindowsEx function. Then it logs the user off.
            </summary>
        </member>
        <member name="F:Project858.Management.SystemEventTypes.PowerOff">
            <summary>
            Shuts down the system and turns off the power. The system must support the power-off feature.
            </summary>
        </member>
        <member name="F:Project858.Management.SystemEventTypes.Reboot">
            <summary>
            Shuts down the system and then restarts the system.
            </summary>
        </member>
        <member name="F:Project858.Management.SystemEventTypes.ShutDown">
            <summary>
            Shuts down the system to a point at which it is safe to turn off the power. All file buffers have been flushed to disk, and all running processes have stopped. If the system supports the power-off feature, the power is also turned off.
            </summary>
        </member>
        <member name="F:Project858.Management.SystemEventTypes.Suspend">
            <summary>
            Suspends the system.
            </summary>
        </member>
        <member name="F:Project858.Management.SystemEventTypes.Hibernate">
            <summary>
            Hibernates the system.
            </summary>
        </member>
        <member name="T:Project858.Management.Volume.Windows7.PropertyStore">
            <summary>
            Property Store class, only supports reading properties at the moment.
            </summary>
        </member>
        <member name="T:Project858.Net.DataEventArgs">
            <summary>
            EventArgs pre event na prichod dat
            </summary>
        </member>
        <member name="M:Project858.Net.DataEventArgs.#ctor(System.Byte[],System.Net.IPEndPoint)">
            <summary>
            Initialize this class
            </summary>
            <param name="data">Prijate data</param>
            <param name="remoteEndPoint">EndPoint odosielatela dat</param>
        </member>
        <member name="F:Project858.Net.DataEventArgs.m_data">
            <summary>
            prijate data
            </summary>
        </member>
        <member name="F:Project858.Net.DataEventArgs.m_remoteEndPoint">
            <summary>
            EndPoint odosielatela dat
            </summary>
        </member>
        <member name="P:Project858.Net.DataEventArgs.Data">
            <summary>
            (Get) Prijate _data
            </summary>
        </member>
        <member name="P:Project858.Net.DataEventArgs.RemoteEndPoint">
            <summary>
            (Get) End point z ktoreho boli data prijate
            </summary>
        </member>
        <member name="T:Project858.Net.IpEndPointCollection">
            <summary>
            Kolekia IpEndPointov ku ktorym sa chceme pripojit
            </summary>
        </member>
        <member name="M:Project858.Net.IpEndPointCollection.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Net.IpEndPointCollection.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initialize this class
            </summary>
            <param name="ipEndPoint">IpEndPoint ktory chceme pridat do kolekcie</param>
        </member>
        <member name="M:Project858.Net.IpEndPointCollection.Add(System.Net.IPEndPoint)">
            <summary>
            Prida element do kolekcie. Ak uz v kolekcii nieco existuje overi ci su typy zhodne. 
            Kolekcia moze obsahovat len elementy zhoddeho typu
            </summary>
            <exception cref="T:System.ArgumentNullException">
            neinicializovany vstupny argument
            </exception>
            <exception cref="T:System.ArgumentException">
            Nespravna struktura dat
            </exception>
            <param name="ipEndPoint">Element ktory chceme pridat</param>
        </member>
        <member name="M:Project858.Net.IpEndPointCollection.AddRange(System.Collections.Generic.IEnumerable{System.Net.IPEndPoint})">
            <summary>
            Prida ipEndPoints do kolekcie. Ak uz v kolekcii nieco existuje overi ci su typy zhodne. 
            </summary>
            <exception cref="T:System.ArgumentNullException">
            neinicializovany vstupny argument
            </exception>
            <exception cref="T:System.ArgumentException">
            Nespravna struktura dat
            </exception>
            <param name="ipEndPoints">Kolekcia ipEndPoints ktore chceme pridat</param>
        </member>
        <member name="T:Project858.Net.ITransportClient">
            <summary>
            Interface ako predpis pre transportnu komunikacnu vrstvu
            </summary>
        </member>
        <member name="M:Project858.Net.ITransportClient.Write(System.Byte[])">
            <summary>
            Zapise _data na komunikacnu linku
            </summary>
            <returns>True = _data boli uspesne zapisane, False = chyba pri zapise dat</returns>
        </member>
        <member name="P:Project858.Net.ITransportClient.IsConnected">
            <summary>
            (Get) Detekcia pripojenia
            </summary>
        </member>
        <member name="E:Project858.Net.ITransportClient.ConnectedEvent">
            <summary>
            Event na oznamenie spustenia spojenia pre vyssu vrstvu
            </summary>
        </member>
        <member name="E:Project858.Net.ITransportClient.DisconnectedEvent">
            <summary>
            Event na oznamenie ukoncenia spojenia pre vyssu vrstvu
            </summary>
        </member>
        <member name="E:Project858.Net.ITransportClient.ReceivedDataEvent">
            <summary>
            Event na oznamenue prichodu dat na transportnej vrstve
            </summary>
        </member>
        <member name="T:Project858.Net.TcpClientEventArgs">
            <summary>
            EventArgs ako sucast eventu oznamujceho prijatie klienta
            </summary>
        </member>
        <member name="M:Project858.Net.TcpClientEventArgs.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            Initialize this class
            </summary>
            <param name="client">Client ktory bol prijaty serverom</param>
        </member>
        <member name="F:Project858.Net.TcpClientEventArgs._client">
            <summary>
            Klient ktory bol serverom akceptovany
            </summary>
        </member>
        <member name="P:Project858.Net.TcpClientEventArgs.Client">
            <summary>
            Klient ktory bol serverom akceptovany
            </summary>
        </member>
        <member name="T:Project858.Net.TcpClientEventHandler">
            <summary>
            Delegat ako predpis pre event oznamujuci uspesne akceptovanie klienta serverom
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">TcpClientEventArgs</param>
        </member>
        <member name="T:Project858.Net.TcpContractServer">
            <summary>
            Nadstavba TCP servera s rozsirenim
            </summary>
        </member>
        <member name="T:Project858.Net.TcpServer">
            <summary>
            Tcp server zabezpecujuci akceptovanie klientov na zvolenej adrese a porte
            </summary>
        </member>
        <member name="M:Project858.Net.TcpServer.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Net.TcpServer.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany argument
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Rozsah portu mimo povolene hranice
            </exception>
            <param name="ipAddress">Ip adresa servera</param>
            <param name="ipPort">Ip port servera</param>
        </member>
        <member name="F:Project858.Net.TcpServer.m_isListened">
            <summary>
            Definuje ci server pocuva na uvedenom porte alebo nie
            </summary>
        </member>
        <member name="F:Project858.Net.TcpServer.m_processThread">
            <summary>
            Pracovne vlakno zabezpecujuce akceptovanie klientov
            </summary>
        </member>
        <member name="F:Project858.Net.TcpServer.m_listener">
            <summary>
            Listener zabezpecujuci akceptovanie klientov
            </summary>
        </member>
        <member name="F:Project858.Net.TcpServer.m_ipAddress">
            <summary>
            Ip adresa na ktorej pocuva server
            </summary>
        </member>
        <member name="F:Project858.Net.TcpServer.m_ipPort">
            <summary>
            Ip port na akom pocuva server
            </summary>
        </member>
        <member name="M:Project858.Net.TcpServer.Change(System.Net.IPAddress,System.Int32)">
            <summary>
            Umozni zenu ip adresy a ip portu. Zmena sa prejavi az po opatovnom spusteni
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany argument
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Rozsah portu mimo povolene hranice
            </exception>
            <param name="ipAddress">Ip adresa servera</param>
            <param name="ipPort">Ip port servera</param>
        </member>
        <member name="M:Project858.Net.TcpServer.InternalStart">
            <summary>
            Inicializuje server na pzoadovanej adrese a porte
            </summary>
            <returns>True = start klienta bol uspesny</returns>
        </member>
        <member name="M:Project858.Net.TcpServer.InternalStop">
            <summary>
            Ukonci server a akceptovanie klientov
            </summary>
        </member>
        <member name="M:Project858.Net.TcpServer.InternalListenerProcess">
            <summary>
            Obsluha pracovneho vlakna
            </summary>
        </member>
        <member name="M:Project858.Net.TcpServer.InternalListen">
            <summary>
            Metoda zabezpecujuca akceptovanie klientov
            </summary>
        </member>
        <member name="M:Project858.Net.TcpServer.OnTcpClientReceived(Project858.Net.TcpClientEventArgs)">
            <summary>
            Vygeneruje event oznamujuci prijatie xml dokumentu
            </summary>
            <param name="e">XmlDocumentEventArgs</param>
        </member>
        <member name="E:Project858.Net.TcpServer.m_tcpClientReceivedEvent">
            <summary>
            Event oznamujuci akceptovanie klienta serverom
            </summary>
        </member>
        <member name="E:Project858.Net.TcpServer.TcpClientReceivedEvent">
            <summary>
            Event oznamujuci akceptovanie klienta serverom
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.TcpServer.IsListened">
            <summary>
            (Get / Set) Definuje ci server pocuva na uvedenom porte alebo nie
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="M:Project858.Net.TcpContractServer.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Net.TcpContractServer.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <param name="ipAddress">Ip adresa servera</param>
            <param name="ipPort">Ip port servera</param>
        </member>
        <member name="F:Project858.Net.TcpContractServer.m_maxConnection">
            <summary>
            Maximalny pocet pripojenych klientov
            </summary>
        </member>
        <member name="F:Project858.Net.TcpContractServer.m_contracts">
            <summary>
            Kolekcia aktualne pripojenych klientov a ich obsluh
            </summary>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalStart">
            <summary>
            Inicializuje server na pzoadovanej adrese a porte
            </summary>
            <returns>True = start klienta bol uspesny</returns>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalStop">
            <summary>
            Ukonci server a akceptovanie klientov
            </summary>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalCreateContract(System.Net.Sockets.TcpClient)">
            <summary>
            Inicializuje, spusti a vrati contract na obsluhu akceptovaneho klienta
            </summary>
            <param name="client">Client ktory bol akceptovany</param>
            <returns>Contract na obsluhu akceptovaneho klienta</returns>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalRemoveContract(Project858.Net.ITransportClient)">
            <summary>
            Odoberie contract klienta ktory sa odpojil. Prepis metody by mal zabezpecit volanie base.InternalRemoveContract(ITransportClient contrat);
            </summary>
            <param name="contrat">Contract ktory vykonaval obsluhu klienta ktory zrusil spojenie</param>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalStopAllContract">
            <summary>
            Ukonci vsetky contracty pred ukoncim celeho servera
            </summary>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalStopContract(Project858.Net.ITransportClient)">
            <summary>
            Ukonci contract pred ukoncenim celeho servera
            </summary>
            <param name="contract">Contract ktory chceme ukoncit</param>
        </member>
        <member name="M:Project858.Net.TcpContractServer.OnTcpClientReceived(Project858.Net.TcpClientEventArgs)">
            <summary>
            Prepis a rozsirenie prijatia / akceptovania klienta
            </summary>
            <param name="e">TcpClientEventArgs</param>
        </member>
        <member name="M:Project858.Net.TcpContractServer.contract_DisconnectedEvent(System.Object,System.EventArgs)">
            <summary>
            Reaguje na ukoncenie klienta. Odoberie contract z kolekcie
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalCreateContract(Project858.Net.ITransportClient)">
            <summary>
            Prida instanciu ktora obsluhuje prijateho / akceptovaneho klienta
            </summary>
            <param name="contract">Contract obsluhujuci akceptovaneho klienta</param>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalRemoveSpecifiedContract(Project858.Net.ITransportClient)">
            <summary>
            Odoberie instanciu ktora obsluhovala prijateho / akceptovaneho klienta ktory ukoncil spojenie
            </summary>
            <param name="contract">Contract obsluhujuci akceptovaneho klienta</param>
        </member>
        <member name="M:Project858.Net.TcpContractServer.InternalCheckContracts">
            <summary>
            Overi maximalny pocet moznych klientov a vykona start alebo stop listenera
            </summary>
            <returns>True = je mozne aktivovat dalsieho klient</returns>
        </member>
        <member name="P:Project858.Net.TcpContractServer.Contracts">
            <summary>
            (Get) Kolekcia aktualne pripojenych klientov a ich obsluh
            </summary>
        </member>
        <member name="P:Project858.Net.TcpContractServer.IsConnected">
            <summary>
            (Get / Set) Maximalny pocet pripojenych klientov. Povoleny rozsah je od 1 do 100
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Mimo povoleneho rozsahu. Povoleny rozsah je od 1 do 100
            </exception>
        </member>
        <member name="T:Project858.Net.TcpTransportClient">
            <summary>
            Zakladna komunikacna vrstva, pracujuca na linkovej urovni TCP
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.#ctor(System.Net.IPEndPoint)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovana IPAddress
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Chybny argument / rozsah IP portu
            </exception>
            <param name="ipEndPoint">IpPoint ku ktoremu sa chceme pripojit</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.#ctor(Project858.Net.IpEndPointCollection)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovana IPAddress
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Chybny argument / rozsah IP portu
            </exception>
            <param name="ipEndPoints">Kolekcia IpEndPointov ku ktory sa bude klient striedavo pripajat pri autoreconnecte</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.#ctor(System.Net.IPEndPoint,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovana IPAddress
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Chybny argument jedneho z timeoutov, alebo IP portu
            </exception>
            <param name="ipEndPoint">IpPoint ku ktoremu sa chceme pripojit</param>
            <param name="tcpReadTimeout">TcpClient Read Timeout</param>
            <param name="tcpWriteTimeout">TcpClient Write Timeout</param>
            <param name="nsReadTimeout">NetworkStream Read Timeout</param>
            <param name="nsWriteTimeout">NetworkStream Write Timeout</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.#ctor(Project858.Net.IpEndPointCollection,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovana IPAddress
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Chybny argument jedneho z timeoutov, alebo IP portu
            </exception>
            <param name="ipEndPoints">Kolekcia IpEndPointov ku ktory sa bude klient striedavo pripajat pri autoreconnecte</param>
            <param name="tcpReadTimeout">TcpClient Read Timeout</param>
            <param name="tcpWriteTimeout">TcpClient Write Timeout</param>
            <param name="nsReadTimeout">NetworkStream Read Timeout</param>
            <param name="nsWriteTimeout">NetworkStream Write Timeout</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.#ctor(System.Net.Sockets.TcpClient)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany TcpClient
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Chybny argument jedneho z timeoutov
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Ak je RemoteEndPoint v tcpClientovi Disposed
            </exception>
            <param name="tcpClient">Client zabezpecujuci tcp komunikaciu</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.#ctor(System.Net.Sockets.TcpClient,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany TcpClient
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Chybny argument jedneho z timeoutov
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Ak je RemoteEndPoint v tcpClientovi Disposed
            </exception>
            <param name="tcpClient">Client zabezpecujuci tcp komunikaciu</param>
            <param name="tcpReadTimeout">TcpClient Read Timeout</param>
            <param name="tcpWriteTimeout">TcpClient Write Timeout</param>
            <param name="nsReadTimeout">NetworkStream Read Timeout</param>
            <param name="nsWriteTimeout">NetworkStream Write Timeout</param>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_lastIpEndPointIndex">
            <summary>
            Index posledneho IpEndPointu na ktory sa pokusilo pripojit
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_canAutoReconnect">
            <summary>
            Definuje ci je mozne vyuzit auto recconect spojenia
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_networkStream">
            <summary>
            Stream na komunikaciu
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_tcpReadTimeout">
            <summary>
            TcpClient Read Timeout
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_tcpWriteTimeout">
            <summary>
            TcpClient Write Timeout
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_nsReadTimeout">
            <summary>
            NetworkStream Read Timeout
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_nsWriteTimeout">
            <summary>
            NetworkStream Write Timeout
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_isConnectied">
            <summary>
            detekcia pripojenia
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_tcpClient">
            <summary>
            Client na pripojenie cez TCP/IP
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_ipEndPoints">
            <summary>
            pristupovy bod cez ktory sme pripojeny
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_autoReconnectTimer">
            <summary>
            Pomocny timer na vykonavanie automatikeho reconnectu v pripade padu spojenia
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_autoReconnectTimeout">
            <summary>
            Timeout v akom sa pravidelne vykonava pokus o pripojenie
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_autoReconnect">
            <summary>
            Definuje ci je zapnute automaticke pripajanie klienta
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_connectionState">
            <summary>
            Stav v akom sa nachadza komunikacia / komunikacny kanal
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.m_actualIpEndPoint">
            <summary>
            Aktualny ip end point na ktory sa pripajame alebo na ktorom sme pripojeny
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.ToString">
            <summary>
            Vrati meno, popis klienta
            </summary>
            <returns>Popis klienta</returns>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.Write(System.Byte[])">
            <summary>
            Zapise _data na komunikacnu linku
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Vynimka v pripade ze sa snazime zapisat _data, ale spojenie nie je.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
            <returns>True = _data boli uspesne zapisane, False = chyba pri zapise dat</returns>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.InternalStart">
            <summary>
            Podla inicializacie otvori TCP spojenie na pripojeneho clienta
            </summary>
            <returns>True = uspesne otvorene spojenie, False = chyba pri otvarani spojenia</returns>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.InternalStop">
            <summary>
            Zatvori spojenie
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
            <returns>True = uspesne zatvorene spojenie, False = chyba pri zatvarani spojenia</returns>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.GetIpEndPoint">
            <summary>
            Vrati ipEndPoint ku ktoremu sa nasledne klient pokusi pripojit
            </summary>
            <returns>IpPoint ku ktoremu sa pokusime pripojit</returns>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.InternalConnect(System.Boolean)">
            <summary>
            Vykona interny pokus o pripojenie k vzdialenemu bodu
            </summary>
            <param name="starting">Definuje ci ide o pripajanie pri starte alebo reconnecte</param>
            <returns>True = spojenie bolo uspesne vytvorene</returns>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.InternalOnConnect">
            <summary>
            Interna snaha o pripojenie
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.InternalDisconnect(System.Boolean)">
            <summary>
            Interny disconnect
            </summary>
            <param name="closing">Definuje ci doslo u ukonceniu alebo len preruseniu spojenia</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.ValidateConnection">
            <summary>
            Overi nastavenia triedy. Vykona start automatickehor reconnectu alebo ukonci klienta
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.InternalOnDisconnect">
            <summary>
            Interny disconnect
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.tcp_DataReceived(System.IAsyncResult)">
            <summary>
            Calback / prichod dat an streame
            </summary>
            <param name="ar">IAsyncResult</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.DataReceived(System.IAsyncResult)">
            <summary>
            Calback / prichod dat an streame
            </summary>
            <param name="ar">IAsyncResult</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.StartReconnect">
            <summary>
            Spusti timer na automatiky reconnect
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.StopReconnect">
            <summary>
            Ukonci timer na automaticky reconnect
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.TimerTick(System.Object)">
            <summary>
            Obsluha pre timer vykonavajuci automatiky recconnect
            </summary>
            <param name="obj">Object</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.ReconnectProcessing">
            <summary>
            Vykona automaticky reconnect
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.OnReceivedData(Project858.Net.DataEventArgs)">
            <summary>
            Vytvori asynchronne volanie na metodu zabezpecujucu vytvorenie eventu
            oznamujuceho prijatie dat
            </summary>
            <param name="e">EventArgs obsahujuci data</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.OnConnected(System.EventArgs)">
            <summary>
            Vytvori asynchronne volanie na metodu zabezpecujucu vytvorenie eventu
            oznamujuceho pripojenie
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.OnDisconnected(System.EventArgs)">
            <summary>
            Vytvori asynchronne volanie na metodu zabezpecujucu vytvorenie eventu
            oznamujuceho pad spojenia
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.OnChangeConnectionState(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujui zmenu stavu pripojenia
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:Project858.Net.TcpTransportClient._connectedEvent">
            <summary>
            Event na oznamenie spustenia spojenia pre vyssu vrstvu
            </summary>
        </member>
        <member name="E:Project858.Net.TcpTransportClient.ConnectedEvent">
            <summary>
            Event na oznamenie spustenia spojenia pre vyssu vrstvu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="E:Project858.Net.TcpTransportClient.disconnectedEvent">
            <summary>
            Event na oznamenie ukoncenia spojenia pre vyssu vrstvu
            </summary>
        </member>
        <member name="E:Project858.Net.TcpTransportClient.DisconnectedEvent">
            <summary>
            Event na oznamenie ukoncenia spojenia pre vyssu vrstvu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="E:Project858.Net.TcpTransportClient.m_receivedDataEvent">
            <summary>
            Event na oznamenue prichodu dat na transportnej vrstve
            </summary>
        </member>
        <member name="E:Project858.Net.TcpTransportClient.ReceivedDataEvent">
            <summary>
            Event na oznamenue prichodu dat na transportnej vrstve
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="E:Project858.Net.TcpTransportClient._changeConnectionStateEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
        </member>
        <member name="E:Project858.Net.TcpTransportClient.ChangeConnectionStateEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak nie je autoreconnect povoleny
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.AutoReconnect">
            <summary>
            (Get / Set) Definuje ci je zapnute automaticke pripajanie klienta
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave isDisposed
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak nie je autoreconnect povoleny
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.ConnectionState">
            <summary>
            (Get / Set) Stav v akom sa nachadza komunikacia / komunikacny kanal
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.ReconnectTimeout">
            <summary>
            (Get / Set) Timeout v akom sa pravidelne vykonava pokus o pripojenie. Minute = 2000, Max = 60000.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Nepovoleny rozsah timeotu
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak nie je autoreconnect povoleny
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.IpEndPoints">
            <summary>
            Kolekcia IPEndPointov ku ktorym sa klient pri reconnecte pripaja
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.IsConnected">
            <summary>
            (Get) Detekcia pripojenia
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.CanAutoReconnect">
            <summary>
            Definuje ci je mozne vyuzit auto recconect spojenia
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.ActualIpEndPoint">
            <summary>
            Aktualny ip end point na ktory sa pripajame alebo na ktorom sme pripojeny
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="T:Project858.Net.TcpTransportClient.SocketState">
            <summary>
            pomocna trieda na event na streame
            </summary>
        </member>
        <member name="M:Project858.Net.TcpTransportClient.SocketState.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.SocketState._data">
            <summary>
            Buffer na citanie _data
            </summary>
        </member>
        <member name="F:Project858.Net.TcpTransportClient.SocketState._stream">
            <summary>
            Stream cez ktory sa komunikuje
            </summary>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.SocketState.Client">
            <summary>
            Klient cez ktoreho prebieha komunikacia
            </summary>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.SocketState.Data">
            <summary>
            Buffer na citanie _data
            </summary>
        </member>
        <member name="P:Project858.Net.TcpTransportClient.SocketState.Stream">
            <summary>
            Stream cez ktory sa komunikuje
            </summary>
        </member>
        <member name="T:Project858.Net.UdpTransportClient">
            <summary>
            Klient zabezpecujuci komunikaciu pomocou udp protokolu
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.#ctor(System.Net.IPAddress,System.Int32,System.Net.IPAddress,System.Int32)">
            <summary>
            Initialize this class
            </summary>
            <param name="localAddress">Ip adresa na ktorej upd klient pocuva</param>
            <param name="localPort">Ip port na ktorom upd klient pocuva</param>
            <param name="remoteAddress">Ip adresa na ktoru sa data odosielaju</param>
            <param name="remotePort">Ip port na ktory sa data odosielaju</param>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.#ctor(System.Net.IPEndPoint,System.Net.IPEndPoint)">
            <summary>
            Initialize this class
            </summary>
            <param name="localIpEndPoint">Ip end point servera</param>
            <param name="remoteIpEndPoint">Ip end point kde klient pocuva</param>
        </member>
        <member name="F:Project858.Net.UdpTransportClient.m_isConnectied">
            <summary>
            detekcia pripojenia
            </summary>
        </member>
        <member name="F:Project858.Net.UdpTransportClient.m_thread">
            <summary>
            Thred zabezpecujuci citani dat.
            </summary>
        </member>
        <member name="F:Project858.Net.UdpTransportClient.m_connectionState">
            <summary>
            Stav v akom sa nachadza komunikacia / komunikacny kanal
            </summary>
        </member>
        <member name="F:Project858.Net.UdpTransportClient.m_remoteIpEndPoint">
            <summary>
            Ip end point kam je klient pripojeny
            </summary>
        </member>
        <member name="F:Project858.Net.UdpTransportClient.m_localIpEndPoint">
            <summary>
            Ip end point kde klient pocuva
            </summary>
        </member>
        <member name="F:Project858.Net.UdpTransportClient.m_client">
            <summary>
            Klient na udp komunikaciu
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.ToString">
            <summary>
            Vrati meno triedy
            </summary>
            <returns>Meno triedy</returns>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.Write(System.Byte[])">
            <summary>
            Zapise _data na komunikacnu linku
            </summary>
            <exception cref="T:System.InvalidOperationException">
            Vynimka v pripade ze sa snazime zapisat _data, ale spojenie nie je.
            </exception>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
            <returns>True = _data boli uspesne zapisane, False = chyba pri zapise dat</returns>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalStart">
            <summary>
            Vykona interny start klienta
            </summary>
            <returns>True = start klienta bol uspesny</returns>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalStop">
            <summary>
            Vykona interny stop klienta
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalConnect">
            <summary>
            Vykona interny pokus o pripojenie k vzdialenemu bodu
            </summary>
            <returns>True = spojenie bolo uspesne vytvorene</returns>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalDisconnect">
            <summary>
            Interny disconnect
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalInitializeThread">
            <summary>
            Inicializuje pracovne vlakno zabezpecujuce citanie dat
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalDeinitializeThread">
            <summary>
            Deinicializuje pracovne vlakno
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.InternalReceive">
            <summary>
            Pracovne vlakno zabezpecujuce citanie dat
            </summary>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.OnReceivedData(Project858.Net.DataEventArgs)">
            <summary>
            Vytvori asynchronne volanie na metodu zabezpecujucu vytvorenie eventu
            oznamujuceho prijatie dat
            </summary>
            <param name="e">EventArgs obsahujuci _data</param>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.OnConnected(System.EventArgs)">
            <summary>
            Vytvori asynchronne volanie na metodu zabezpecujucu vytvorenie eventu
            oznamujuceho pripojenie
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.OnDisconnected(System.EventArgs)">
            <summary>
            Vytvori asynchronne volanie na metodu zabezpecujucu vytvorenie eventu
            oznamujuceho pad spojenia
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Net.UdpTransportClient.OnChangeConnectionState(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujui zmenu stavu pripojenia
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.m_connectedEvent">
            <summary>
            Event na oznamenie spustenia spojenia pre vyssu vrstvu
            </summary>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.ConnectedEvent">
            <summary>
            Event na oznamenie spustenia spojenia pre vyssu vrstvu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.disconnectedEvent">
            <summary>
            Event na oznamenie ukoncenia spojenia pre vyssu vrstvu
            </summary>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.DisconnectedEvent">
            <summary>
            Event na oznamenie ukoncenia spojenia pre vyssu vrstvu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.m_receivedDataEvent">
            <summary>
            Event na oznamenue prichodu dat na transportnej vrstve
            </summary>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.ReceivedDataEvent">
            <summary>
            Event na oznamenue prichodu dat na transportnej vrstve
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.m_changeConnectionStateEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
        </member>
        <member name="E:Project858.Net.UdpTransportClient.ChangeConnectionStateEvent">
            <summary>
            Event oznamujuci zmenu stavu pripojenia
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak nie je autoreconnect povoleny
            </exception>
        </member>
        <member name="P:Project858.Net.UdpTransportClient.ConnectionState">
            <summary>
            (Get / Set) Stav v akom sa nachadza komunikacia / komunikacny kanal
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.UdpTransportClient.IsConnected">
            <summary>
            (Get) Detekcia pripojenia
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _isDisposed
            </exception>
        </member>
        <member name="P:Project858.Net.UdpTransportClient.RemoteIpEndPoint">
            <summary>
            Ip end point kam je klient pripojeny
            </summary>
        </member>
        <member name="P:Project858.Net.UdpTransportClient.LocalIpEndPoint">
            <summary>
            Ip end point kde klient pocuva
            </summary>
        </member>
        <member name="T:Project858.Reflection.ReflectionHelper">
            <summary>
            Helper na refaktoring objektu a jeho properties
            </summary>
        </member>
        <member name="M:Project858.Reflection.ReflectionHelper.#cctor">
            <summary>
            Initialize static class
            </summary>
        </member>
        <member name="F:Project858.Reflection.ReflectionHelper.m_collection">
            <summary>
            Kolekcia ulozenych a nacitanych typov
            </summary>
        </member>
        <member name="M:Project858.Reflection.ReflectionHelper.GetReflectionProperty(System.Type,System.String)">
            <summary>
            Vrati property z datoveho typu podla mena
            </summary>
            <param name="type">Typ objektu z ktoreho chceme vratit property</param>
            <param name="name">Meno property ktoru chceme nacitat</param>
            <returns>PropertyInfo alebo null</returns>
        </member>
        <member name="M:Project858.Reflection.ReflectionHelper.GetProperty(System.Type,System.String)">
            <summary>
            Vrati property z datoveho typu podla mena
            </summary>
            <param name="type">Typ objektu z ktoreho chceme vratit property</param>
            <param name="name">Meno property ktoru chceme nacitat</param>
            <returns>PropertyInfo alebo null</returns>
        </member>
        <member name="M:Project858.Reflection.ReflectionHelper.GetPropertyValue(System.Object,System.String)">
            <summary>
            Vrati hodnotu pozadovanej property
            </summary>
            <param name="instance">Instancia objektu z ktoreho hodnotu chceme ziskat</param>
            <param name="name">Meno property ktorej hodnotu chceme ziskat</param>
            <returns>Hodnota property alebo null</returns>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany argument instance
            </exception>
            <exception cref="T:System.ArgumentException">
            Nezadane meno property
            </exception>
        </member>
        <member name="M:Project858.Reflection.ReflectionHelper.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Nastavi pozadovanu hodnotu property
            </summary>
            <param name="instance">Instancia objektu do ktoreho chceme hodnotu nastavit</param>
            <param name="name">Meno property ktorej chceme hodnotu nastavit</param>
            <param name="value">Hodnota ktoru chceme nastavit</param>
            <param name="changeType">Definuje ci si zelame zmenit typ na typ property</param>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovany argument instance
            </exception>
            <exception cref="T:System.ArgumentException">
            Nezadane meno property
            </exception>
        </member>
        <member name="M:Project858.Reflection.ReflectionHelper.InternalGetType(System.Type)">
            <summary>
            Vrati reflekciu pre pozadovany typ
            </summary>
            <param name="type">Typ ktoreho reflekciu pozadujeme</param>
            <returns>Reflekcia alebo null</returns>
        </member>
        <member name="T:Project858.Reflection.ReflectionProperty">
            <summary>
            Reflekcia property objektu
            </summary>
        </member>
        <member name="M:Project858.Reflection.ReflectionProperty.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initialize this class
            </summary>
            <param name="property">Property</param>
        </member>
        <member name="M:Project858.Reflection.ReflectionProperty.GetCustomAttributes(System.Type)">
            <summary>
            Vrati pozadovany vlastny atribut propety
            </summary>
            <param name="type">Typ atributu ktory ziadame</param>
            <returns>Atribut alebo null</returns>
        </member>
        <member name="P:Project858.Reflection.ReflectionProperty.Name">
            <summary>
            Meno property
            </summary>
        </member>
        <member name="P:Project858.Reflection.ReflectionProperty.Property">
            <summary>
            Property ktoru reprezentuje typ
            </summary>
        </member>
        <member name="T:Project858.Reflection.ReflectionType">
            <summary>
            Reflekcia typu
            </summary>
        </member>
        <member name="M:Project858.Reflection.ReflectionType.#ctor(System.Type)">
            <summary>
            Initialize this class
            </summary>
            <param name="type">Typ objektu</param>
        </member>
        <member name="F:Project858.Reflection.ReflectionType.m_propertyCollection">
            <summary>
            Kolekcia property objektu
            </summary>
        </member>
        <member name="M:Project858.Reflection.ReflectionType.GetReflectionProperty(System.String)">
            <summary>
            Vrati property z datoveho typu podla mena
            </summary>
            <param name="type">Typ objektu z ktoreho chceme vratit property</param>
            <param name="name">Meno property ktoru chceme nacitat</param>
            <returns>PropertyInfo alebo null</returns>
        </member>
        <member name="M:Project858.Reflection.ReflectionType.GetProperty(System.String)">
            <summary>
            Vrati property z datoveho typu podla mena
            </summary>
            <param name="type">Typ objektu z ktoreho chceme vratit property</param>
            <param name="name">Meno property ktoru chceme nacitat</param>
            <returns>PropertyInfo alebo null</returns>
        </member>
        <member name="M:Project858.Reflection.ReflectionType.GetPropertyValue(System.Object,System.String)">
            <summary>
            Vrati hodnotu pozadovanej property
            </summary>
            <param name="instance">Instancia objektu z ktoreho hodnotu chceme ziskat</param>
            <param name="name">Meno property ktorej hodnotu chceme ziskat</param>
            <returns>Hodnota property alebo null</returns>
        </member>
        <member name="M:Project858.Reflection.ReflectionType.SetPropertyValue(System.Object,System.String,System.Object,System.Boolean)">
            <summary>
            Nastavi pozadovanu hodnotu property
            </summary>
            <param name="instance">Instancia objektu do ktoreho chceme hodnotu nastavit</param>
            <param name="name">Meno property ktorej chceme hodnotu nastavit</param>
            <param name="value">Hodnota ktoru chceme nastavit</param>
            <param name="changeType">Definuje ci si zelame zmenit typ na typ property</param>
        </member>
        <member name="M:Project858.Reflection.ReflectionType.InternalInitializePropertyCollection">
            <summary>
            Inicializuje kolekciu property pre aktualny typ
            </summary>
            <returns></returns>
        </member>
        <member name="P:Project858.Reflection.ReflectionType.Type">
            <summary>
            Datovy typ ktoreho sa reflekcia tyka
            </summary>
        </member>
        <member name="P:Project858.Reflection.ReflectionType.PropertyCollection">
            <summary>
            Kolekcia property objektu
            </summary>
        </member>
        <member name="T:Project858.ServiceProcess.IWindowsServiceClient">
            <summary>
            Client ktory sa automaticky spusta pre WndowsService
            </summary>
        </member>
        <member name="T:Project858.Web.BinaryContentResult">
            <summary>
            An ActionResult used to send binary data to the browser.
            </summary>
        </member>
        <member name="M:Project858.Web.BinaryContentResult.#ctor(System.Byte[],System.String)">
            <summary>
            Initialize this class
            </summary>
            <param name="contentBytes">Content v bytoch</param>
            <param name="contentType">Typ contentu</param>
        </member>
        <member name="F:Project858.Web.BinaryContentResult.m_contentType">
            <summary>
            Definuje typ contentu
            </summary>
        </member>
        <member name="F:Project858.Web.BinaryContentResult.m_contentBytes">
            <summary>
            Content
            </summary>
        </member>
        <member name="M:Project858.Web.BinaryContentResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Spracuje poziadavku a vrati content
            </summary>
            <param name="context">ControllerContext</param>
        </member>
        <member name="T:Project858.Web.Cache">
            <summary>
            Buffer na buffrovanie dat
            </summary>
        </member>
        <member name="M:Project858.Web.Cache.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Web.Cache.m_lockObject">
            <summary>
            Synchronizacny objekt na pristup k datam
            </summary>
        </member>
        <member name="M:Project858.Web.Cache.Add(System.String,System.Object)">
            <summary>
            Prida data do buffra
            </summary>
            <param name="key">Kluc ktory chceme pridat</param>
            <param name="data">Data </param>
        </member>
        <member name="M:Project858.Web.Cache.Add(System.String,System.Object,System.Nullable{System.TimeSpan})">
            <summary>
            Prida data do buffra
            </summary>
            <param name="key">Kluc ktory chceme pridat</param>
            <param name="data">Data </param>
            <param name="timeout">Timeout platnosti dat </param>
        </member>
        <member name="M:Project858.Web.Cache.Add(System.String,Project858.Web.CacheItem)">
            <summary>
            Prida polozku do buffra dat
            </summary>
            <param name="key">Jedinecny identifikator objektu</param>
            <param name="item">Polozka ktoru buffrujeme</param>
        </member>
        <member name="M:Project858.Web.Cache.Clear">
            <summary>
            Vymaze vsetky data
            </summary>
        </member>
        <member name="M:Project858.Web.Cache.ContainsKey(System.String)">
            <summary>
            Overi ci v buffry existuje pozadovana hodnota
            </summary>
            <param name="key">Kluc ktory hladame</param>
            <returns>True = data existuju, inak false</returns>
        </member>
        <member name="M:Project858.Web.Cache.GetValue(System.String)">
            <summary>
            Overi ci pozadovana hodnota existuje, ak ano vrati jej data
            </summary>
            <param name="key">Kluc ktory hladame</param>
            <returns>Pozadovane data alebo null</returns>
        </member>
        <member name="M:Project858.Web.Cache.GetValue``1(System.String)">
            <summary>
            Vrati hodnotu z cache
            </summary>
            <typeparam name="T">Typ objektu ktory ocakavame</typeparam>
            <param name="key">Jedinecny identifikator objektu</param>
            <returns>Object alebo jeho default</returns>
        </member>
        <member name="M:Project858.Web.Cache.GetValue``1(System.String,System.Func{``0})">
            <summary>
            Vrati hodnotu z cache
            </summary>
            <typeparam name="T">Typ objektu ktory ocakavame</typeparam>
            <param name="key">Jedinecny identifikator objektu</param>
            <param name="method">Metoda na nacitanie dat</param>
            <returns>Object alebo jeho default</returns>
        </member>
        <member name="M:Project858.Web.Cache.InternalClearOldItem">
            <summary>
            Vymaze data ktorym vyprsal interval platnosti dat
            </summary>
        </member>
        <member name="P:Project858.Web.Cache.Timeout">
            <summary>
            Interval platnosti polozky
            </summary>
        </member>
        <member name="T:Project858.Web.CacheItem">
            <summary>
            Buffrovaci item dat aby sa data neustale necitali z DB
            </summary>
        </member>
        <member name="P:Project858.Web.CacheItem.Timeout">
            <summary>
            Timeout platnosi polozky, alebo null
            </summary>
        </member>
        <member name="P:Project858.Web.CacheItem.Id">
            <summary>
            Jedinecny identifikator objektu
            </summary>
        </member>
        <member name="P:Project858.Web.CacheItem.Date">
            <summary>
            Casova znacka kedy bol objekt pridany
            </summary>
        </member>
        <member name="P:Project858.Web.CacheItem.Data">
            <summary>
            Data ktore polozka obsahuje
            </summary>
        </member>
        <member name="T:Project858.Web.BinderNullableGuid">
            <summary>
            Binder na parsovanie decimal hodnoty s ciarkou alebo bodkou
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.Web.BinderNullableGuid.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" -->
        <member name="M:Project858.Web.BinderNullableGuid.parseGuid(System.Web.Mvc.ValueProviderResult)">
            <summary>
            Vyparsuje guid bez pomlcok
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTime alebo null</returns>
        </member>
        <member name="T:Project858.Web.BinderNullableDateTimeOffsetIso8601">
            <summary>
            Binder na parsovanie DateTime vo formate ISO 8601
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.Web.BinderNullableDateTimeOffsetIso8601.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" -->
        <member name="M:Project858.Web.BinderNullableDateTimeOffsetIso8601.parseIso8601Date(System.Web.Mvc.ValueProviderResult)">
            <summary>
            Vyparsuje dateTime vo formate ISO 8601
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTime alebo null</returns>
        </member>
        <member name="T:Project858.Web.BinderNullableDecimal">
            <summary>
            Binder na parsovanie decimal hodnoty s ciarkou alebo bodkou
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.Web.BinderNullableDecimal.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" -->
        <member name="M:Project858.Web.BinderNullableDecimal.parseDecimal(System.Web.Mvc.ValueProviderResult)">
            <summary>
            Vyparsuje dateTime vo formate ISO 8601
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTime alebo null</returns>
        </member>
        <member name="T:Project858.Web.BinderNullableDateTimeIso8601">
            <summary>
            Binder na parsovanie DateTime vo formate ISO 8601
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.Web.BinderNullableDateTimeIso8601.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" -->
        <member name="M:Project858.Web.BinderNullableDateTimeIso8601.parseIso8601Date(System.Web.Mvc.ValueProviderResult)">
            <summary>
            Vyparsuje dateTime vo formate ISO 8601
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTime alebo null</returns>
        </member>
        <member name="T:Project858.Web.BinderGuid">
            <summary>
            Binder na parsovanie decimal hodnoty s ciarkou alebo bodkou
            </summary>
        </member>
        <member name="M:Project858.Web.BinderGuid.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)">
            <summary>
            Spracuje bindig na model
            </summary>
            <param name="controllerContext">ControllerContext</param>
            <param name="bindingContext">ModelBindingContext</param>
            <returns>Vyparsovany objekt alebo null</returns>
        </member>
        <member name="M:Project858.Web.BinderGuid.parseGuid(System.Web.Mvc.ValueProviderResult)">
            <summary>
            Vyparsuje dateTime vo formate ISO 8601
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTime alebo null</returns>
        </member>
        <member name="T:Project858.Web.DecimalBinder">
            <summary>
            Binder na parsovanie decimal hodnoty s ciarkou alebo bodkou
            </summary>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.Web.DecimalBinder.BindModel(System.Web.Mvc.ControllerContext,System.Web.Mvc.ModelBindingContext)" -->
        <member name="M:Project858.Web.DecimalBinder.parseDecimal(System.Web.Mvc.ValueProviderResult)">
            <summary>
            Vyparsuje dateTime vo formate ISO 8601
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTime alebo null</returns>
        </member>
        <member name="T:Project858.Web.ExtensionMethod">
            <summary>
            Metody na rozsirenie vlastnosti objektov
            </summary>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CreateLinker(System.String)">
            <summary>
            Vytvori linker z pozadovaneho stringu
            </summary>
            <param name="value">Hodnota z ktorej chceme vytvorit linker</param>
            <returns>Linker alebo povodna hodnota</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.GetDropDownListItemText(System.Enum)">
            <summary>
            Vrati popis enumu s atributom DropDownListAttribute
            </summary>
            <param name="enumValue">Enum z ktoreho chceme popis enumu ziskat</param>
            <returns>Popis alebo null</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.RemoveAllHtmlTags(System.String)">
            <summary>
            Odstrani vsetky html tagy zo stringu
            </summary>
            <param name="value">String v ktorom chceme odstranit tagy</param>
            <returns>String bez tagov</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.ToHtmlStringWithouNewLine(System.String)">
            <summary>
            Prekovertuje string na HTML string
            </summary>
            <param name="value">Hodnota ktoru chceme konvertovat</param>
            <returns>Html string</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.ToHtmlString(System.String)">
            <summary>
            Prekovertuje string na HTML string
            </summary>
            <param name="value">Hodnota ktoru chceme konvertovat</param>
            <returns>Html string</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.PrintModelStateError(System.Web.Mvc.ControllerBase)">
            <summary>
            Vypise chyby aktualneho formu
            </summary>
            <param name="controller">Controller this</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.AbsoluteAction(System.Web.Mvc.UrlHelper,System.String,System.String,System.Object)">
            <summary>
            Generates a fully qualified URL to an action method by using
            the specified action name, controller name and route values.
            </summary>
            <param name="url">The URL helper.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <returns>The absolute URL.</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.SetCookieValue(System.Web.HttpResponseBase,System.String,System.String,System.DateTime)">
            <summary>
            Nastavi pozadovanu cookie do response
            </summary>
            <param name="response">Response pre ktory chceme nastavit cookie</param>
            <param name="name">Meno cookie</param>
            <param name="value">Hodnota ktoru chceme nastavit</param>
            <param name="expireDate">Datum expiracie</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.SetCookieValue(System.Web.HttpResponse,System.String,System.String,System.DateTime)">
            <summary>
            Nastavi pozadovanu cookie do response
            </summary>
            <param name="response">Response pre ktory chceme nastavit cookie</param>
            <param name="name">Meno cookie</param>
            <param name="value">Hodnota ktoru chceme nastavit</param>
            <param name="expireDate">Datum expiracie</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.GetCookieValue(System.Web.HttpRequestBase,System.String)">
            <summary>
            Vrati cookie hodnotu pre pozadovany nazov
            </summary>
            <param name="request">Request z ktoreho chceme cookie zistit</param>
            <param name="name">Meno cookie ktorej hodnotu chceme ziskat</param>
            <returns>Hodnota cookie alebo null</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.GetCookieValue(System.Web.HttpRequest,System.String)">
            <summary>
            Vrati cookie hodnotu pre pozadovany nazov
            </summary>
            <param name="request">Request z ktoreho chceme cookie zistit</param>
            <param name="name">Meno cookie ktorej hodnotu chceme ziskat</param>
            <returns>Hodnota cookie alebo null</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.TraceRequest(System.Web.HttpRequest)">
            <summary>
            Vypise vsetky podstate informacie z requestu
            </summary>
            <param name="request">Request z ktoreho chceme vypisat informacie</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.TraceRequestHeaders(System.Web.HttpRequestBase)">
            <summary>
            Vytvori request Id do hlavicky
            </summary>
            <param name="request">Request do ktoreho chceme pridat id</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.TraceRequestHeaders(System.Web.HttpRequest)">
            <summary>
            Vytvori request Id do hlavicky
            </summary>
            <param name="request">Request do ktoreho chceme pridat id</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CreateRequestId(System.Web.HttpRequest)">
            <summary>
            Vytvori request Id do hlavicky
            </summary>
            <param name="request">Request do ktoreho chceme pridat id</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.GetHeaderItem(System.Web.HttpRequestBase,System.String)">
            <summary>
            Vytvori polozku z headra requestu
            </summary>
            <param name="request">Request z ktoreho chceme ziskat polozku headra</param>
            <param name="name">Meno polozky</param>
            <returns>Polozka headra alebo null</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CreateRequestId(System.Web.HttpRequest,System.Guid)">
            <summary>
            Vytvori request Id do hlavicky
            </summary>
            <param name="id">Id ktore chceme pridat do requestu</param>
            <param name="request">Request do ktoreho chceme pridat id</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.GetRequestId(System.Web.HttpRequest)">
            <summary>
            Vytvori request Id do hlavicky
            </summary>
            <param name="request">Request do ktoreho chceme pridat id</param>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.ToMvcHtmlStringWithUrl(System.String)">
            <summary>
            Vyhlada vsetky url adresy v texte a vytvori z nich html A tag
            </summary>
            <param name="value">String ktory chceme previest na mvc string</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomPasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomPasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomPasswordFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomTextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomTextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomTextBoxFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomTextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Object)">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomTextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomTextAreaFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html select so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            Vytvori html select so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.List{Project858.Web.ISelectListItem})">
            <summary>
            Vytvori html select so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="values">Hodnota na nastavenie vybranej polozky</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.List{Project858.Web.ISelectListItem},System.Object)">
            <summary>
            Vytvori html select so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="values">Hodnota na nastavenie vybranej polozky</param>
            <param name="htmlAttributes">Html atributy ktore chceme pridat</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="htmlAttributes">Html atributy ktore chceme pridat</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.CustomDropDownListFor``2(System.Web.Mvc.HtmlHelper{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Collections.Generic.List{Project858.Web.ISelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html input so vstupnymi parametrami
            </summary>
            <typeparam name="TModel">Model dat</typeparam>
            <typeparam name="TValue">Hodnota modelu</typeparam>
            <param name="html">Helper</param>
            <param name="expression">Expression na ziskanie property</param>
            <param name="values">Hodnota na nastavenie vybranej polozky</param>
            <param name="htmlAttributes">Html atributy ktore chceme pridat</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.InternalCustomAttributeFor(Project858.ComponentModel.IntegerAttribute,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html parametre z atributy
            </summary>
            <param name="attribute">Atribut z ktoreho chceme ziskat data</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>Dictionary</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.InternalCustomAttributeFor(Project858.ComponentModel.StringAttribute,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html parametre z atributy
            </summary>
            <param name="attribute">Atribut z ktoreho chceme ziskat data</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>Dictionary</returns>
        </member>
        <member name="M:Project858.Web.ExtensionMethod.InternalCustomAttributeFor(Project858.ComponentModel.GuidAttribute,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Vytvori html parametre z atributy
            </summary>
            <param name="attribute">Atribut z ktoreho chceme ziskat data</param>
            <param name="htmlAttributes">Html atributy</param>
            <returns>Dictionary</returns>
        </member>
        <member name="T:Project858.Web.FormAttribute">
            <summary>
            Atribut zabezpecujuci validaciu modelu prijatych dat
            </summary>
        </member>
        <member name="M:Project858.Web.FormAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Spracuje udalost
            </summary>
            <param name="filterContext">ActionExecutingContext</param>
        </member>
        <member name="T:Project858.Web.GuidJsonConverter">
            <summary>
            Guid convertor pre JsonNetResult
            </summary>
        </member>
        <member name="M:Project858.Web.GuidJsonConverter.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Web.GuidJsonConverter.CanConvert(System.Type)">
            <summary>
            Overi ci je mozne objekt konvertovat podla typu
            </summary>
            <param name="objectType">Typ objektu</param>
            <returns>True = konvertovanie je mozne | false</returns>
        </member>
        <member name="M:Project858.Web.GuidJsonConverter.WriteJson(Newtonsoft.Json.JsonWriter,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Zapise objekt do json
            </summary>
            <param name="writer">Writer na zapis objektu</param>
            <param name="value">Hodnota ktoru chceme zapisat</param>
            <param name="serializer">Serializer</param>
        </member>
        <member name="M:Project858.Web.GuidJsonConverter.ReadJson(Newtonsoft.Json.JsonReader,System.Type,System.Object,Newtonsoft.Json.JsonSerializer)">
            <summary>
            Precita hodnotu z json
            </summary>
            <param name="reader">Reader na citanie</param>
            <param name="objectType">Typ objektu</param>
            <param name="existingValue">Aktualna hodnota</param>
            <param name="serializer">Serializer</param>
            <returns></returns>
        </member>
        <member name="P:Project858.Web.GuidJsonConverter.CanRead">
            <summary>
            Urcuje ci je mozne json citat
            </summary>
        </member>
        <member name="T:Project858.Web.HtmlViewRenderer">
            <summary>
            Renderer na vykreslovanie Html contentu
            </summary>
        </member>
        <member name="M:Project858.Web.HtmlViewRenderer.RenderViewToString(System.Web.Mvc.Controller,System.String,System.Object)">
            <summary>
            Vykresli view do Stringu
            </summary>
            <param name="controller">Controller</param>
            <param name="viewName">Meno view</param>
            <param name="viewData">Data ktore umoznia view vykreslit</param>
            <returns>View v stringu</returns>
        </member>
        <member name="M:Project858.Web.HtmlViewRenderer.CreateViewContext(System.IO.TextWriter,System.Web.Mvc.ControllerContext)">
            <summary>
            Vytvori view content
            </summary>
            <param name="responseWriter">Writer na zapis contentu</param>
            <param name="fakeControllerContext">Content</param>
            <returns>ViewContext</returns>
        </member>
        <member name="T:Project858.Web.HtmlViewRenderer.EmptyView">
            <summary>
            Empty view
            </summary>
        </member>
        <member name="M:Project858.Web.HtmlViewRenderer.EmptyView.Render(System.Web.Mvc.ViewContext,System.IO.TextWriter)">
            <summary>
            Vykresli view
            </summary>
            <param name="viewContext">ViewContext</param>
            <param name="writer">TextWriter</param>
        </member>
        <member name="T:Project858.ComponentModel.StringAttribute">
            <summary>
            Validacia textu
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.StringAttribute.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.StringAttribute.IsValid(System.Object,System.ComponentModel.DataAnnotations.ValidationContext)">
            <summary>
            Overi platnost hodnoty podla nastavenych kriterii
            </summary>
            <param name="value">Hodnota ktoru validujeme</param>
            <param name="validationContext">ValidationContext</param>
            <returns>ValidationResult</returns>
        </member>
        <member name="M:Project858.ComponentModel.StringAttribute.InternalValidateStringType(System.String,Project858.ComponentModel.StringAttribute.StringTypes)">
            <summary>
            Overi spravnost dat
            </summary>
            <param name="value"></param>
            <param name="type">Typ validacie ktoru chceme vykonat</param>
            <returns>True = text je spravneho typu, inak false</returns>
        </member>
        <member name="P:Project858.ComponentModel.StringAttribute.ClientValidationHandler">
            <summary>
            Nazov metody ktora ma validovat uvedenu polozku
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.StringAttribute.PlaceHolder">
            <summary>
            Place holder na text
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.StringAttribute.Type">
            <summary>
            Typ stringu
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.StringAttribute.Required">
            <summary>
            Definuje ci je hodnota vyzadovana alebo nie
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.StringAttribute.MinLength">
            <summary>
            Definuje minimalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="P:Project858.ComponentModel.StringAttribute.MaxLength">
            <summary>
            Definuje maximalnu dlzku textu ktoru musi hodnota splnat
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.StringAttribute.StringTypes">
            <summary>
            Defnije typy textu
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.StringAttribute.StringTypes.Text">
            <summary>
            text
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.StringAttribute.StringTypes.Alpha">
            <summary>
            text zlozeny z alpha znakov
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.StringAttribute.StringTypes.Numeric">
            <summary>
            text zlozeny z number znakov
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.StringAttribute.StringTypes.AlphaNumeric">
            <summary>
            text zlozeny z alpha alebo numeric znakov
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.StringAttribute.StringTypes.Email">
            <summary>
            text vo formate e-mailu
            </summary>
        </member>
        <member name="T:Project858.Web.HttpBasicUnauthorizedResult">
            <summary>
            Result s nastavenim HTTP basic autorizacie
            </summary>
        </member>
        <member name="M:Project858.Web.HttpBasicUnauthorizedResult.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Web.HttpBasicUnauthorizedResult.#ctor(System.String)">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Web.HttpBasicUnauthorizedResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            ExecuteResult
            </summary>
            <param name="context">ControllerContext</param>
        </member>
        <member name="T:Project858.Web.ISelectListItem">
            <summary>
            Typ pouzitelny v drop down liste
            </summary>
        </member>
        <member name="P:Project858.Web.ISelectListItem.Text">
            <summary>
            Gets or sets the text of the selected item.
            </summary>
        </member>
        <member name="P:Project858.Web.ISelectListItem.Value">
            <summary>
            Gets or sets the value of the selected item.
            </summary>
        </member>
        <member name="T:Project858.Web.ISitemapGenerator">
            <summary>
            Interface generatora sitemap
            </summary>
        </member>
        <member name="M:Project858.Web.ISitemapGenerator.GenerateSiteMap(System.Collections.Generic.IEnumerable{Project858.Web.ISitemapItem})">
            <summary>
            Vygeneruje XML dokument z poloziek sitemap
            </summary>
            <param name="items">Kolekcia sitemap poloziek</param>
            <returns>XML dokument</returns>
        </member>
        <member name="T:Project858.Web.ISitemapItem">
            <summary>
            An interface for sitemap items
            </summary>
        </member>
        <member name="P:Project858.Web.ISitemapItem.Url">
            <summary>
            URL of the page.
            </summary>
        </member>
        <member name="P:Project858.Web.ISitemapItem.LastModified">
            <summary>
            The date of last modification of the file.
            </summary>
        </member>
        <member name="P:Project858.Web.ISitemapItem.ChangeFrequency">
            <summary>
            How frequently the page is likely to change.
            </summary>
        </member>
        <member name="P:Project858.Web.ISitemapItem.Priority">
            <summary>
            The priority of this URL relative to other URLs on your site. Valid values range from 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:Project858.Web.ISitemapItem.Images">
            <summary>
            Images collection
            </summary>
        </member>
        <member name="T:Project858.Web.DropDownListAttribute">
            <summary>
            Atribut pre nacitanie select-u
            </summary>
        </member>
        <member name="P:Project858.Web.DropDownListAttribute.Name">
            <summary>
            Nazov jazyka
            </summary>
        </member>
        <member name="P:Project858.Web.DropDownListAttribute.ResourceName">
            <summary>
            Menou resource odkial chceme text nacitat
            </summary>
        </member>
        <member name="T:Project858.Web.JsonNetResult">
            <summary>
            Upraveny JsonResult so serializaciou Newtonsoft a upravou niektorych datovych typov
            </summary>
        </member>
        <member name="M:Project858.Web.JsonNetResult.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.Web.JsonNetResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Spusti convet objektu do Json stringu
            </summary>
            <param name="context"></param>
        </member>
        <member name="P:Project858.Web.JsonNetResult.Settings">
            <summary>
            Konfiguracia serializera
            </summary>
        </member>
        <member name="T:Project858.Web.OAuthBase">
            <summary>
            OAuthBase
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthBase.GetRedirectUrl(System.String,System.String)">
            <summary>
            GetRedirectUrl
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthBase.GetProfile(System.String,System.String,System.String,System.String)">
            <summary>
            GetProfile
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthBase.CreateAuth(Project858.Web.OAuthBase.AuthType)">
            <summary>
            CreateAuth
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthBase.InternalParseUserProfile(System.String)">
            <summary>
            InternalParseUserProfile
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthBase.InternalHttpRequest(System.String)">
            <summary>
            InternalHttpRequest
            </summary>
        </member>
        <member name="T:Project858.Web.OAuthBase.AuthType">
            <summary>
            AuthType
            </summary>
        </member>
        <member name="T:Project858.Web.OAuthFacebook">
            <summary>
            OAuthFacebook
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthFacebook.GetRedirectUrl(System.String,System.String)">
            <summary>
            GetRedirectUrl
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthFacebook.GetProfile(System.String,System.String,System.String,System.String)">
            <summary>
            GetProfile
            </summary>
        </member>
        <member name="M:Project858.Web.OAuthFacebook.InternalParseUserProfile(System.String)">
            <summary>
            InternalParseUserProfile
            </summary>
        </member>
        <member name="T:Project858.Web.OAuthUserProfile">
            <summary>
            OAuthUserProfile
            </summary>
        </member>
        <member name="P:Project858.Web.OAuthUserProfile.Locale">
            <summary>
            Locale
            </summary>
        </member>
        <member name="P:Project858.Web.OAuthUserProfile.Email">
            <summary>
            Email
            </summary>
        </member>
        <member name="P:Project858.Web.OAuthUserProfile.Name">
            <summary>
            Name
            </summary>
        </member>
        <member name="P:Project858.Web.OAuthUserProfile.FirstName">
            <summary>
            FirstName
            </summary>
        </member>
        <member name="P:Project858.Web.OAuthUserProfile.LastName">
            <summary>
            LastName
            </summary>
        </member>
        <member name="T:Project858.Web.SitemapChangeFrequencyTypes">
            <summary>
            How frequently the page is likely to change. This value provides general information to search engines and may not correlate exactly to how often they crawl the page.
            </summary>
            <remarks>
            The value "always" should be used to describe documents that change each time they are accessed. The value "never" should be used to describe archived URLs.
            </remarks>
        </member>
        <member name="T:Project858.Web.SitemapGenerator">
            <summary>
            Generator na vytvorenie sitemap
            https://github.com/uhaciogullari/SimpleMvcSitemap
            </summary>
        </member>
        <member name="M:Project858.Web.SitemapGenerator.GenerateSiteMap(System.Collections.Generic.IEnumerable{Project858.Web.ISitemapItem})">
            <summary>
            Vygeneruje Sitemap zo vsetkych poloziek
            </summary>
            <param name="items">Polozky sitemap</param>
            <returns>XML dokument sitemap</returns>
        </member>
        <member name="M:Project858.Web.SitemapGenerator.InternalCreateItemElement(Project858.Web.ISitemapItem)">
            <summary>
            Prida element do sitemap
            </summary>
            <param name="item">Kolekcia poloziek</param>
            <returns>XML element do sitemap</returns>
        </member>
        <member name="T:Project858.Web.SitemapImage">
            <summary>
            Sitemap image item
            </summary>
        </member>
        <member name="M:Project858.Web.SitemapImage.#ctor(System.String,System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <param name="url">The URL of the image.</param>
            <param name="title">The title of the image.</param>
            <param name="caption">The caption of the image.</param>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="url"/> is null or empty.</exception>
        </member>
        <member name="P:Project858.Web.SitemapImage.Url">
            <summary>
            The URL of the image.
            </summary>
        </member>
        <member name="P:Project858.Web.SitemapImage.Caption">
            <summary>
            The caption of the image.
            </summary>
        </member>
        <member name="P:Project858.Web.SitemapImage.Title">
            <summary>
            The title of the image.
            </summary>
        </member>
        <member name="T:Project858.Web.SitemapItem">
            <summary>
            Represents a sitemap item.
            </summary>
        </member>
        <member name="M:Project858.Web.SitemapItem.#ctor(System.String,System.Nullable{System.DateTime},System.Nullable{Project858.Web.SitemapChangeFrequencyTypes},System.Nullable{System.Double},System.Collections.Generic.List{Project858.Web.SitemapImage})">
            <summary>
            Creates a new instance of <see cref="T:Project858.Web.SitemapItem"/>
            </summary>
            <param name="url">URL of the page. Optional.</param>
            <param name="lastModified">The date of last modification of the file. Optional.</param>
            <param name="changeFrequency">How frequently the page is likely to change. Optional.</param>
            <param name="priority">The priority of this URL relative to other URLs on your site. Valid values range from 0.0 to 1.0. Optional.</param>
            <param name="images"></param>
            <exception cref="T:System.ArgumentNullException">If the <paramref name="url"/> is null or empty.</exception>
        </member>
        <member name="P:Project858.Web.SitemapItem.Url">
            <summary>
            URL of the page.
            </summary>
        </member>
        <member name="P:Project858.Web.SitemapItem.LastModified">
            <summary>
            The date of last modification of the file.
            </summary>
        </member>
        <member name="P:Project858.Web.SitemapItem.ChangeFrequency">
            <summary>
            How frequently the page is likely to change.
            </summary>
        </member>
        <member name="P:Project858.Web.SitemapItem.Priority">
            <summary>
            The priority of this URL relative to other URLs on your site. Valid values range from 0.0 to 1.0.
            </summary>
        </member>
        <member name="P:Project858.Web.SitemapItem.Images">
            <summary>
            Images collection
            </summary>
        </member>
        <member name="M:Project858.Web.SitemapResult.#ctor(System.Collections.Generic.IEnumerable{Project858.Web.ISitemapItem})">
            <summary>
            Initialize this class
            </summary>
            <param name="items">Kolekcia poloziek do sitemap</param>
        </member>
        <member name="M:Project858.Web.SitemapResult.#ctor(System.Collections.Generic.IEnumerable{Project858.Web.ISitemapItem},Project858.Web.ISitemapGenerator)">
            <summary>
            Initialize this class
            </summary>
            <param name="items">Kolekcia poloziek do sitemap</param>
            <param name="generator">Generator na vytvorenie</param>
        </member>
        <member name="F:Project858.Web.SitemapResult.m_items">
            <summary>
            Kolekcia itemov ktore chceme pridat do sitemap
            </summary>
        </member>
        <member name="F:Project858.Web.SitemapResult.m_generator">
            <summary>
            Generator na vytvorenie sitemap
            </summary>
        </member>
        <member name="M:Project858.Web.SitemapResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Spracuje result pre HTTP odpoved
            </summary>
            <param name="context">ControllerContext</param>
        </member>
        <member name="T:Project858.Web.WebControllerBase">
            <summary>
            Bese controller with implementation
            </summary>
        </member>
        <member name="M:Project858.Web.WebControllerBase.GetHostAddress">
            <summary>
            Return current host address
            </summary>
            <returns>IP Address</returns>
        </member>
        <member name="M:Project858.Web.WebControllerBase.SendEmail(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            InternalSendEmail
            </summary>
        </member>
        <member name="M:Project858.Web.WebControllerBase.InternalSendEmail(System.String,System.String,System.Object,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            InternalSendEmail
            </summary>
        </member>
        <member name="M:Project858.Web.WebControllerBase.InternalSendEmail(System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            InternalSendEmail
            </summary>
        </member>
        <member name="T:Project858.Web.WebFileHandler">
            <summary>
            Handler na spracovanie obrazkov
            </summary>
        </member>
        <member name="M:Project858.Web.WebFileHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Spracuje request poziadavku na nacitanie obrazku
            </summary>
            <param name="context">HttpContext</param>
        </member>
        <member name="P:Project858.Web.WebFileHandler.IsReusable">
            <summary>
            Definuje ci je mozne objekt opakovane pouzit
            </summary>
        </member>
        <member name="T:Project858.Web.WebImageHandler">
            <summary>
            Handler na spracovanie obrazkov
            </summary>
        </member>
        <member name="M:Project858.Web.WebImageHandler.#cctor">
            <summary>
            Static initialize this class
            </summary>
        </member>
        <member name="F:Project858.Web.WebImageHandler.m_directoryPath">
            <summary>
            Cesta k temp directory
            </summary>
        </member>
        <member name="F:Project858.Web.WebImageHandler.m_regex">
            <summary>
            Regex na parsovanie dat z obrazku
            </summary>
        </member>
        <member name="M:Project858.Web.WebImageHandler.ProcessRequest(System.Web.HttpContext)">
            <summary>
            Spracuje request poziadavku na nacitanie obrazku
            </summary>
            <param name="context">HttpContext</param>
        </member>
        <member name="M:Project858.Web.WebImageHandler.CropOrResizeImage(System.Drawing.Image,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean)">
            <summary>
            Resize obrazok na pozadovanu vysku a sirku. Vyska a sirka sa dosiahne bud zmenou velkosti alebo orezanim
            </summary>
            <param name="image">Image ktory chceme resiznut</param>
            <param name="width">Pozadovana sirka obrazku</param>
            <param name="height">Pozadovana vyska obrazku</param>
            <param name="needToFill">Definuje ci je potrebne obrazok roztiahnut</param>
            <returns>Upraveny obrazok</returns>
        </member>
        <member name="M:Project858.Web.WebImageHandler.InternalGetContentType(System.String)">
            <summary>
            Vrati format obrazku
            </summary>
            <param name="path">Cesta k suboru</param>
            <returns>Format obrazku</returns>
        </member>
        <member name="M:Project858.Web.WebImageHandler.internalParseImageUrl(System.String@,System.Nullable{System.Guid}@,System.Nullable{System.Int32}@,System.Nullable{System.Int32}@)">
            <summary>
            Rozparsuje vstupne data z ktorych vyberie guid, pripadne vysku a sirku obrazku
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <param name="key">Jedinecny identifikator obrazku alebo null</param>
            <param name="width">sirka obrazku alebo null</param>
            <param name="height">Vyska obrazku alebo null;</param>
            <returns>True = parsovanie bolo uspesne, inak false</returns>
        </member>
        <member name="P:Project858.Web.WebImageHandler.IsReusable">
            <summary>
            Definuje ci je mozne objekt opakovane pouzit
            </summary>
        </member>
        <member name="T:Project858.Web.IUserBaseHandler">
            <summary>
            Handler na spracovanie udalosti uzivatela
            </summary>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.Login(System.String,System.String)">
            <summary>
            Vykona prihlasenie uzivatela
            </summary>
            <param name="name">Meno uzivatela</param>
            <param name="password">Heslo uzivatela</param>
            <returns>Prihlaseny uzivatel alebo null</returns>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.UserBaseValidateToken(System.String,System.String)">
            <summary>
            Overi spravnost tokenu a to ci je uzivatel stale prihlaseny
            </summary>
            <param name="token">Token uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.UserBaseGetUserLoginIdFromToken(System.String,System.String)">
            <summary>
            Vrati id uzivatela z tokenu
            </summary>
            <param name="token">Token uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.UserBaseGetUserToken(System.Guid,System.String)">
            <summary>
            Vygeneruje token obsahujuci dolezite data na validaciu uzivatela
            </summary>
            <param name="userId">Id uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.UserBaseGetHostAddress">
            <summary>
            Vrati host adress v pripade specialnych pripadov
            </summary>
            <returns>Host address alebo null</returns>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.UserBaseGetUserFromUserLoginId(System.Guid,System.String)">
            <summary>
            Vrati uzivatela na zaklade id prihlasenia a IP adresy z ktorej uzivatel prichadza
            </summary>
            <param name="token">Id prihlasenia uzivatela</param>
            <param name="hostAddress">IP adresa z ktorej uzivatel prichadza</param>
            <returns>User alebo null</returns>
        </member>
        <member name="M:Project858.Web.IUserBaseHandler.UserBaseUserLogOff(System.Guid)">
            <summary>
            Vykona odhlasenie uzivatela na zaklade Id prihlasenia
            </summary>
            <param name="id">Token uzivatela</param>
        </member>
        <member name="T:Project858.Web.LanguageAttribute">
            <summary>
            Atribut definujuci jazyk
            </summary>
        </member>
        <member name="P:Project858.Web.LanguageAttribute.Culture">
            <summary>
            Definovana kultura jazyka
            </summary>
        </member>
        <member name="P:Project858.Web.LanguageAttribute.Name">
            <summary>
            Nazov jazyka
            </summary>
        </member>
        <member name="P:Project858.Web.LanguageAttribute.IsoCode">
            <summary>
            Iso nazov jazyka
            </summary>
        </member>
        <member name="T:Project858.Web.LanguageTypes">
            <summary>
            Definuje dostupne typy jazykov
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.Unknow">
            <summary>
            Neznamy jazyk
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.SK">
            <summary>
            Slovencina
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.CS">
            <summary>
            Cestia
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.EN_US">
            <summary>
            Anglictina US
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.EN_GB">
            <summary>
            Anglictina GB
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.PL">
            <summary>
            Polstina
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.DE">
            <summary>
            Nemcina
            </summary>
        </member>
        <member name="F:Project858.Web.LanguageTypes.HU">
            <summary>
            Madarcina
            </summary>
        </member>
        <member name="T:Project858.Web.LocalizationViewEngine">
            <summary>
            Engine zabezpecujuci zobrazenie suboru podla jazykovej mutacie
            </summary>
        </member>
        <member name="M:Project858.Web.LocalizationViewEngine.CreatePartialView(System.Web.Mvc.ControllerContext,System.String)">
            <summary>
            Vrati partial view
            </summary>
            <param name="controllerContext">ControllerContext</param>
            <param name="viewPath">Cesta k view suboru</param>
            <returns>View</returns>
        </member>
        <member name="M:Project858.Web.LocalizationViewEngine.CreateView(System.Web.Mvc.ControllerContext,System.String,System.String)">
            <summary>
            Vrati view
            </summary>
            <param name="controllerContext">ControllerContext</param>
            <param name="viewPath">Cesta k view suboru</param>
            <param name="masterPath">Cesta</param>
            <returns>View</returns>
        </member>
        <member name="M:Project858.Web.LocalizationViewEngine.GlobalizeViewPath(System.Web.Mvc.ControllerContext,System.String)">
            <summary>
            Vrati pozadovanu cestu k lokalizovanemu suboru alebo default
            </summary>
            <param name="controllerContext">ControllerContext</param>
            <param name="viewPath">Povodna cesta k suboru</param>
            <returns>Cesta k suboru</returns>
        </member>
        <member name="T:Project858.Web.ResponseTypes">
            <summary>
            Definuje navratove hodnoty servera
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SqlObject">
            <summary>
            Sql objekt na nacitanie dat
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlObject.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlObject.m_dictionary">
            <summary>
            Dictionary na ukladanie dat
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlObject.GetAllPropertyName">
            <summary>
            Vrati mena vsetkych property ktore boli pridane
            </summary>
            <returns>Kolekcia property names</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlObject.SetMember(System.String,System.Object)">
            <summary>
            Nastavi objektu property
            </summary>
            <param name="name">Meno property ktory chceme nastavit</param>
            <param name="value">Hodnota ktoru chceme nastavit</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlObject.GetMember(System.String)">
            <summary>
            Vrati hodnotu z property
            </summary>
            <param name="name">Meno property ktorej hodnotu chceme nacitat</param>
            <returns>Objekt ziskany z property</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlObject.TryGetMember(System.Dynamic.GetMemberBinder,System.Object@)">
            <summary>
            If you try to get a value of a property not defined in the class, this method is called. 
            </summary>
            <param name="binder">SetMemberBinder</param>
            <param name="result">Value</param>
            <returns>True = operacia bola uspesna, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlObject.TrySetMember(System.Dynamic.SetMemberBinder,System.Object)">
            <summary>
            If you try to set a value of a property that is not defined in the class, this method is called. 
            </summary>
            <param name="binder">SetMemberBinder</param>
            <param name="value">Value</param>
            <returns>True = operacia bola uspesna, inak false</returns>
        </member>
        <member name="T:Project858.Web.UserAuthorizeAttribute">
            <summary>
            Atribut na automaticky redirect v pripade pristupu k metoda ktora si vyzaduje alebo nevyzaduje prihlasenie
            </summary>
        </member>
        <member name="M:Project858.Web.UserAuthorizeAttribute.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Spracuje udalost
            </summary>
            <param name="filterContext">ActionExecutingContext</param>
        </member>
        <member name="M:Project858.Web.UserAuthorizeAttribute.InternalBasicAuthenticate(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Vykona base autorizaciu
            </summary>
            <param name="filterContext">ActionExecutingContext</param>
            <returns></returns>
        </member>
        <member name="M:Project858.Web.UserAuthorizeAttribute.InternalBasicAuthenticate(System.String,System.String)">
            <summary>
            Vykona prihlasenie uzivatela
            </summary>
            <param name="name">Meno uzivatela</param>
            <param name="paasowrd">Heslo uzivatela</param>
            <returns>True = prihlasenie bolo uspesne, inak false</returns>
        </member>
        <member name="M:Project858.Web.UserAuthorizeAttribute.InternalIsPostMethod(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Overi ci ide o post metodu
            </summary>
            <param name="filterContext">ActionExecutingContext</param>
            <returns>True = post metoda, false inak nie...</returns>
        </member>
        <member name="P:Project858.Web.UserAuthorizeAttribute.UserType">
            <summary>
            Typ uzivatela ktory sa ocakava
            </summary>
        </member>
        <member name="P:Project858.Web.UserAuthorizeAttribute.IsBasicAuthenticate">
            <summary>
            Definuje ci ide o Base autentifikaciu
            </summary>
        </member>
        <member name="P:Project858.Web.UserAuthorizeAttribute.Required">
            <summary>
            Definuje ci je prihlasenie uzivatela pozadovane
            </summary>
        </member>
        <member name="P:Project858.Web.UserAuthorizeAttribute.RedirectUrl">
            <summary>
            Definuje url na ktory sa ma redirect vykonat
            </summary>
        </member>
        <member name="P:Project858.Web.UserAuthorizeAttribute.IsAuthenticated">
            <summary>
            Definuje ci je uzivatel prihlaseny alebo nie
            </summary>
        </member>
        <member name="P:Project858.Web.UserAuthorizeAttribute.IsBlocked">
            <summary>
            Definuje ci je aktualny uzivatel blokovany
            </summary>
        </member>
        <member name="T:Project858.Web.UserBase">
            <summary>
            Web uzivatel s implementaciou cookie
            </summary>
        </member>
        <member name="F:Project858.Web.UserBase.LANGUAGE_COOKIE_NAME">
            <summary>
            Konstanta popisujuca nazov cookie hodnoty na ukladanie aktualneho jazyka
            </summary>
        </member>
        <member name="F:Project858.Web.UserBase.USER_COOKIE_NAME">
            <summary>
            Meno cookie pre ulozenie informacie o prihlaseni
            </summary>
        </member>
        <member name="F:Project858.Web.UserBase.m_hostAddressCookieName">
            <summary>
            Cookie name na ziskanie host address
            </summary>
        </member>
        <member name="F:Project858.Web.UserBase.m_userCookieName">
            <summary>
            Cookie name pre uzivatela
            </summary>
        </member>
        <member name="F:Project858.Web.UserBase.m_languageCookieName">
            <summary>
            Cookie name pre jazyk
            </summary>
        </member>
        <member name="M:Project858.Web.UserBase.LoginUser(System.Guid,System.DateTime)">
            <summary>
            Vykona prihlasenie uzivatela s pozadovanym Id
            </summary>
            <param name="id">Id uzivatela ktoreho chceme prihlasit</param>
            <param name="expireDate">Datum expiracie prihlasenia</param>
            <returns>True = prihlasenie bolo uspesne, inak false</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalGetUserToken(System.Guid,System.String)">
            <summary>
            Vygeneruje token obsahujuci dolezite data na validaciu uzivatela
            </summary>
            <param name="userId">Id uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.UserBase.Login(System.String,System.String)">
            <summary>
            Vykona prihlasenie uzivatela
            </summary>
            <param name="name">Meno uzivatela</param>
            <param name="password">Heslo uzivatela</param>
            <returns>Prihlaseny uzivatel alebo null</returns>
        </member>
        <member name="M:Project858.Web.UserBase.GetHostAddress">
            <summary>
            Vrati host adress pre aktualneho uzivatela
            </summary>
            <returns>Host address</returns>
        </member>
        <member name="M:Project858.Web.UserBase.CurrentUserLogOff">
            <summary>
            Odhlasi aktualneho uzivatela
            </summary>
        </member>
        <member name="M:Project858.Web.UserBase.GetLanguage(System.String)">
            <summary>
            Vrati aktualne nastaveny jazyk pre prichadzajuci request
            </summary>
            <param name="language">Jazyk z hlavicky requestu</param>
            <returns>Aktualne nastaveny jazyk, alebo default</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalGetCurrentLanguage">
            <summary>
            Vrati aktualne nastaveny jazyk pre prichadzajuci request
            </summary>
            <returns>Aktualne nastaveny jazyk, alebo default</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalSetCurrentLanguage(Project858.Web.LanguageTypes)">
            <summary>
            Nastavi definovany jazyk do cookie uzivatela
            </summary>
            <param name="language">Jazyk ktory chceme nastavit</param>
        </member>
        <member name="M:Project858.Web.UserBase.InternalGetDefaultLanguage">
            <summary>
            Nastavi a vrati default hodnotu jazyka
            </summary>
            <returns>Default jazyk</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalSetCurrentUser(Project858.Web.UserBase)">
            <summary>
            Ulozi aktualneho uzivatela do CurrentUser
            </summary>
            <param name="user">Uzivatel ktoreho chceme ulozit</param>
        </member>
        <member name="M:Project858.Web.UserBase.InternalGetCurrentUser">
            <summary>
            Overi ci je aktualny uzivatel prihlaseny
            </summary>
            <returns>Prihlaseny uzivatel alebo null</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalUserBaseGetUserLoginIdFromToken(System.String,System.String)">
            <summary>
            Vrati id uzivatela z tokenu
            </summary>
            <param name="token">Token uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalUserBaseValidateToken(System.String,System.String)">
            <summary>
            Overi spravnost tokenu a to ci je uzivatel stale prihlaseny
            </summary>
            <param name="token">Token uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalGetUserFromUserLoginId(System.Guid,System.String)">
            <summary>
            Vrati uzivatela na zaklade id prihlasenia a IP adresy z ktorej uzivatel prichadza
            </summary>
            <param name="id">Id prihlasenia</param>
            <param name="hostAddress">IP adresa z ktorej uzivatel prichadza</param>
            <returns>User alebo null</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalUserBaseUserLogOff(System.Guid)">
            <summary>
            Vykona odhlasenie uzivatela na zaklade Id prihlasenia
            </summary>
            <param name="id">Id prihlasenia uzivatela</param>
        </member>
        <member name="M:Project858.Web.UserBase.InternalLogin(System.String,System.String)">
            <summary>
            Vykona prihlasenie uzivatela
            </summary>
            <param name="name">Meno uzivatela</param>
            <param name="password">Heslo uzivatela</param>
            <returns>Prihlaseny uzivatel alebo null</returns>
        </member>
        <member name="M:Project858.Web.UserBase.InternalGetHostAddress">
            <summary>
            Vrati host adress pre aktualneho uzivatela
            </summary>
            <returns>Host address</returns>
        </member>
        <member name="M:Project858.Web.UserBase.GetNameFromValue(Project858.Web.LanguageTypes)">
            <summary>
            Vrati nazov jazyka
            </summary>
            <param name="type">LanguageTypes</param>
            <returns>Meno alebo null</returns>
        </member>
        <member name="M:Project858.Web.UserBase.GetCultureFromValue(Project858.Web.LanguageTypes)">
            <summary>
            Vrati culturu pre pozadovany typ jazyka
            </summary>
            <param name="type">LanguageTypes</param>
            <returns>Cultura alebo null</returns>
        </member>
        <member name="M:Project858.Web.UserBase.GetIsoCodeFromValue(Project858.Web.LanguageTypes)">
            <summary>
            Vrati iso kod pre pozadovany typ jazyka
            </summary>
            <param name="type">LanguageTypes</param>
            <returns>Iso code alebo null</returns>
        </member>
        <member name="P:Project858.Web.UserBase.CurrentLanguage">
            <summary>
            Nastavi alebo vrati aktualne nastaveny jazyk
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.Handler">
            <summary>
            Handler na spracovanie udalosti
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.CurrentUser">
            <summary>
            Aktualne prihlaseny uzivatel alebo null
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.UserCookieName">
            <summary>
            Cookie name pre uzivatela
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.LanguageCookieName">
            <summary>
            Cookie name pre uzivatela
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.HostAddressCookieName">
            <summary>
            Cookie name na ziskanie host address
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.Blocked">
            <summary>
            Definuje ci je aktualny uzivatel blokovany alebo nie
            </summary>
        </member>
        <member name="P:Project858.Web.UserBase.Id">
            <summary>
            Jedinecne Id uzivatela
            </summary>
        </member>
        <member name="T:Project858.Web.WebApplication">
            <summary>
            Web Applikacia a jej zakladne funkcie
            </summary>
        </member>
        <member name="F:Project858.Web.WebApplication.ANALYTICS_COOKIE_NAME">
            <summary>
            Cookie name v ktorej si uchovavame id uzivatela
            </summary>
        </member>
        <member name="M:Project858.Web.WebApplication.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Web.WebApplication.m_cache">
            <summary>
            Cache
            </summary>
        </member>
        <member name="M:Project858.Web.WebApplication.OnTrace(Project858.Diagnostics.TraceTypes,System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu do suboru
            </summary>
            <param name="type">Typ logovania</param>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Argumenty pre String.Format(message, args)</param>
        </member>
        <member name="M:Project858.Web.WebApplication.OnException(System.Exception)">
            <summary>
            Zaloguje vzniknutu chybu do suboru
            </summary>
            <param name="exception">Chyba ktora vznikla</param>
        </member>
        <member name="M:Project858.Web.WebApplication.UpdateValue(System.Guid,System.DateTimeOffset)">
            <summary>
            Aktualizuje hodnotu
            </summary>
            <param name="key">Guid ktory chceme aktualizovat</param>
            <param name="date">Datum ktory chceme ulozit</param>
        </member>
        <member name="M:Project858.Web.WebApplication.ValidateValue(System.Guid,System.DateTimeOffset)">
            <summary>
            Overi platnost hodnoty v zavislosti od datumu
            </summary>
            <param name="key">Guid ktory cheme overit</param>
            <param name="date">Datum ktory chceme overit</param>
            <returns>True = zaznam je ok, inak false</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.SendMailMessage(System.String,System.String,System.String,System.String,System.String,System.Collections.Generic.List{System.String})">
            <summary>
            Odosle emailovu spravu cez definovany smtp server
            </summary>
        </member>
        <member name="M:Project858.Web.WebApplication.SendMailMessage(System.Net.Mail.MailMessage)">
            <summary>
            SendMailMessage
            </summary>
        </member>
        <member name="M:Project858.Web.WebApplication.SendMailMessage(System.Net.Mail.MailMessage,System.String,System.Int32,System.String,System.String,System.Boolean)">
            <summary>
            SendMailMessage
            </summary>
        </member>
        <member name="M:Project858.Web.WebApplication.UserBaseValidateToken(System.String,System.String)">
            <summary>
            Overi spravnost tokenu a to ci je uzivatel stale prihlaseny
            </summary>
            <param name="token">Token uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.UserBaseGetUserLoginIdFromToken(System.String,System.String)">
            <summary>
            Vrati id uzivatela z tokenu
            </summary>
            <param name="token">Token uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.UserBaseGetUserToken(System.Guid,System.String)">
            <summary>
            Vygeneruje token obsahujuci dolezite data na validaciu uzivatela
            </summary>
            <param name="userId">Id uzivatela</param>
            <param name="hostAddress">IP adresa uzivatela odkial sa prihlasil</param>
            <returns>Token uzivatela</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.UserBaseGetHostAddress">
            <summary>
            Vrati host adress v pripade specialnych pripadov
            </summary>
            <returns>Host address alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.UserBaseGetUserFromUserLoginId(System.Guid,System.String)">
            <summary>
            Vrati uzivatela na zaklade id prihlasenia a IP adresy z ktorej uzivatel prichadza
            </summary>
            <param name="id">Id prihlasenia uzivatela</param>
            <param name="hostAddress">IP adresa z ktorej uzivatel prichadza</param>
            <returns>User alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.UserBaseUserLogOff(System.Guid)">
            <summary>
            Vykona odhlasenie uzivatela na zaklade Id prihlasenia
            </summary>
            <param name="id">Id prihlasenia uzivatela</param>
        </member>
        <member name="M:Project858.Web.WebApplication.Login(System.String,System.String)">
            <summary>
            Vykona prihlasenie uzivatela
            </summary>
            <param name="name">Meno uzivatela</param>
            <param name="password">Heslo uzivatela</param>
            <returns>Uzivatel ktory bol prihlaseny alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.GetSourceClient">
            <summary>
            Inicializuje a vrati sql klienta na pristup k databaze
            </summary>
            <returns>Sql databaza</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.WebApplication_BeginRequest(System.Object,System.EventArgs)">
            <summary>
            Spracuje prichadzajuci request a nastavi aktualny jazyk
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">EventArgs</param>
        </member>
        <member name="M:Project858.Web.WebApplication.InternalGetCurrentCulture(Project858.Web.LanguageTypes)">
            <summary>
            Vrati aktualnu kulturu requestu
            </summary>
            <param name="language">Jazyk ktoreho kulturu chceme ziskat</param>
            <returns>Kultura alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebApplication.Finalize">
            <summary>
            Deinitialize this class
            </summary>
        </member>
        <member name="P:Project858.Web.WebApplication.AccessTokenKey">
            <summary>
            Token key na parsovanie hash hodnot
            </summary>
        </member>
        <member name="P:Project858.Web.WebApplication.Cache">
            <summary>
            Cache na ukladanie dat
            </summary>
        </member>
        <member name="T:Project858.Web.WebConfiguration">
            <summary>
            Konfiguracia web sluzby a jej dodatocnych funkcii
            </summary>
        </member>
        <member name="M:Project858.Web.WebConfiguration.#cctor">
            <summary>
            Static initialize this class
            </summary>
        </member>
        <member name="P:Project858.Web.WebConfiguration.ImageConfiguration">
            <summary>
            Konfiguracia obrazkov
            </summary>
        </member>
        <member name="P:Project858.Web.WebConfiguration.OnResponseMessageDelegate">
            <summary>
            Delegat na nacitanie spravy, popisu response stavu
            </summary>
        </member>
        <member name="P:Project858.Web.WebConfiguration.OnImageLoadDelegate">
            <summary>
            Delegat na nacitanie obrazku
            </summary>
        </member>
        <member name="P:Project858.Web.WebConfiguration.OnFileLoadDelegate">
            <summary>
            Delegat na nacitanie suboru
            </summary>
        </member>
        <member name="T:Project858.Web.WebConfiguration.WebImageConfiguration">
            <summary>
            Konfiguracia obrazkov
            </summary>
        </member>
        <member name="P:Project858.Web.WebConfiguration.WebImageConfiguration.BasUrl">
            <summary>
            zakladna url na pristup k obrazkom
            </summary>
        </member>
        <member name="T:Project858.Web.WebConfiguration.ResponseMessageDelegate">
            <summary>
            Vrati spravu popisujucu response stav
            </summary>
            <param name="type">Response stav</param>
            <returns>Sprava, popis stavu</returns>
        </member>
        <member name="T:Project858.Web.WebConfiguration.ImageLoadDelegate">
            <summary>
            Delegat na nacitanie obrazku
            </summary>
            <param name="id">Id obrazku ktory chceme nacitat</param>
            <param name="format">Format obrazku</param>
            <returns>Obrazok alebo null</returns>
        </member>
        <member name="T:Project858.Web.WebConfiguration.FileLoadDelegate">
            <summary>
            Delegat na nacitanie suboru
            </summary>
            <param name="id">Id suboru ktory chceme nacitat</param>
            <returns>Suboru alebo null</returns>
        </member>
        <member name="T:Project858.Web.WebImage">
            <summary>
            Web obrazok reprezentovany datami
            </summary>
        </member>
        <member name="M:Project858.Web.WebImage.#ctor(System.Byte[],System.Drawing.Imaging.ImageFormat)">
            <summary>
            Initializet this class
            </summary>
            <param name="data"></param>
            <param name="format">Format obrazku</param>
        </member>
        <member name="M:Project858.Web.WebImage.getImage">
            <summary>
            Vrati image
            </summary>
            <returns>Image alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebImage.setImage(System.Drawing.Image)">
            <summary>
            Prekonvertuje obrazok na pole bytov
            </summary>
            <param name="image">Obrazok ktory chceme konvertovat</param>
            <returns>Pole dat</returns>
        </member>
        <member name="M:Project858.Web.WebImage.InternalGetEncoder(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Vrati code info pre encoder obrazku
            </summary>
            <param name="format">Format z ktreho chceme ziskat code info</param>
            <returns>ImageCodecInfo alebo null</returns>
        </member>
        <member name="P:Project858.Web.WebImage.Image">
            <summary>
            Obrazok
            </summary>
        </member>
        <member name="P:Project858.Web.WebImage.IdImage">
            <summary>
            Jedinecne id obrazku
            </summary>
        </member>
        <member name="P:Project858.Web.WebImage.ImageFormat">
            <summary>
            Definuje format obrazku
            </summary>
        </member>
        <member name="P:Project858.Web.WebImage.ContentType">
            <summary>
            Content type obrazku
            </summary>
        </member>
        <member name="P:Project858.Web.WebImage.ImageBlob">
            <summary>
            Pole data reprezentujuce obrazok
            </summary>
        </member>
        <member name="T:Project858.Web.WebUtility">
            <summary>
            Utility na spravu webu
            </summary>
        </member>
        <member name="M:Project858.Web.WebUtility.AbsoluteAction(System.String,System.String,System.Object)">
            <summary>
            Generates a fully qualified URL to an action method by using
            the specified action name, controller name and route values.
            </summary>
            <param name="url">The URL helper.</param>
            <param name="actionName">The name of the action method.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The route values.</param>
            <returns>The absolute URL.</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.TraceCurrentRequest">
            <summary>
            Vypise aktualny request
            </summary>
        </member>
        <member name="M:Project858.Web.WebUtility.TraceCurrentRequestHeaders">
            <summary>
            Vypise header aktualneho requestu
            </summary>
        </member>
        <member name="M:Project858.Web.WebUtility.GetCurrentRequestId">
            <summary>
            Vrati aktualne id requestu
            </summary>
            <returns>Reuqest id alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetCurrentUserHostAddress">
            <summary>
            Vrati aktualnu ip adresu klienta zasialajucehor equest alebo null
            </summary>
            <returns>ip adresa alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetCurrentReferrerAbsolutePathOrNull">
            <summary>
            Vrati aktualnu absolutnu cestu referrera
            </summary>
            <returns>Cesta alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.Trace(System.Exception)">
            <summary>
            Zaloguje spravu
            </summary>
            <param name="exception">Chyba ktoru chceme zalogovat</param>
        </member>
        <member name="M:Project858.Web.WebUtility.Trace(System.String,System.Object[])">
            <summary>
            Zaloguje spravu
            </summary>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Argumenty pre String.Format</param>
        </member>
        <member name="M:Project858.Web.WebUtility.Trace(Project858.Diagnostics.TraceTypes,System.String,System.Object[])">
            <summary>
            Zaloguje spravu
            </summary>
            <param name="type">Typ logovania</param>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Argumenty pre String.Format</param>
        </member>
        <member name="M:Project858.Web.WebUtility.GetMvcHtmlStringWithUrl(System.String)">
            <summary>
            Vrati MVC html string ktory nahradi url adresy z textu html A tagom
            </summary>
            <param name="value">String ktory chceme sprcovat</param>
            <returns>MvcHtmlString</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="behavior">Specifies whether HTTP GET requests from the client are allowed.</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.String)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="message">Sprava vysvetlujuca odpoved</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.String,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="message">Sprava vysvetlujuca odpoved</param>
            <param name="behavior">Specifies whether HTTP GET requests from the client are allowed.</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.String,System.String)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="message">Sprava vysvetlujuca odpoved</param>
            <param name="redirectUrl">Url na ktoru sa ma redirectnut stranka</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.String,System.String,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="message">Sprava vysvetlujuca odpoved</param>
            <param name="redirectUrl">Url na ktoru sa ma redirectnut stranka</param>
            <param name="behavior">Specifies whether HTTP GET requests from the client are allowed.</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.String,System.String,System.Object)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="message">Sprava vysvetlujuca odpoved</param>
            <param name="redirectUrl">Url na ktoru sa ma redirectnut stranka</param>
            <param name="data">Data ktore sa odosielaju</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.GetJsonResult(Project858.Web.ResponseTypes,System.String,System.String,System.Object,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Vrati odpoved v definovanom formate
            </summary>
            <param name="type">Typ odpovede</param>
            <param name="message">Sprava vysvetlujuca odpoved</param>
            <param name="redirectUrl">Url na ktoru sa ma redirectnut stranka</param>
            <param name="data">Data ktore sa odosielaju</param>
            <param name="behavior">JsonRequestBehavior</param>
            <returns>Navratova hodnota pre server</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.ConvertBlobToImage(System.Byte[])">
            <summary>
            Vrati image
            </summary>
            <param name="data"></param>
            <returns>Image alebo null</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.ConvertImageToBlob(System.Drawing.Image)">
            <summary>
            Prekonvertuje obrazok na pole bytov
            </summary>
            <param name="image">Obrazok ktory chceme konvertovat</param>
            <returns>Pole dat</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.Web.WebUtility.GeneratePageNumber(System.Int32,System.Int32)" -->
        <member name="M:Project858.Web.WebUtility.ParsePage(System.String)">
            <summary>
            Vyparsuje ciselnu hodnotu strany
            </summary>
            <param name="page">String-ova hodnota v ktorej sa ma nachadzat cislo strany</param>
            <returns>Vyparsovane cislo strany alebo 0</returns>
        </member>
        <member name="M:Project858.Web.WebUtility.Json(System.Object,System.Web.Mvc.JsonRequestBehavior)">
            <summary>
            Vytvori json result ako odpoved
            </summary>
            <param name="data">Data ktore chceme odoslat</param>
            <param name="behavior">JsonRequestBehavior</param>
            <returns>JsonResult</returns>
        </member>
        <member name="T:Project858.Win32.WindowsMessages">
            <summary>
            Windows Messages Defined in winuser.h from Windows SDK v6.1  Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen. 
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            /// </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application. 
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window. 
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed. 
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu, clicks the maximize button, minimize button, restore button, close button, or moves the form. You can stop the form from moving by filtering this out.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns. 
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette. 
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application. 
            </summary>
        </member>
        <member name="F:Project858.Win32.WindowsMessages.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="T:Project858.AsyncResult">
            <summary>
            The result of an asynchronous operation.
            </summary>
        </member>
        <member name="M:Project858.AsyncResult.#ctor(System.AsyncCallback,System.Object)">
            <summary>
            Initialize this class
            </summary>
            <param name="callback">Calback na asynchronne oznamenie ukoncenia operacie</param>
            <param name="state">Objekt obsahujuci informacie o asynchronnej operacii</param>
        </member>
        <member name="F:Project858.AsyncResult.isDisposed">
            <summary>
            Pomocny objekt definujuci ci doslo k Dispose() objektu
            </summary>
        </member>
        <member name="F:Project858.AsyncResult.asyncCallback">
            <summary>
            Calback na asynchronne oznamenie ukoncenia operacie
            </summary>
        </member>
        <member name="F:Project858.AsyncResult.state">
            <summary>
            Objekt obsahujuci informacie o asynchronnej operacii
            </summary>
        </member>
        <member name="F:Project858.AsyncResult.manualResentEvent">
            <summary>
            Manual Reset Event na cakanie ukoncenia operacie
            </summary>
        </member>
        <member name="M:Project858.AsyncResult.OnCompleted">
            <summary>
            Ukonci operaciu a vykona event s oznamenim
            </summary>
        </member>
        <member name="M:Project858.AsyncResult.Dispose">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
        </member>
        <member name="M:Project858.AsyncResult.Dispose(System.Boolean)">
            <summary>
            Releases unmanaged and - optionally - managed resources
            </summary>
            <param name="disposing">
            <c>true</c> 
            to release both managed and unmanaged resources; 
            <c>false</c> 
            to release only unmanaged resources.
            </param>
        </member>
        <member name="M:Project858.AsyncResult.OnDisposed(System.EventArgs)">
            <summary>
            Vygeneruje event oznamujuci Disposed()
            </summary>
            <param name="e">EventArgs</param>
        </member>
        <member name="E:Project858.AsyncResult.disposed">
            <summary>
            Event oznamujuci Dispose() objektu
            </summary>
        </member>
        <member name="E:Project858.AsyncResult.Disposed">
            <summary>
            Occurs when this instance is _disposed.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.AsyncResult.AsyncState">
            <summary>
            (Get) Objekt obsahujuci informacie o asynchronnej operacii
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.AsyncResult.AsyncWaitHandle">
            <summary>
            (Get) Handle sluziacia na cakanie na ukoncenie operacie
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.AsyncResult.CompletedSynchronously">
            <summary>
            (Get) Vrati ci bola operacia dokoncena synchronne
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.AsyncResult.IsCompleted">
            <summary>
            (Get) Indikacia ci bola operacia ukoncena
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.AsyncResult.IsDisposed">
            <summary>
            (Get) Definuje ci bol objektu Disposed()
            </summary>
        </member>
        <member name="T:Project858.ComponentModel.Client.ClientCollecion">
            <summary>
            Kolekcia klientov
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientCollecion.StartAll">
            <summary>
            Spusti vsetkych klientov v kolekcii
            </summary>
            <returns>True = klienti boli uspesne inicializovany</returns>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientCollecion.PauseAll">
            <summary>
            Pozastavi vsetkych klientov v kolekcii
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientCollecion.StopAll">
            <summary>
            Ukonci vsetkych klientov v kolekcii
            </summary>
        </member>
        <member name="M:Project858.ComponentModel.Client.ClientCollecion.TypeContains(System.Type)">
            <summary>
            Overi ci sa rovnaky typ klienta uz nenacahdza v zozname
            </summary>
            <param name="type">Typ klienta</param>
            <returns>True = klient rovnakeho typu sa v zozname uz nachadza</returns>
        </member>
        <member name="T:Project858.ComponentModel.Client.ClientStates">
            <summary>
            Enum definujuci stavy klienta
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientStates.Stop">
            <summary>
            Klient je zastaveny
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientStates.Start">
            <summary>
            Klient je spusteny
            </summary>
        </member>
        <member name="F:Project858.ComponentModel.Client.ClientStates.Pause">
            <summary>
            Klient je pozastaveny
            </summary>
        </member>
        <member name="T:Project858.Net.Mail.MailEventHandler">
            <summary>
            Delegat ako predpis pre event oznamujuci poziadavku na odoslanie emailovej spravy
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">MailEventArgs</param>
        </member>
        <member name="T:Project858.Net.Mail.MailEventArgs">
            <summary>
            EventArgs pre event oznamujuci poziadavku na odoslanie emailovej spravy
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.MailEventArgs.#ctor(System.Net.Mail.MailMessage)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Neinicializovana sprava
            </exception>
            <param name="message">Sprava emailu</param>
        </member>
        <member name="F:Project858.Net.Mail.MailEventArgs.message">
            <summary>
            Sprava ktoru chceme odoslat
            </summary>
        </member>
        <member name="P:Project858.Net.Mail.MailEventArgs.Message">
            <summary>
            (Get) Sprava ktoru chceme odoslat
            </summary>
        </member>
        <member name="T:Project858.Net.Mail.IMailClient">
            <summary>
            Interface ako predpis pre klienta zabezpecujuceho odosielani emailovych správ
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.IMailClient.Send(System.Net.Mail.MailMessage)">
            <summary>
            Odosle emailovu spravu
            </summary>
            <param name="message">Sprava ktoru chceme odoslat</param>
        </member>
        <member name="M:Project858.Net.Mail.IMailClient.SendAsync(System.Net.Mail.MailMessage)">
            <summary>
            Odosle emailovu spravu v asynchronnom móde
            </summary>
            <param name="message">Sprava ktoru chceme odoslat</param>
        </member>
        <member name="P:Project858.Net.Mail.IMailClient.SmtpServer">
            <summary>
            (Get) Meno smtp servera na odosielanie sprav
            </summary>
        </member>
        <member name="P:Project858.Net.Mail.IMailClient.SmtpLogin">
            <summary>
            (Get) Login k smtp serveru
            </summary>
        </member>
        <member name="P:Project858.Net.Mail.IMailClient.SmtpPassword">
            <summary>
            (Get) Heslo k smtp serveru
            </summary>
        </member>
        <member name="P:Project858.Net.Mail.IMailClient.SmtpSsl">
            <summary>
            (Get) Definuje ci je odosielanie zabezpecene pomocou SSL
            </summary>
        </member>
        <member name="P:Project858.Net.Mail.IMailClient.Recipients">
            <summary>
            Kolekcia prijemcov emailovych sprav
            </summary>
        </member>
        <member name="P:Project858.Net.Mail.IMailClient.Sender">
            <summary>
            Odosielatel emailovej spravy
            </summary>
        </member>
        <member name="T:Project858.Diagnostics.ITraceClient">
            <summary>
            Interface ako predpis pre klienta zabezpecujuceho logovanie informacii
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.ITraceClient.Trace(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zaloguje pozadovane data
            </summary>
            <param name="time">Cas logovacej spravy</param>
            <param name="traceType">Typ logovania</param>
            <param name="modulName">Nazov modulu ktory spravu vytvoril</param>
            <param name="message">Sprava s informaciou</param>
            <returns>True = logovanie bolo uspesne</returns>
        </member>
        <member name="M:Project858.Diagnostics.ITraceClient.TraceAsync(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zaloguje pozadovane data
            </summary>
            <param name="time">Cas logovacej spravy</param>
            <param name="traceType">Typ logovania</param>
            <param name="modulName">Nazov modulu ktory spravu vytvoril</param>
            <param name="message">Sprava s informaciou</param>
        </member>
        <member name="T:Project858.Diagnostics.TraceClientTypes">
            <summary>
            Definuje dostupne typy Trace klientov
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceClientTypes.None">
            <summary>
            Ziadny / nedefinovany klient
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceClientTypes.SQLite">
            <summary>
            Klient logujuci do SQLite databazy
            </summary>
        </member>
        <member name="T:Project858.Diagnostics.TraceTypes">
            <summary>
            Enum definujuci typy logovania
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceTypes.Off">
            <summary>
            Output no tracing and debugging messages.
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceTypes.Error">
            <summary>
            Output error-handling messages.
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceTypes.Warning">
            <summary>
            Output warnings and error-handling messages.
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceTypes.Info">
            <summary>
            Output informational messages, warnings, and error-handling messages.
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceTypes.Verbose">
            <summary>
            Output all debugging and tracing messages.
            </summary>
        </member>
        <member name="T:Project858.ChangeStateEventArgs">
            <summary>
            EventArgs ako sucast event na oznamenie zmeny stav
            </summary>
        </member>
        <member name="M:Project858.ChangeStateEventArgs.#ctor(System.Boolean)">
            <summary>
            Initialize this class
            </summary>
            <param name="state">Aktualny stav</param>
        </member>
        <member name="F:Project858.ChangeStateEventArgs._state">
            <summary>
            Aktualny stav
            </summary>
        </member>
        <member name="P:Project858.ChangeStateEventArgs.State">
            <summary>
            Aktualny stav
            </summary>
        </member>
        <member name="T:Project858.ChangeStateEventHandler">
            <summary>
            Delegat ako predpis pre evnet oznamujuci zmenu stav
            </summary>
            <param name="sender">Odosielatel udalosti</param>
            <param name="e">ChangeStateEventArgs</param>
        </member>
        <member name="T:Project858.ConnectionStates">
            <summary>
            Urcuje stavy v akych sa moze nachadzat komunikacia
            </summary>
        </member>
        <member name="F:Project858.ConnectionStates.Connecting">
            <summary>
            Prebieha pripajanie
            </summary>
        </member>
        <member name="F:Project858.ConnectionStates.Connected">
            <summary>
            Pripojenie je aktivne
            </summary>
        </member>
        <member name="F:Project858.ConnectionStates.Closed">
            <summary>
            Spojenie je zatvorene
            </summary>
        </member>
        <member name="T:Project858.Constants">
            <summary>
            Standardne casto vyuzivane konstanty
            </summary>
        </member>
        <member name="F:Project858.Constants.REGEX_ALPHA">
            <summary>
            Regex na overenie stringy ci obsahuje len alpha znaky.
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka")
            </summary>
        </member>
        <member name="F:Project858.Constants.REGEX_LENGTH">
            <summary>
            Regex na overenie dlzky stringu
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka")
            </summary>
        </member>
        <member name="F:Project858.Constants.REGEX_NUMERIC">
            <summary>
            Regex na overenie stringy ci obsahuje len ciselne znaky.
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka")
            </summary>
        </member>
        <member name="F:Project858.Constants.REGEX_ALPHANUMERIC">
            <summary>
            Regex na overenie stringy ci obsahuje len alpha numericke znaky
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka")
            </summary>
        </member>
        <member name="F:Project858.Constants.REGEX_ALPHANUMERIC_SMALL">
            <summary>
            Regex na overenie stringy ci obsahuje len alpha numericke znaky, pricom alphanumericke su len male
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka")
            </summary>
        </member>
        <member name="T:Project858.ExtensionMethod">
            <summary>
            Metody na rozsirenie vlastnosti objektov
            </summary>
        </member>
        <member name="M:Project858.ExtensionMethod.IsList(System.Type)">
            <summary>
            Overi ci je typ typu list
            </summary>
            <param name="type">Typ ktory chceme overit</param>
            <returns>Boolean typ je List inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsList(System.Type,System.Type)">
            <summary>
            Overi ci je typ typu list
            </summary>
            <param name="type">Typ ktory chceme overit</param>
            <param name="itemType">Typ itemu</param>
            <returns>Boolean typ je List inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToStringWithoutDash(System.Guid)">
            <summary>
            Skonvertuje guid to stringu bez pomlciek
            </summary>
            <param name="value">Guid ktory chceme konvertovat</param>
            <returns>Konvertovany guid</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsEmpty(System.Guid)">
            <summary>
            Overi ci je guid empty
            </summary>
            <param name="value">Guid ktory chceme overit</param>
            <returns>True = guid je empty, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToDbValue(System.Nullable{System.Guid})">
            <summary>
            Vrati hodnotu urcenu pre databazu. Ak je hodnota null vrati DBNull.Value
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>Hodnota pre databazu</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetDbValue(System.Guid)">
            <summary>
            Vrati DB null ak je hodnota Guid.Empty, alebo vrati aktualnu hodnotu
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>DBNull alebo aktualna hodnota</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToTraceString(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vytvori log zaznam z commandu
            </summary>
            <param name="command">Command ktory chceme zalogovat</param>
        </member>
        <member name="M:Project858.ExtensionMethod.ToDateTimeOffset(System.String)">
            <summary>
            Skonvertuje string na DateTimeOffset
            </summary>
            <param name="value">Hodnota ktoru chceme parsovat</param>
            <returns>DateTimeOffset</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToGuid(System.String)">
            <summary>
            Skonvertuje string do guid, alebo vrati Empty
            </summary>
            <param name="value">Hodnota ktoru chceme konvertovat</param>
            <returns>Guid alebo Guid.Empty</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToGuidWithoutDash(System.String)">
            <summary>
            Skonvertuje string do guid, alebo vrati Empty
            </summary>
            <param name="value">Hodnota ktoru chceme konvertovat</param>
            <returns>Guid alebo Guid.Empty</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetPropertyValue``1(Newtonsoft.Json.Linq.JObject,System.String)">
            <summary>
            Vrati hodnotu property
            </summary>
            <typeparam name="T">Typ obejktu ktory ziadame</typeparam>
            <param name="data">Data z ktorych chceme hodnotu citat</param>
            <param name="name">Meno property ktorej hodnotu chceme nacitat</param>
            <returns>Hodnota typu T alebo jej default</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetPropertyValue``1(System.Dynamic.ExpandoObject,System.String)">
            <summary>
            Vrati hodnotu property
            </summary>
            <typeparam name="T">Typ obejktu ktory ziadame</typeparam>
            <param name="data">Data z ktorych chceme hodnotu citat</param>
            <param name="name">Meno property ktorej hodnotu chceme nacitat</param>
            <returns>Hodnota typu T alebo jej default</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.RemoveDiacritics(System.String)">
            <summary>
            Odstrani diakritiku z textu
            </summary>
            <param name="value">Text z ktoreho chceme odstranit diakritiku</param>
            <returns>Text s odstranenou diakritikou</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToJsonString(System.Object)">
            <summary>
            Vrati json string z objektu
            </summary>
            <param name="value">Objekt ktory chceme konverotvat</param>
            <returns>Text alebo null</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToStringAllValues(System.Collections.Specialized.NameValueCollection)">
            <summary>
            Vytvori string s informaciami o vsetkych polozkach
            </summary>
            <param name="collection">Kolekcia dat ktore chceme vypisat</param>
            <returns>Vypisane hodnoty</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToIso8601String(System.DateTime)">
            <summary>
            Skonvertuje datum a cas na iso 8601 format
            </summary>
            <param name="value">DateTimeOffset</param>
            <returns>ISO 8601 format</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToIso8601String(System.DateTimeOffset)">
            <summary>
            Skonvertuje datum a cas na iso 8601 format
            </summary>
            <param name="value">DateTimeOffset</param>
            <returns>ISO 8601 format</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsAlpha(System.String)">
            <summary>
            Overi ci je hodnota typu alpha
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>True hodnota je alpha, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsAlpha(System.String,System.Int32)">
            <summary>
            Overi ci je hodnota typu alpha
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="length">Dlzka stringu ktory chceme overit</param>
            <returns>True hodnota je alpha, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsDBNull(System.Object)">
            <summary>
            Overi ci je objekt typu DB Null
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>True = objekt je DB null, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsNumeric(System.String)">
            <summary>
            Overi ci je hodnota typu numeric
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>True hodnota je numeric, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsNumeric(System.String,System.Int32)">
            <summary>
            Overi ci je hodnota typu numeric
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="length">Dlzka stringu ktory chceme overit</param>
            <returns>True hodnota je numeric, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsAlphaNumeric(System.String)">
            <summary>
            Overi ci je hodnota typu alphanumeric
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>True hodnota je alphanumeric, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IsAlphaNumeric(System.String,System.Int32)">
            <summary>
            Overi ci je hodnota typu alphanumeric
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="length">Dlzka stringu ktory chceme overit</param>
            <returns>True hodnota je alphanumeric, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.TruncateLongString(System.String,System.Int32)">
            <summary>
            Vrati zaciatocnu cast stringu o pozadovanej dlzke
            </summary>
            <param name="value">String</param>
            <param name="maxLength">Maximalna dlzka stringu ktoru ziadame</param>
            <returns>Orezany string, alebo povodny string</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToSHA1(System.String)">
            <summary>
            Zacriptuje string do SHA1
            </summary>
            <param name="value">Hodnota ktoru chceme zacryptovat</param>
            <returns>Zacryptovany string</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ValidateContainsWords(System.String,System.String[])">
            <summary>
            Overi ci zadany text obsahuje pozadovane slova alebo ich modifikaciu s medziznakmi
            </summary>
            <param name="value">Text ktory chceme overit</param>
            <param name="words">Slova na overenie</param>
            <returns>True = slovo je zahrnute v texte inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToDbValue(System.String)">
            <summary>
            Vrati hodnotu urcenu pre databazu. Ak je hodnota null vrati DBNull.Value
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>Hodnota pre databazu</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToDbValue(System.Nullable{System.Int32})">
            <summary>
            Vrati hodnotu urcenu pre databazu. Ak je hodnota null vrati DBNull.Value
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>Hodnota pre databazu</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.Validate(System.String,System.Int32)">
            <summary>
            Overi string na jeho minimalnu dlzku
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="minLength">Minimalna dlzka ktoru ma mat string, pricom nemoze byt zlozeny len z white space znakov</param>
            <returns>True = string ma minimalnu dlzku, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.Validate(System.String,System.Int32,System.Int32)">
            <summary>
            Overi string na jeho minimalnu dlzku
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="minLength">Minimalna dlzka ktoru ma mat string, pricom nemoze byt zlozeny len z white space znakov</param>
            <param name="maxLength">Maximalna dlzka ktory moze mt string</param>
            <returns>True = string ma minimalnu dlzku, inak false</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.RemoveReplyNewLine(System.String)">
            <summary>
            Odstrani opakovane znaky new line
            </summary>
            <param name="value">String z ktoreho chceme ordstranit znaky</param>
            <returns>Upraveny string</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetDbValue(Microsoft.SqlServer.Types.SqlGeography)">
            <summary>
            Vrati DB null ake je hodnota Geography null, alebo ak neobsahuje data, inak vrati aktualnu hodnotu
            </summary>
            <param name="value">Objek ktory chceme overit</param>
            <returns>DBNull alebo aktualna hodnota</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetDbValue(System.String)">
            <summary>
            Vrati DB null ak je hodnota Empty, alebo vrati aktualnu hodnotu
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <returns>DBNull alebo aktualna hodnota</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetSHA1Value(System.String)">
            <summary>
            Zacryptuje aktualnu hodnotu stringu do SHA1
            </summary>
            <param name="value">Hodnota ktoru chceme zacrpytovat</param>
            <returns>Zacryptovana hodnota alebo Empty</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.ToByteArray(System.Web.HttpPostedFileBase)">
            <summary>
            Vrati pole bytov z http file
            </summary>
            <param name="value">Http file z ktoreho chceme vratit pole dat</param>
            <returns>Pole dat alebo null</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.IntrnalDrawWatermark(System.Drawing.Image,System.Drawing.Image,System.Int32,System.Int32)">
            <summary>
            Vykresli vodoznak / logo paceLife na fotografiu
            </summary>
            <param name="image">Obrazok na ktory chceme vykreslit vodoznak</param>
            <param name="width">Sirka povodneho obrazu na ktory ideme vykreslovat</param>
            <param name="height">Vyska povodneho obrazku na ktory ideme vykreslovat</param>
            <returns>Obrazok s vykreslenym vodoznakom, alebo povodny obrazok</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.CropOrResizeImage(System.Drawing.Image,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Drawing.Imaging.ImageFormat)">
            <summary>
            Resize obrazok na pozadovanu vysku a sirku. Vyska a sirka sa dosiahne bud zmenou velkosti alebo orezanim
            </summary>
            <param name="image">Image ktory chceme resiznut</param>
            <param name="width">Pozadovana sirka obrazku</param>
            <returns>Upraveny obrazok</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.CropOrResizeImage(System.Drawing.Image,System.Nullable{System.Int32},System.Nullable{System.Int32},System.Boolean,System.Drawing.Imaging.ImageFormat)">
            <summary>
            Resize obrazok na pozadovanu vysku a sirku. Vyska a sirka sa dosiahne bud zmenou velkosti alebo orezanim
            </summary>
            <param name="image">Image ktory chceme resiznut</param>
            <param name="width">Pozadovana sirka obrazku</param>
            <param name="height">Pozadovana vyska obrazku</param>
            <param name="needToFill">Definuje ci je potrebne obrazok roztiahnut</param>
            <param name="format">Format obrazku</param>
            <returns>Upraveny obrazok</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetMimeType(System.Drawing.Image)">
            <summary>
            Vrati ContentType obrazku
            </summary>
            <param name="image">Obrazok ktoreho content typ chceme ziskat</param>
            <returns>ContentType</returns>
        </member>
        <member name="M:Project858.ExtensionMethod.GetMimeType(System.Drawing.Imaging.ImageFormat)">
            <summary>
            Vrati ContentType formatu
            </summary>
            <param name="imageFormat">Format ktoreho content typ chceme ziskat</param>
            <returns>ContentType</returns>
        </member>
        <member name="T:Project858.FingerPrint">
            <summary>
            Vytvori 16 bitovy unikatny kluc na identifikaciu hardware
            </summary>
        </member>
        <member name="M:Project858.FingerPrint.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.FingerPrint.fingerPrint">
            <summary>
            Seriove / jedinecne cislo PC
            </summary>
        </member>
        <member name="M:Project858.FingerPrint.GetHash(System.String)">
            <summary>
            Zahesuje vstupny string
            </summary>
            <param name="s">String ktory chcem hesovat</param>
            <returns>Zahesovany unikatny kluc</returns>
        </member>
        <member name="M:Project858.FingerPrint.GetHexString(System.Byte[])">
            <summary>
            Vrati hesovaci string z dat
            </summary>
            <param name="bt">Data ktore chcem zahesovat na hexa</param>
            <returns>Zahesovane data</returns>
        </member>
        <member name="M:Project858.FingerPrint.identifier(System.String,System.String,System.String)">
            <summary>
            Vrati hardwrovy identifikator
            </summary>
            <param name="wmiClass"></param>
            <param name="wmiProperty"></param>
            <param name="wmiMustBeTrue"></param>
            <returns>Hardwarovy identifikator</returns>
        </member>
        <member name="M:Project858.FingerPrint.identifier(System.String,System.String)">
            <summary>
            Vrati hardwrovy identifikator
            </summary>
            <param name="wmiClass"></param>
            <param name="wmiProperty"></param>
            <returns>Hardwarovy identifikator</returns>
        </member>
        <member name="M:Project858.FingerPrint.cpuId">
            <summary>
            Vrati ID CPU
            </summary>
            <returns>Info</returns>
        </member>
        <member name="M:Project858.FingerPrint.biosId">
            <summary>
            BIOS Identifier
            </summary>
            <returns>Info</returns>
        </member>
        <member name="M:Project858.FingerPrint.diskId">
            <summary>
            Main physical hard drive ID
            </summary>
            <returns>info</returns>
        </member>
        <member name="M:Project858.FingerPrint.baseId">
            <summary>
            Motherboard ID
            </summary>
            <returns>info</returns>
        </member>
        <member name="M:Project858.FingerPrint.videoId">
            <summary>
            Primary video controller ID
            </summary>
            <returns>info</returns>
        </member>
        <member name="M:Project858.FingerPrint.macId">
            <summary>
            First enabled network card ID
            </summary>
            <returns>info</returns>
        </member>
        <member name="P:Project858.FingerPrint.Value">
            <summary>
            (Get) Unikatny kluc hardware. Example: 4876-8DB5-EE85-69D3-FE52-8CF7-395D-2EA9
            </summary>
        </member>
        <member name="T:Project858.UserInputTypes">
            <summary>
            Definuje typ inputu ktory sa aplikuje na overenie zadaneho textu
            </summary>
        </member>
        <member name="F:Project858.UserInputTypes.None">
            <summary>
            Ziadnay typ. Ocakava sa len pozadovana dlzka
            </summary>
        </member>
        <member name="F:Project858.UserInputTypes.Alpha">
            <summary>
            Iba alpha znaky
            </summary>
        </member>
        <member name="F:Project858.UserInputTypes.Numeric">
            <summary>
            Iba ciselne znaky
            </summary>
        </member>
        <member name="F:Project858.UserInputTypes.Alphanumeric">
            <summary>
            Alpha numericke znaky. Alphanumericke aj velke aj male znaky
            </summary>
        </member>
        <member name="F:Project858.UserInputTypes.AlphanumericSmall">
            <summary>
            Alpha numericke znaky. Alphanumericke iba male znaky
            </summary>
        </member>
        <member name="T:Project858.Utility">
            <summary>
            Trieda implementujuca pomocne metody.
            </summary>
        </member>
        <member name="F:Project858.Utility.REGEX_ALPHA">
            <summary>
            Regex na overenie stringu ci obsahuje len alpha znaky.
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka") alebo vyuzit Utlity.GetRegexPattern(regexConstant, length)
            </summary>
        </member>
        <member name="F:Project858.Utility.REGEX_LENGTH">
            <summary>
            Regex na overenie dlzky stringu
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka") alebo vyuzit Utlity.GetRegexPattern(regexConstant, length)
            </summary>
        </member>
        <member name="F:Project858.Utility.REGEX_NUMERIC">
            <summary>
            Regex na overenie stringu ci obsahuje len ciselne znaky.
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka") alebo vyuzit Utlity.GetRegexPattern(regexConstant, length)
            </summary>
        </member>
        <member name="F:Project858.Utility.REGEX_ALPHANUMERIC">
            <summary>
            Regex na overenie stringu ci obsahuje len alpha numericke znaky
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka") alebo vyuzit Utlity.GetRegexPattern(regexConstant, length)
            </summary>
        </member>
        <member name="F:Project858.Utility.REGEX_ALPHANUMERIC_SMALL">
            <summary>
            Regex na overenie stringu ci obsahuje len alpha numericke znaky, pricom alphanumericke su len male
            Je nutne urobit Replace("LENGTH", "pozadovana dlzka") alebo vyuzit Utlity.GetRegexPattern(regexConstant, length)
            </summary>
        </member>
        <member name="F:Project858.Utility.CONFIGURATION_PASSWORD">
            <summary>
            Kryptovacie heslo na ulozenie konfiguracie
            </summary>
        </member>
        <member name="F:Project858.Utility.WINDOWS_SERVICE_CONFIGURATION_PASSWORD">
            <summary>
            Kryptovacie heslo na ulozenie konfiguracie sluzby
            </summary>
        </member>
        <member name="M:Project858.Utility.GetFileExtensionFromMimeTypes(System.String)">
            <summary>
            Vrati extension z mime typu
            </summary>
            <param name="type">Mime type z ktoreho chceme nacitat extension</param>
            <returns>Extension alebo null</returns>
        </member>
        <member name="M:Project858.Utility.GetTraceString(System.Data.SqlClient.SqlCommand)">
            <summary>
            Zaloguje sql parametre
            </summary>
            <param name="command">Command ktory chceme zalogovat</param>
        </member>
        <member name="M:Project858.Utility.ConvertObjectToJson(System.Object)">
            <summary>
            Prekonvertuje objekt do json stringu
            </summary>
            <param name="value">Objekt ktory chceme konverotvat</param>
            <returns>Json text alebo null</returns>
        </member>
        <member name="M:Project858.Utility.DecodeValue(System.String,System.String)">
            <summary>
            Dekoduje vstupnu hodnotu na zaklade vstupneho kluca a algoritmu
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupna hodnota je null alebo empty
            </exception>
            <param name="key">Klud na dekodovanie</param>
            <param name="value">Hodnota ktoru chceme dekodovat</param>
            <returns>Dekodovana hodnota alebo null</returns>
        </member>
        <member name="M:Project858.Utility.EncodeValue(System.String,System.String)">
            <summary>
            Enkoduje vstupnu hodnotu na zaklade vstupneho kluca a algoritmu
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupna hodnota je null alebo empty
            </exception>
            <param name="key">Klud na enkodovanie</param>
            <param name="value">Hodnota ktoru chceme enkodovat</param>
            <returns>Enkodovana hodnota alebo null</returns>
        </member>
        <member name="M:Project858.Utility.ReverseString(System.String)">
            <summary>
            Reverzne string
            </summary>
            <param name="value">String ktory chceme reverznut</param>
            <returns>Reverznuty string alebo null</returns>
        </member>
        <member name="M:Project858.Utility.IsEmpty(System.Guid)">
            <summary>
            Overi ci je guid empty
            </summary>
            <param name="value">Guid ktory chceme overit</param>
            <returns>True = guid je empty, inak false</returns>
        </member>
        <member name="M:Project858.Utility.IsAlpha(System.String,System.Int32)">
            <summary>
            Overi ci je hodnota typu alpha
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="length">Dlzka stringu ktory chceme overit</param>
            <returns>True hodnota je alpha, inak false</returns>
        </member>
        <member name="M:Project858.Utility.IsNumeric(System.String,System.Int32)">
            <summary>
            Overi ci je hodnota typu anumeric
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="length">Dlzka stringu ktory chceme overit</param>
            <returns>True hodnota je numeric, inak false</returns>
        </member>
        <member name="M:Project858.Utility.IsAlphaNumeric(System.String,System.Int32)">
            <summary>
            Overi ci je hodnota typu alphanumeric
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="length">Dlzka stringu ktory chceme overit</param>
            <returns>True hodnota je alphanumeric, inak false</returns>
        </member>
        <member name="M:Project858.Utility.EncryptoSHA1(System.String)">
            <summary>
            Zacriptuje string do SHA1
            </summary>
            <param name="value">Hodnota ktoru chceme zacryptovat</param>
            <returns>Zacryptovany string</returns>
        </member>
        <member name="M:Project858.Utility.EncryptoSHA1(System.String,System.Text.Encoding)">
            <summary>
            Zacriptuje string do SHA1
            </summary>
            <param name="value">Hodnota ktoru chceme zacryptovat</param>
            <param name="encoding">Encoding v akom chceme kodovat</param>
            <returns>Zacryptovany string</returns>
        </member>
        <member name="M:Project858.Utility.ParseGuidWithoutDash(System.String)">
            <summary>
            Vyparsuje guid z textu ktory neobsahuje pomlcky
            </summary>
            <param name="guid">String ktory obsahuje guid bez pomlciek</param>
            <returns>Guid alebo null</returns>
        </member>
        <member name="M:Project858.Utility.ParseGuid(System.String)">
            <summary>
            Vyparsuje jedinecny identifikator
            </summary>
            <param name="guid">String-ova hodnota v ktorej sa ma Guid nachadzat</param>
            <returns>Vyparsovany Guid alebo Guid.Empty</returns>
        </member>
        <member name="M:Project858.Utility.ValidateGuid(System.String)">
            <summary>
            Overi spravnost stringu ako guid
            </summary>
            <param name="guid">Guid hodnota v stringu</param>
            <returns>True = hodnota je guid, inak false</returns>
        </member>
        <member name="M:Project858.Utility.IsNumbericType(System.Object)">
            <summary>
            Overi ci je objekt ciselneho typu
            </summary>
            <param name="value">Objekt ktory chceme overit</param>
            <returns>True = objekt je ciselneho typu, inak false</returns>
        </member>
        <member name="M:Project858.Utility.StringTrim(System.String)">
            <summary>
            Odstrani zo stringu biele znaky
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Ak string neobsahuje ine znaky ako biele, pripadne je null
            </exception>
            <param name="str">String ktory chceme upravit</param>
            <returns>Upraveny string</returns>
        </member>
        <member name="M:Project858.Utility.ValidatePhoneNumber(System.String)">
            <summary>
            Overi spravnost telefonneho cisla. Minimalna dlzka cislic je 8
            </summary>
            <param name="phone">Cislo ktore chceme overit</param>
            <returns>True = cislo je spravne</returns>
        </member>
        <member name="M:Project858.Utility.GetRegexPattern(System.String,System.Int32)">
            <summary>
            Vrati Regex string s upravou na pozadovanu dlzku pri kontrole
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Argument mimo rozsah. Min value is 1
            </exception>
            <param name="regexConstant">Konstanta z Utility.REGEX ktoru chceme modifikovat</param>
            <param name="length">Pozadovana dlzka pri kontrole</param>
            <returns>Regex string</returns>
        </member>
        <member name="M:Project858.Utility.ValidateTime(System.String)">
            <summary>
            Overi meno serioveho portu
            </summary>
            <param name="time">Cas ktory chceme overit</param>
            <returns>True = cas je ok, inak false</returns>
        </member>
        <member name="M:Project858.Utility.ValidateUrl(System.String)">
            <summary>
            method for validating a url with regular expressions
            </summary>
            <param name="url">url we're validating</param>
            <returns>true if valid, otherwise false</returns>
        </member>
        <member name="M:Project858.Utility.ValidatePortName(System.String)">
            <summary>
            Overi meno serioveho portu
            </summary>
            <param name="portName">Meno portu ktore chceme voerit</param>
            <returns>True = meno portu je spravne, inak false</returns>
        </member>
        <member name="M:Project858.Utility.GetDateTimeFromVersion(System.Version)">
            <summary>
            Vrati cas vytvorenia Buildu z verzie ktora bola vytvorena sposobom [X.X.*]
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Ak nebol vstupny argument inicializovany
            </exception>
            <param name="version">Verzia assembly</param>
            <returns>Datum a cas vytvorenia buildu</returns>
        </member>
        <member name="M:Project858.Utility.ValidateMailAddress(System.String)">
            <summary>
            Overi spravnost zadanej emailovej adresy
            </summary>
            <param name="address">Adresa ktoru chceme overit</param>
            <returns>True = adresa je spravna</returns>
        </member>
        <member name="M:Project858.Utility.ValidateIpAddress(System.String)">
            <summary>
            method to validate an IP address
            using regular expressions. The pattern
            being used will validate an ip address
            with the range of 1.0.0.0 to 255.255.255.255
            </summary>
            <param name="address">Address to validate</param>
            <returns></returns>
        </member>
        <member name="M:Project858.Utility.TryStringEncrypt(System.String,System.String,System.String@)">
            <summary>
            Zacryptuje vstupny string na zaklade vstupneho hesla
            </summary>
            
            <exception cref="T:System.ArgumentNullException">
            Prazdny vstupny argument
            </exception>
            
            <param name="str">String ktory chceme Crytpovat</param>
            <param name="password">Cryptovacie heslo</param>
            <param name="data">Zacryptovane data</param>
            <returns>True = kryptovanie bolo uspesne</returns>
        </member>
        <member name="M:Project858.Utility.StringEncrypt(System.String,System.String)">
            <summary>
            Zacryptuje vstupny string na zaklade vstupneho hesla
            </summary>
            
            <exception cref="T:System.Exception">
            Chyba decryptovania
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Prazdny vstupny argument
            </exception>
            
            <param name="str">String ktory chceme krytpovat</param>
            <param name="password">Cryptovacie heslo</param>
            <returns>Zacryptovany string</returns>
        </member>
        <member name="M:Project858.Utility.TryStringDecrypt(System.String,System.String,System.String@)">
            <summary>
            Odkryptuje string na zaklade vstupneho hesla
            </summary>
            <param name="str">String ktory chcem odkryptovat</param>
            <param name="password">Dekryptovacie heslo</param>
            <param name="data">Dekryptovane data</param>
            <returns>True = dekryptovanie bolo uspesne</returns>
        </member>
        <member name="M:Project858.Utility.StringDecrypt(System.String,System.String)">
            <summary>
            Odcryptuje string na zaklade vstupneho hesla
            </summary>
            <param name="str">String ktory chcem odcryptovat</param>
            <param name="password">Decryptovacie heslo</param>
            <returns>Odcryptovane data</returns>
        </member>
        <member name="M:Project858.Utility.ConvertDateTimeToUnixTime(System.DateTime)">
            <summary>
            Na zaklade vstupneho DateTime vrati UnixTime
            </summary>
            <param name="date">Vstupny datum z ktoreho ratame unixTime</param>
            <returns>UnixTime ohraniceny na processingTimeout</returns>
        </member>
        <member name="M:Project858.Utility.ConvertUnixTimeToDateTime(System.Int32)">
            <summary>
            Prepocita UnixTime na DateTime foramt
            </summary>
            <param name="Seconds">UnixTime</param>
            <returns>DateTime</returns>
        </member>
        <member name="M:Project858.Utility.ConvertDataTableToCsvFile(System.Data.DataTable)">
            <summary>
            Prekonvertuje tabulku do stringu predstavujuceho CSV format Excelu
            </summary>
            <param name="table">Tabulka ktoru chceme prekonvertovat</param>
            <returns>String predstavujuci obsah CSV suboru</returns>
        </member>
        <member name="T:Project858.Configuration.MailClientConfiguration">
            <summary>
            Konfiguracia Mail klienta zabezpecujuceho odosielanie emailov
            </summary>
        </member>
        <member name="M:Project858.Configuration.MailClientConfiguration.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.senderName">
            <summary>
            Meno odosielatela sprav
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.smtpSsl">
            <summary>
            Definuje ci je zapnute sifrovanie pripojenie k serveru
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.enable">
            <summary>
            Definuje ci je odosielanie mailov aktivne alebo nie
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.smtpServer">
            <summary>
            Meno smtp servera na odosielanie emailov
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.smtpPort">
            <summary>
            Smtp smtpPort na odosielanie emailov
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.smtpLogin">
            <summary>
            Login k smtp serveru
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.smtpPassword">
            <summary>
            Heslo k smtp serveru
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.sender">
            <summary>
            Emailova adresa odosielatela emailu
            </summary>
        </member>
        <member name="F:Project858.Configuration.MailClientConfiguration.recipients">
            <summary>
            Kolekcia emailovych adries prijemcov emailov systemu
            </summary>
        </member>
        <member name="M:Project858.Configuration.MailClientConfiguration.Validate(System.String)">
            <summary>
            Overi spravnost poloziek z konfiguracie
            </summary>
            <exception cref="T:System.ArgumentException">
            Chybny argument
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Cryptovacie heslo nie je zadane
            </exception>
            <param name="cryptoPassword">Cryptovacie heslo na overenie konfiguracie</param>
            <returns>True = konfiguracia je spravna</returns>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.Enable">
            <summary>
            (Get / Set) Definuje ci je odosielani mailov aktivne alebo nie
            </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.SmtpServer">
            <summary>
            (Get / Set) Meno smtp servera na odosielanie emailov
            </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.SmtpPort">
            <summary>
            (Get / Set) Smtp smtpPort na odosielanie emailov
            </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.SmtpSsl">
            <summary>
            (Get / Set) Definuje ci je zapnute sifrovanie pripojenie k serveru
            </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.SmtpLogin">
             <summary>
            (Get / Set) Login k smtp serveru
             </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.SmtpPassword">
            <summary>
            (Get / Set) Heslo k smtp serveru
            </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.Sender">
            <summary>
            (Get / Set) Adresa odosielatela emailu
            </summary>
            <exception cref="T:System.ArgumentException">
            Chyba pri nacitavani serializacii, zly argument
            </exception>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.SenderName">
            <summary>
            Meno odosielatela sprav
            </summary>
        </member>
        <member name="P:Project858.Configuration.MailClientConfiguration.Recipients">
            <summary>
            (Get / Set) Ip smtpPort ktory klient registruje
            </summary>
        </member>
        <member name="T:Project858.Configuration.SqlClientConfiguration">
            <summary>
            Konfiguracia SQL klienta zabezpecujuceho pristup k databaze
            </summary>
        </member>
        <member name="M:Project858.Configuration.SqlClientConfiguration.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Configuration.SqlClientConfiguration.enable">
            <summary>
            Definuje ci je klient zabezpecujuci pristup k SQL potrebny a aktivny
            </summary>
        </member>
        <member name="F:Project858.Configuration.SqlClientConfiguration.sqlDatabase">
            <summary>
            Meno databazy ku ktorej sa pripajame
            </summary>
        </member>
        <member name="F:Project858.Configuration.SqlClientConfiguration.sqlLogin">
            <summary>
            Login k smtp serveru
            </summary>
        </member>
        <member name="F:Project858.Configuration.SqlClientConfiguration.sqlPassword">
            <summary>
            Heslo k smtp serveru
            </summary>
        </member>
        <member name="F:Project858.Configuration.SqlClientConfiguration.sqlServer">
            <summary>
            Meno servera ku ktoremu sa pripajame
            </summary>
        </member>
        <member name="M:Project858.Configuration.SqlClientConfiguration.Validate(System.String)">
            <summary>
            Overi spravnost poloziek z konfiguracie
            </summary>
            <exception cref="T:System.ArgumentException">
            Chybny argument
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Cryptovacie heslo nie je zadane
            </exception>
            <param name="cryptoPassword">Cryptovacie heslo na overenie konfiguracie</param>
            <returns>True = konfiguracia je spravna</returns>
        </member>
        <member name="P:Project858.Configuration.SqlClientConfiguration.Enable">
            <summary>
            (Get / Set) Definuje ci je klient zabezpecujuci pristup k SQL potrebny a aktivny
            </summary>
        </member>
        <member name="P:Project858.Configuration.SqlClientConfiguration.SqlServer">
            <summary>
            (Get / Set) Meno servera ku ktoremu sa pripajame
            </summary>
        </member>
        <member name="P:Project858.Configuration.SqlClientConfiguration.SqlDatabase">
            <summary>
            (Get / Set) Databaza nad ktorou pracujeme
            </summary>
        </member>
        <member name="P:Project858.Configuration.SqlClientConfiguration.SqlLogin">
            <summary>
            (Get / Set) Login k SQL serveru
            </summary>
        </member>
        <member name="P:Project858.Configuration.SqlClientConfiguration.SqlPassword">
            <summary>
            (Get / Set) Heslo k SQL serveru
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SqlClient">
            <summary>
            Klient zabezpecujuci vykonavanie prikazov do SQL databazy 
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.#ctor(System.Data.SqlClient.SqlConnectionStringBuilder)">
            <summary>
            Initialize this class
            </summary>
            <param name="builder">Strng builder na vytvorenie SQL connection stringu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentNullException">
            Vstupny argument nie je inicializovany
            </exception>
            <param name="sqlServer">Meno SQL servera na pristup k datam</param>
            <param name="sqlDatabase">Databaza do ktorej pristupujeme</param>
            <param name="sqlLogin">Login k SQL serveru</param>
            <param name="sqlPassword">Heslo k SQL serveru</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClient.m_lockObj">
            <summary>
            Pomocny synchronizacny objekt na pristup k pripojeniu
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClient.m_reflectionPropertyCollection">
            <summary>
            Buffer na ukladanie reglekcii objektov
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ExecuteNonQuery(System.String)">
            <summary>
            Vykona pozadovany query prikaz
            </summary>
            <param name="query">Query prikaz</param>
            <returns>Pocet ovplyvnenych riadkov</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.DeleteObject(System.Object)">
            <summary>
            Vykona vymazanie objektu
            </summary>
            <param name="item">Objekt ktory chceme vymazat</param>
            <returns>True = objekt bol vymazany, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.Select``1(System.String,System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="whereClause">Where podmienka</param>
            <param name="orderClause">Order klauzula</param>
            <param name="limit">Urcuje maximalne mnozstvo poloziek ktore chceme nacitat</param>
            <param name="page">Stranka dat</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.SelectCount``1(System.String)">
            <summary>
            Nacita pocet dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="whereClause">Where podmienka</param>
            <returns>Pocet dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.SelectDynamicFromQuery(System.String)">
            <summary>
            Vykona select s nacitanim dat do dynamic objektu
            </summary>
            <param name="query">Query na vykonanie selectu</param>
            <returns>Kolekcia dynamic objektov</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.SelectFromQuery``1(System.String)">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="query">Query ktorym chceme nacitat data</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.SelectFirstObject``1(System.String,System.String)">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="whereClause">Where podmienka</param>
            <param name="orderClause">Order klauzula</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.SelectFirstObjectFromQuery``1(System.String)">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="query">Query ktorym chceme nacitat data</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.TryInsertObject(System.Object)">
            <summary>
            Vlozi pozadovany objekt do SQL
            </summary>
            <param name="item">objekt ktorych chceme vlozit</param>
            <returns>True = objekt bol uspesne vlozeny</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InsertObject(System.Object)">
            <summary>
            Vlozi pozadovany objekt do SQL
            </summary>
            <param name="item">objekt ktorych chceme vlozit</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InsertCollection``1(System.Collections.Generic.List{``0})">
            <summary>
            Insertne kolekciu dat do DB
            </summary>
            <typeparam name="T">Typ objektu ktory chceme insertnut</typeparam>
            <param name="collection">Kolekcia dat</param>
            <returns>Pocet riadkov ovplyvnenych insertom</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.TryUpdateObject(System.Object,System.String)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <typeparam name="T">Typ objektu ktory chceme aktualizovat</typeparam>
            <param name="item">objekt ktorych chceme aktualizovat</param>
            <param name="whereClause">Podmienka na aktualizaciu objektu</param>
            <returns>True = objekt bol uspesne aktualizovany</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.UpdateObject(System.Object,System.String)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <typeparam name="T">Typ objektu ktory chceme aktualizovat</typeparam>
            <param name="item">objekt ktorych chceme aktualizovat</param>
            <param name="whereClause">Podmienka na aktualizaciu objektu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.UpdateAndReloadObject(System.Object)">
            <summary>
            Aktualizuje a nacita pozadovany objekt v / z SQL
            </summary>
            <param name="item">Objekt ktory chceme aktualizovat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.GetDynamic(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Nacita dynamic z sql readera
            </summary>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <returns>Dynamic ktory nacitame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.GetObject``1(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Nacita objekt z sql readera
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <returns>Objekt ktory necitavame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReadDynamicCollection(System.Data.SqlClient.SqlCommand)">
            <summary>
            Nacita kolekciu dynamic objektov
            </summary>
            <param name="command">SqlCommand</param>
            <returns>Kolekcia objektov alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReadObjectCollection``1(System.Data.SqlClient.SqlCommand)">
            <summary>
            Nacita objekty z pozadovaneho commandu
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="command">SqlCommand</param>
            <returns>Kolekcia objektov alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReadFirstObject``1(System.Data.SqlClient.SqlCommand)">
            <summary>
            Nacita prvy objekt alebo vrati null
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="command">SqlCommand</param>
            <returns>Object alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReadSqlObjectCollection(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona aktualizaciu objektu
            </summary>
            <param name="command">Command na zaklade ktoreho chceme ziskat dat</param>
            <returns>Aktualizovana kolekcia objektov</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReadSqlObject(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona aktualizaciu objektu
            </summary>
            <param name="command">Command na zaklade ktoreho chceme ziskat dat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.GetCount``1(System.String)">
            <summary>
            Vrati pocet data
            </summary>
            <param name="whereClause">Podmienka pre ziskanie poctu</param>
            <returns>Pocet dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ToString">
            <summary>
            Vrati meno, popis triedy
            </summary>
            <returns>Meno</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalStart">
            <summary>
            Interne spustenie klienta
            </summary>
            <returns>True = spustenie klienta bolo uspesne</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalPause">
            <summary>
            Pozastavi funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalStop">
            <summary>
            Ukonci funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalDispose">
            <summary>
            Vykona pred ukoncenim klienta
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalGetCount``1(System.String)">
            <summary>
            Vrati pocet data
            </summary>
            <param name="whereClause">Podmienka pre ziskanie poctu</param>
            <returns>Pocet dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalExecuteNonQuery(System.String)">
            <summary>
            Vykona pozadovany query prikaz
            </summary>
            <param name="query">Query prikaz</param>
            <returns>Pocet ovplyvnenych riadkov</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalUpdateAndReloadObject(System.Object)">
            <summary>
            Aktualizuje a nacita pozadovany objekt v / z SQL
            </summary>
            <param name="item">Objekt ktory chceme aktualizovat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalDeleteObject(System.Object)">
            <summary>
            Vykona vymazanie objektu
            </summary>
            <param name="item">Objekt ktory chceme vymazat</param>
            <returns>True = objekt bol vymazany, inak false</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalReadSqlObjectCollection(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona aktualizaciu objektu
            </summary>
            <param name="command">Command na zaklade ktoreho chceme ziskat dat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalReadSqlObject(System.Data.SqlClient.SqlCommand)">
            <summary>
            Vykona aktualizaciu objektu
            </summary>
            <param name="command">Command na zaklade ktoreho chceme ziskat dat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalReloadObject(System.Object)">
            <summary>
            Vykona aktualizaciu objektu
            </summary>
            <param name="item">Objekt ktory chceme aktualizovat</param>
            <returns>Aktualizovany objekt</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalGetSqlObject(System.Data.SqlClient.SqlDataReader)">
            <summary>
            Nacita objekt z sql readera
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <param name="item">Objekt ktoryc chceme aktualizovat</param>
            <returns>Objekt ktory necitavame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalGetDynamic(System.Data.SqlClient.SqlDataReader,System.Object)">
            <summary>
            Nacita dynamic z sql readera
            </summary>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <param name="item">Dynamc ktory chceme aktualizovat</param>
            <returns>Dynamic ktory nacitame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalGetObject``1(System.Data.SqlClient.SqlDataReader,``0)">
            <summary>
            Nacita objekt z sql readera
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="reader">Reader pomocou ktoreho citame data</param>
            <param name="item">Objekt ktoryc chceme aktualizovat</param>
            <returns>Objekt ktory necitavame</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalUpdateValue(System.Object)">
            <summary>
            Aktualizuje hodnotu skor ako dojde k jej spracovaniu
            </summary>
            <param name="value">Hodnota ktoru chceme aktualizovat</param>
            <returns>Aktualizovana hodnota alebo povodna hodnota</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalSelectFirstObject``1(System.String,System.String)">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="whereClause">Where podmienka</param>
            <param name="orderClause">Order klauzula</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalSelectFirstObjectFromQuery``1(System.String)">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="query">Query ktorym chceme nacitat data</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalSelectDynamicFromQuery(System.String)">
            <summary>
            Vykona select s nacitanim dat do dynamic objektu
            </summary>
            <param name="query">Query na vykonanie selectu</param>
            <returns>Kolekcia dynamic objektov</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalSelectFromQuery``1(System.String)">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="query">Query ktorym chceme nacitat data</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalSelectCount``1(System.String)">
            <summary>
            Nacita pocet dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="whereClause">Where podmienka</param>
            <returns>Pocet dat alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalSelect``1(System.String,System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Vykona select pozadovanych dat
            </summary>
            <typeparam name="T">Typ objektu ktory chceme nacitat</typeparam>
            <param name="whereClause">Where podmienka</param>
            <param name="orderClause">Order klauzula</param>
            <returns>Kolekcia nacitanych dat</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalCreateCommandText(Project858.Data.SqlClient.SqlClient.ReflectionObjectItem,System.String,System.String,System.Nullable{System.UInt32},System.Nullable{System.UInt32})">
            <summary>
            Vytvori command pre select podla parametrov
            </summary>
            <param name="properties">Property reflector na objekt</param>
            <param name="whereClause">Podmiebja</param>
            <param name="orderClause">Zoradenie</param>
            <param name="limit">Limit</param>
            <param name="page">Stranka</param>
            <returns>Command text</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalInsertObject(System.Object)">
            <summary>
            Vlozi pozadovany objekt do SQL
            </summary>
            <param name="item">objekt ktorych chceme vlozit</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalInsertCollection``1(System.Collections.Generic.List{``0})">
            <summary>
            Insertne kolekciu dat do DB
            </summary>
            <typeparam name="T">Typ objektu ktory chceme insertnut</typeparam>
            <param name="collection">Kolekcia dat</param>
            <returns>Pocet riadkov ovplyvnenych insertom</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalUpdateObject(System.Object,System.String)">
            <summary>
            Aktualizuje pozadovany objekt v SQL
            </summary>
            <param name="item">objekt ktorych chceme aktualizovat</param>
            <param name="whereClause">Podmienka na aktualizaciu objektu</param>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalPrepareValue(System.Object,Project858.Data.SqlClient.ColumnAttribute)">
            <summary>
            Overi hodnotu a vrati jej spravny format
            </summary>
            <param name="value">Hodnota ktoru chceme overit</param>
            <param name="attribute">Atributy stlpca v tabulke</param>
            <returns>Hodnota</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalTruncateValue(System.Object,Project858.Data.SqlClient.ColumnAttribute)">
            <summary>
            Vykona skratenie hodnoty ak je dostupna a je to povolene
            </summary>
            <param name="value">Hodnota ktoru chceme skratit</param>
            <param name="attribute">Atributy stlpca v tabulke</param>
            <returns>Skratena hodnota alebo povodna</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalFindPropertiesWithPrimaryKeyState(Project858.Data.SqlClient.SqlClient.ReflectionObjectItem)">
            <summary>
            Vyhlada property ktore su nastavene ako primarny kluc objektu
            </summary>
            <param name="propertyInfo">Kolekcia v ktorej chceme vyhladat</param>
            <returns>Property ktore obsahuju nastaveny stav primarneho kluca</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.InternalFindPropertiesWithColumnAttribute(System.Reflection.PropertyInfo[])">
            <summary>
            Vyhlada property ktore obsahuju pozadovany typ atributu
            </summary>
            <param name="propertyInfo">Kolekcia v ktorej chceme vyhladat</param>
            <returns>Pole najdenych property ktore obsahuju pozadovany atribut</returns>
        </member>
        <member name="T:Project858.Data.SqlClient.SqlClient.ReflectionPropertyItem">
            <summary>
            Polozka zahrnucjuca reglekciu objektu a jeho property
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReflectionPropertyItem.#ctor(System.Reflection.PropertyInfo)">
            <summary>
            Initialize this class
            </summary>
            <param name="property">Property ktoru objekt reprezentuje</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClient.ReflectionPropertyItem.m_columnAttributes">
            <summary>
            Atributy prisluchajucej property
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClient.ReflectionPropertyItem.m_property">
            <summary>
            Property
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClient.ReflectionPropertyItem.ColumnAttribute">
            <summary>
            Vrati atributy prisluchajucej property
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClient.ReflectionPropertyItem.Property">
            <summary>
            Property ktoru objekt reprezentuje
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem">
            <summary>
            Kolekcia property prisluchajuca konkretnemu objektu
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.#ctor(System.Type)">
            <summary>
            Initialize this class
            </summary>
            <param name="type">Typ objektu ktoreho property objekt reprezentuje</param>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.m_viewAttribute">
            <summary>
            Atribut definujuci informacie o view prisluchajucemu k objektu
            </summary>
        </member>
        <member name="F:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.m_tableAttribute">
            <summary>
            Atribut definujuci informacie o tabulke prisluchajucej k objekte
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.FindProperty(System.String)">
            <summary>
            Vrati pozadovanu property a jej informacie na zaklade mena
            </summary>
            <param name="name">Meno property ktoru ziadame</param>
            <returns>ReflectionPropertyItem alebo null</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.InternalInitializeProperty(System.Type)">
            <summary>
            Inicializuje property objektu
            </summary>
            <param name="type">Typ objektu ktoreho property objekt reprezentuje</param>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.Type">
            <summary>
            Typ objektu
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.TableOrViewName">
            <summary>
            Vrati meno tabulky alebo view ktore je mozne pouzit pre SELECT command
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.ViewAttribute">
            <summary>
            Atribut definujuci informacie o view prisluchajucemu k objektu
            </summary>
        </member>
        <member name="P:Project858.Data.SqlClient.SqlClient.ReflectionObjectItem.TableAttribute">
            <summary>
            Atribut definujuci informacie o tabulke prisluchajucej k objekte
            </summary>
        </member>
        <member name="T:Project858.Data.SqlClient.SqlClient.ReflectionObjectItemCollection">
            <summary>
            Kolekcia objektov definovanych typom obsahujucich informacie o properties
            </summary>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReflectionObjectItemCollection.FindPropertyCollection(System.Type)">
            <summary>
            Vrati alebo vytvori a vrati kolekciu property pre pozadovany typ objektu
            </summary>
            <param name="type">Typ objektu pre ktory chceme informacie vratit</param>
            <returns>ReflectionPropertyItemCollection</returns>
        </member>
        <member name="M:Project858.Data.SqlClient.SqlClient.ReflectionObjectItemCollection.InternalCreateType(System.Type)">
            <summary>
            Prida objekt pre pozadovany type
            </summary>
            <param name="type">Type objektu pre ktory chceme property nacitat</param>
        </member>
        <member name="T:Project858.Diagnostics.TraceLogger">
            <summary>
            Logger na zalogovanie zavaznych chyb mimo rozsahu
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceLogger.SUB_FOLDER_NAME">
            <summary>
            Meno subfoldra na ulozenei trace
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceLogger.m_directory">
            <summary>
            Folder kde sa data ukladaju
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceLogger.m_lockObj">
            <summary>
            Pomocny synchronizacny objekt na pristup k databaze
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Error(System.Exception)">
            <summary>
            Zaloguje pozadovanu spravu ako ERROR spravu
            </summary>
            <param name="exception">Chyba ktoru chceme zalogovat</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Error(System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu ako ERROR spravu
            </summary>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Aegument pre spravu do String.Format()</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Error(System.String,System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu ako ERROR spravu
            </summary>
            <param name="modulName">Meno modulu ktory spravu loguje</param>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Aegument pre spravu do String.Format()</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Error(System.DateTime,System.String,System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu ako ERROR spravu
            </summary>
            <param name="date">Datum a cas vzniku spravy</param>
            <param name="modulName">Meno modulu ktory spravu loguje</param>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Aegument pre spravu do String.Format()</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Info(System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu ako INFO spravu
            </summary>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Aegument pre spravu do String.Format()</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Info(System.String,System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu ako INFO spravu
            </summary>
            <param name="modulName">Meno modulu ktory spravu loguje</param>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Aegument pre spravu do String.Format()</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Info(System.DateTime,System.String,System.String,System.Object[])">
            <summary>
            Zaloguje pozadovanu spravu ako INFO spravu
            </summary>
            <param name="date">Datum a cas vzniku spravy</param>
            <param name="modulName">Meno modulu ktory spravu loguje</param>
            <param name="message">Sprava ktoru chceme zalogovat</param>
            <param name="args">Aegument pre spravu do String.Format()</param>
            <returns>True = logovanie bolo uspesne inak false</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.Trace(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zaloguje spravu do SQLite databazy
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Argument nie je inicializovany
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak klient nie je v stave Start
            </exception>
            <param name="date">Cas vzniku logovacej spravy</param>
            <param name="traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Text logovacej spravy</param>
            <returns>True = logovanie spravy bolo uspesne</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.TraceAsync(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zaloguje spravu do SQLite databazy asynchronnym volanim
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Argument nie je inicializovany
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak klient nie je v stave Start
            </exception>
            <param name="date">Cas vzniku logovacej spravy</param>
            <param name="traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Text logovacej spravy</param>
        </member>
        <member name="M:Project858.Diagnostics.TraceLogger.TraceToFile(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zapise pozadovane data do SQLite databazy
            </summary>
            <param name="date">Cas log zaznamu</param>
            <param name="traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Sprava s informaciou</param>
            <returns>True = zapis logu bol uspesny</returns>
        </member>
        <member name="P:Project858.Diagnostics.TraceLogger.DirectoryPath">
            <summary>
            Folder kde sa data ukladaju
            </summary>
        </member>
        <member name="T:Project858.Diagnostics.TraceLogger.TraceAsyncDelegate">
            <summary>
            Pomocny delegat na asynchronne volanie metody
            </summary>
            <param name="time">Cas vzniku logovacej spravy</param>
            <param name="_traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Text logovacej spravy</param>
            <returns>True = logovanie spravy bolo uspesne</returns>
        </member>
        <member name="T:Project858.Diagnostics.TraceSqlLiteClient">
            <summary>
            Klient zabezpecujuci logovanie informaii do SQLite databazy
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient.TIMER_INTERVAL">
            <summary>
            Interval na periodicku pracu timra vykonavajuceho ukladanie dat
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._items">
            <summary>
            Kolekcia trace itemov ktore cakaju na ulozenie
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._timer">
            <summary>
            Pomocny timer na periodicke ukladanie log zaznamod do databazy
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._consoleTrace">
            <summary>
            Definuje ci sa aktivne loguje aj do konzoly
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._deleteOlderThan">
            <summary>
            Definuje ci je poziadavka na odstranovanie starsich zaznamov ako je 
            stanoveny interval DeleteOlderThanTimeout
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._deleteOlderThanTimeout">
            <summary>
            Timeout po akom su mazane starsie data
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._databasePassword">
            <summary>
            Heslo na pristup k databaze
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._lockObj">
            <summary>
            Pomocny synchronizacny objekt na pristup k databaze
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient._connection">
            <summary>
            SQLite konektor k suboru
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.Trace(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zaloguje spravu do SQLite databazy
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Argument nie je inicializovany
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak klient nie je v stave Start
            </exception>
            <param name="time">Cas vzniku logovacej spravy</param>
            <param name="_traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Text logovacej spravy</param>
            <returns>
            True = urcuje len uspesne ulozenie zaznamu do kolekcie ktora caka na ulozenie.
            True este neznamena ze zaznam bol aj naozaj ulozeny.
            </returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.TraceAsync(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Zaloguje spravu do SQLite databazy asynchronnym volanim
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Argument nie je inicializovany
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Ak klient nie je v stave Start
            </exception>
            <param name="time">Cas vzniku logovacej spravy</param>
            <param name="_traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Text logovacej spravy</param>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.ToString">
            <summary>
            Vrati meno / popis klienta
            </summary>
            <returns>Popis klienta</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.AddTraceItem(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Prida dalsi zaznam do kolekcia ktora caka na ulozenie do databazy
            </summary>
            <param name="time">Cas zaznamu</param>
            <param name="_traceType">Typ zaznamu</param>
            <param name="modulName">Meno modulu ktory zaznam vytvoril</param>
            <param name="message">Sprava zaznamu</param>
            <returns>True = zaznam bol uspesne pridany do kolekcie na ulozenie</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.TimerTick(System.Object)">
            <summary>
            Periodicka obsluha pre Timer
            </summary>
            <param name="obj">Argumenty state</param>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.ProcesingTick">
            <summary>
            Vykona periodicke operacie potrebne na ulozenie dat
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.SaveTraceData">
            <summary>
            Vykona ulozenie prijatych dat
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.WriteTraceItems(Project858.Diagnostics.TraceSqlLiteClient.TraceItem[])">
            <summary>
            Zapise pozadovane data do SQLite databazy
            </summary>
            <param name="items">Pole itemov ktore chceme ulozit do databazy</param>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.Reconnect">
            <summary>
            Vykona obnovu pripojenia k SQLite databaze
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.InternalStart">
            <summary>
            Interne spustenie klienta
            </summary>
            <returns>True = spustenie klienta bolo uspesne</returns>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.InternalPause">
            <summary>
            Pozastavi funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.InternalStop">
            <summary>
            Ukonci funkciu klienta
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.InternalDispose">
            <summary>
            Vykona pred ukoncenim klienta
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.ConsoleTrace">
            <summary>
            (Get / Set) Definuje ci sa aktivne loguje aj do konzoly
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.DeleteOlderThan">
            <summary>
            (Get / Set) Definuje ci je poziadavka na odstranovanie starsich zaznamov ako je 
            stanoveny interval DeleteOlderThanTimeout
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.DeleteOlderThanTimeout">
            <summary>
            (Get / Set) Timeout po akom su mazane starsie data. 
            Min: 000:01:00:00, Max: 365:00:00:00, Default: 007:00:00:00
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Nepovoleny rozsah timeoutu
            </exception>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.DatabasePassword">
            <summary>
            (Get / Set) Heslo na pristup k databaze
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Ak je object v stave _disposed
            </exception>
        </member>
        <member name="T:Project858.Diagnostics.TraceSqlLiteClient.TraceItem">
            <summary>
            Struktura predstavujuca jeden trace zaznam
            </summary>
        </member>
        <member name="M:Project858.Diagnostics.TraceSqlLiteClient.TraceItem.#ctor(System.DateTime,Project858.Diagnostics.TraceTypes,System.String,System.String)">
            <summary>
            Initialize this class
            </summary>
            <param name="time">Cas zaznamu</param>
            <param name="_traceType">Typ zaznamu</param>
            <param name="modulName">Meno modulu ktory zaznam vytvoril</param>
            <param name="message">Sprava zaznamu</param>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient.TraceItem._time">
            <summary>
            Cas zaznau
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient.TraceItem._traceType">
            <summary>
            Typ zaznamu
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient.TraceItem._modulName">
            <summary>
            Meno modulu ktory zaznam vytvoril
            </summary>
        </member>
        <member name="F:Project858.Diagnostics.TraceSqlLiteClient.TraceItem._message">
            <summary>
            Sprava zaznamu
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.TraceItem.Time">
            <summary>
            (Get) Cas zaznau
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.TraceItem.TraceType">
            <summary>
            (Get) Typ zaznamu
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.TraceItem.ModulName">
            <summary>
            (Get) Meno modulu ktory zaznam vytvoril
            </summary>
        </member>
        <member name="P:Project858.Diagnostics.TraceSqlLiteClient.TraceItem.Message">
            <summary>
            (Get) Sprava zaznamu
            </summary>
        </member>
        <member name="T:Project858.Diagnostics.TraceSqlLiteClient.TraceAsyncDelegate">
            <summary>
            Pomocny delegat na asynchronne volanie metody
            </summary>
            <param name="time">Cas vzniku logovacej spravy</param>
            <param name="_traceType">Typ logovacej spravy</param>
            <param name="modulName">Meno modulu ktory spravy vytvoril</param>
            <param name="message">Text logovacej spravy</param>
            <returns>True = logovanie spravy bolo uspesne</returns>
        </member>
        <member name="T:Project858.Net.Mail.MailClient">
            <summary>
            ClientBase zabezpecujuci odosielanie emailovych sprav
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.#ctor(System.String,System.Int32,System.String,System.String,System.Net.Mail.MailAddress,System.Net.Mail.MailAddressCollection)">
            <summary>
            Initialize this class
            </summary>
            <exception cref="T:System.ArgumentException">
            Chyba vstupnych argumentov
            </exception>
            <exception cref="T:System.ArgumentOutOfRangeException">
            Nepovoleny rozsah portu
            </exception>
            <param name="SmtpServer">SMTP server na odosielanie emailov</param>
            <param name="SmtpPort">Port SMTP servera</param>
            <param name="SmtpLogin">Prihlasovacie meno k SMTP serveru</param>
            <param name="SmtpPassword">Prihlasovacie heslo k SMTP serveru</param>
            <param name="Sender">Odosielatel emailu</param>
            <param name="Recipients">Zoznam prijemcov emailu</param>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.smtpSsl">
            <summary>
            Definuje ci je zapnute sifrovanie pripojenie k serveru
            </summary>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.recipients">
            <summary>
            Zoznam prijemcov emailov
            </summary>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.sender">
            <summary>
            Emailova adresa odosielatela emailu
            </summary>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.smtpServer">
            <summary>
            SMTP server cez ktory sa odosielaju emaily
            </summary>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.smtpPort">
            <summary>
            Port k SMTP serveru
            </summary>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.smtpLogin">
            <summary>
            Prihlasovacie meno k serveru
            </summary>
        </member>
        <member name="F:Project858.Net.Mail.MailClient.smtpPassword">
            <summary>
            Prihlasovacie heslo k serveru
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.SendAsync(System.Net.Mail.MailMessage)">
            <summary>
            Odosle spravu. Ak sa spravu nepodari odoslat a je aktivovane 'AutoRepeat' sprava bude opakovane odosielana
            v pravidelnych intervaloch. Platnost spravy definuje 'ValidityInterval'
            </summary>
            
            <exception cref="T:System.ArgumentException">
            Chyba vstupneho argumentu. Sprava neobsahuje potrebne udaje
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Chyba chybnej inicializacie spravy alebo jej poloziek
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Snaha o odoslanie spravy ak modul nebol spusteny
            </exception>
            
            <param name="message">Sprava ktoru chceme odoslat</param>
            <returns>True = sprava bola uspesne odoslana</returns>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.Send(System.Net.Mail.MailMessage)">
            <summary>
            Odosle spravu. Ak sa spravu nepodari odoslat a je aktivovane 'AutoRepeat' sprava bude opakovane odosielana
            v pravidelnych intervaloch. Platnost spravy definuje 'ValidityInterval'
            </summary>
            
            <exception cref="T:System.ArgumentException">
            Chyba vstupneho argumentu. Sprava neobsahuje potrebne udaje
            </exception>
            <exception cref="T:System.ArgumentNullException">
            Chyba chybnej inicializacie spravy alebo jej poloziek
            </exception>
            <exception cref="T:System.InvalidOperationException">
            Snaha o odoslanie spravy ak modul nebol spusteny
            </exception>
            
            <param name="message">Sprava ktoru chceme odoslat</param>
            <returns>True = sprava bola uspesne odoslana</returns>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.ToString">
            <summary>
            Vrati meno / popis triedy / modulu
            </summary>
            <returns></returns>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.InternalStart">
            <summary>
            Prepis / implementacia metody na vykonanie startu klienta / modulu
            </summary>
            <returns>True = klient bol uspesne iniializovany</returns>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.InternalPause">
            <summary>
            Prepis / implementacia metody na vykonanie pozastavenia klienta / modulu
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.InternalStop">
            <summary>
            Prepis / implementacia metody na vykonanie ukoncenia klienta / modulu
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.InternalDispose">
            <summary>
            Deinicializuje cely objekt
            </summary>
        </member>
        <member name="M:Project858.Net.Mail.MailClient.SendMessage(System.Net.Mail.MailMessage)">
            <summary>
            Odosle spravy na smtp server.
            </summary>
            <param name="message">Spravy ktore chceme odoslat</param>
            <returns>Pole sprav ktore sa nam nepodarilo odoslat</returns>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.SmtpServer">
            <summary>
            (Get) SMTP server cez ktory sa odosielaju emaily
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.SmtpPort">
            <summary>
            (Get) Port k SMTP serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.SmtpLogin">
            <summary>
            (Get) Prihlasovacie meno k SMTP serveru.
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.SmtpPassword">
            <summary>
            (Get) Prihlasovacie heslo k SMTP serveru
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.SmtpSsl">
            <summary>
            (Get / Set) Definuje ci je odosielanie emailov zabezpecene pomocou SSL
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.Recipients">
            <summary>
            (Get) Kolekcia prijemcov emailovej spravy
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="P:Project858.Net.Mail.MailClient.Sender">
            <summary>
            (Get) Emailova adresa odosielatela emailu
            </summary>
            <exception cref="T:System.ObjectDisposedException">
            Nedovoleny pristup. Objekt je v stave _disposed
            </exception>
        </member>
        <member name="T:Project858.Net.Mail.MailClient.SendDelegate">
            <summary>
            Pomocny delegat na asinchronne posielanie sprav
            </summary>
            <param name="message">Sprava na odoslanie</param>
        </member>
        <member name="T:Project858.ServiceProcess.WindowsServiceBase">
            <summary>
            Predpis pre Windows Service s podporou pre sledovanie stavu baterie
            </summary>
        </member>
        <member name="F:Project858.ServiceProcess.WindowsServiceBase.TIMER_INTERVAL">
            <summary>
            Interval pod akym prebieha periodicky kontrola stavu napajania
            </summary>
        </member>
        <member name="F:Project858.ServiceProcess.WindowsServiceBase.powerLineStatus">
            <summary>
            Status napajania. Online znamena ze pocitac aktualne bezi zo sietoveho napajania
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.#ctor">
            <summary>
            Initialize this class
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.OnStart(System.String[])">
            <summary>
            Start service
            </summary>
            <param name="args">vstupne argumenty</param>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.OnPause">
            <summary>
            Pause service
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.OnStop">
            <summary>
            Stop service
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.OnShutdown">
            <summary>
            Shutdown service
            </summary>
        </member>
        <member name="F:Project858.ServiceProcess.WindowsServiceBase.m_clients">
            <summary>
            Kolekcia aktualnych klientov
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalServiceStart(System.String[])">
            <summary>
            Metoda oznamujuca start service
            </summary>
            <param name="args">Argumenty pri starte</param>
            <returns>True = start service bol uspesny</returns>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalServicePause">
            <summary>
            Metoda oznamujuca pozastavenie service
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalServiceStop">
            <summary>
            Metoda oznamujuca ukoncenie service
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalServiceShutdown">
            <summary>
            Metoda oznamujuca ukoncenie service na zakalde ukoncenia systemu
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalClientStop">
            <summary>
            Ukonci vsetky instancie ktore su dostupne
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalClientStart">
            <summary>
            Spusti vsetky instancie ktore su dostupne
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalGetCurrentPath">
            <summary>
            Vrati cestu k aktualnemu priecinku odkial je aplikacia spustena
            </summary>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalGetAllLibrary(System.String)">
            <summary>
            Vrati cesu k vsetkym knizniciam ktore sa nachadzaju na pozadovanej ceste
            </summary>
            <param name="path">Cesta v ktorej chceme najst vsetky kniznice</param>
            <returns>Kolekci kniznic</returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Project858.ServiceProcess.WindowsServiceBase.InternalGetAllAssemblyFromFiles(System.String[])" -->
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalGetAllInstanceType(System.Collections.Generic.List{System.Reflection.Assembly},System.Type)">
            <summary>
            Vrati kolekciu typov ktore su zhodne s pozadovanym typom pluginu
            </summary>
            <param name="assemblies">Kolekcia assemblies ktore su dostupne</param>
            <param name="pluginType">Typ pluginu ktory hladame</param>
            <returns>Kolekcia typov</returns>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalCreateInstance(System.Collections.Generic.List{System.Type})">
            <summary>
            Vytvori instancie pluginov ktore su urcene na spustenie
            </summary>
            <param name="types">Typy pluginov ktore maju byt vytvorene</param>
            <returns>Kolekcia instancii</returns>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalTrace(System.String,System.Object[])">
            <summary>
            Zaloguje spravu do suboru
            </summary>
            <param name="message">Sprava</param>
            <param name="args">String.Format argumenty pre spravu</param>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalTrace(System.Exception)">
            <summary>
            Zaloguje chybu do log suboru
            </summary>
            <param name="exception">Chyba ktoru chceme zalogovat</param>
        </member>
        <member name="M:Project858.ServiceProcess.WindowsServiceBase.InternalCreateInstance">
            <summary>
            Vytvori a vrati vsetky instancie pluginov ktore su dostupne
            </summary>
            <returns>Kolekcia pluginov alebo null</returns>
        </member>
        <member name="T:Project858.Win32.NativeMethods">
            <summary>
            Win32 API metody
            </summary>
        </member>
        <member name="M:Project858.Win32.NativeMethods.ShowWindow(System.IntPtr,Project858.Win32.NativeMethods.APICmdShowTypes)">
            <summary>
            Sets the specified window's show state.
            </summary>
            <param name="hWnd">
            A handle to the window.
            </param>
            <param name="iMsg">
            Controls how the window is to be shown. This parameter is ignored the first time an application 
            calls ShowWindow, if the program that launched the application provides a STARTUPINFO structure. 
            Otherwise, the first time ShowWindow is called, the value should be the value obtained by the 
            WinMain function in its nCmdShow parameter. In subsequent calls, this parameter can be one of 
            the following values.
            </param>
            <returns>
            If the window was previously visible, the return value is nonzero. 
            If the window was previously hidden, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.IsIconic(System.IntPtr)">
            <summary>
            Determines whether the specified window is minimized (iconic).
            </summary>
            <param name="hWnd">A handle to the window to be tested.</param>
            <returns>
            If the window is iconic, the return value is nonzero.
            If the window is not iconic, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.OpenProcessToken(System.IntPtr,Project858.Win32.NativeMethods.APITokenAccessTypes,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process.
            </summary>
            <param name="processHandle">
            A handle to the process whose access token is opened. 
            The process must have the PROCESS_QUERY_INFORMATION access permission.
            </param>
            <param name="desiredAccess">
            Specifies an access mask that specifies the requested types of access to the access token. 
            These requested access types are compared with the discretionary access control list (DACL) 
            of the token to determine which accesses are granted or denied.
            </param>
            <param name="tokenHandle">
            A pointer to a handle that identifies the newly opened access token when the function returns.
            </param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.CloseHandle(System.IntPtr)">
            <summary>
            Closes an open object handle.
            </summary>
            <param name="handle">A valid handle to an open object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.AllocConsole">
            <summary>
            Allocates a new console for the calling process.
            </summary>
            <returns>true if the function succeeds; otherwise, false.</returns>
            <remarks>
            A process can be associated with only one console,
            so the function fails if the calling process already has a console.
            http://msdn.microsoft.com/en-us/library/ms681944(VS.85).aspx
            </remarks>
        </member>
        <member name="M:Project858.Win32.NativeMethods.FreeConsole">
            <summary>
            Detaches the calling process sender its console.
            </summary>
            <returns>true if the function succeeds; otherwise, false.</returns>
            <remarks>
            If the calling process is not already attached recipients a console,
            the error code returned is ERROR_INVALID_PARAMETER (87).
            http://msdn.microsoft.com/en-us/library/ms683150(VS.85).aspx
            </remarks>
        </member>
        <member name="M:Project858.Win32.NativeMethods.AttachConsole(System.Int32)">
            <summary>
            Attaches the calling process recipients the console of the specified process.
            </summary>
            <example>
            <code>
            if (!AttachConsole(ATTACH_PARENT_PROCESS) AND (Marshal.GetLastWin32Error() == ERROR_ACCESS_DENIED)) {}
            </code>
            </example>
            <remarks>
            <!--http://209.85.129.132/search?q=cache:19bMz4lDI0kJ:www.pinvoke.net/default.aspx/kernel32/AttachConsole,.html+Dllinport+AttachConsole&cd=1&hl=sk&ct=clnk&gl=sk&client=opera-->
            </remarks>
            <param name="dwProcessId">[in] Identifier of the process, usually will be ATTACH_PARENT_PROCESS</param>
            <returns>
            If the function succeeds, the return value is nonzero.
            If the function fails, the return value is zero. 
            To get extended error information, call Marshal.GetLastWin32Error.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.SetForegroundWindow(System.IntPtr)">
            <summary>
            Activates the environment application window by calling the SetForegroundWindow Win32 API.
            </summary>
            <remarks>
            This method puts the thread that created the specified window into the foreground and 
            activates the window. Keyboard input is directed recipients the window, and various visual cues 
            are changed for the user.
            </remarks>
            <param name="hWnd">
            Handle recipients the window that should be activated and brought recipients the foreground.
            </param>
            <returns>
            True indicates that the window was brought recipients the foreground. 
            False indicates that the window was not brought recipients the foreground.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.GetSystemMenu(System.IntPtr,System.Boolean)">
            <summary>
            Allows the application to access the Control menu for copying and modification
            </summary>
            <param name="hWnd">
            Window handle
            </param>
            <param name="bRevert">
            Specifies the action to be taken. If bRevert is FALSE, GetSystemMenu returns a handle to a 
            copy of the Control menu currently in use. This copy is initially identical to the Control 
            menu but can be modified. If bRevert is TRUE, GetSystemMenu resets the Control menu back 
            to the default state. The previous, possibly modified, Control menu, if any, is destroyed. 
            The return value is undefined in this case.
            </param>
            <returns>
            Identifies a copy of the Control menu if bRevert is FALSE. If bRevert is TRUE, the return 
            value is undefined. The returned pointer may be temporary and should not be stored for later use.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.EnableMenuItem(System.IntPtr,System.Int32,System.Int32)">
            <summary>
            Enables, disables, or dims a menu item.
            </summary>
            <param name="hMenu">
            Menu handle
            </param>
            <param name="nIDEnableItem">
            Specifies the menu item to be enabled, as determined by nEnable. This parameter can specify 
            pop-up menu items as well as standard menu items.
            </param>
            <param name="nEnable">
            Specifies the action to take. It can be a combination of MF_DISABLED, MF_ENABLED, or MF_GRAYED, 
            with MF_BYCOMMAND or MF_BYPOSITION. These values can be combined by using the bitwise OR 
            operator. These values have the following meanings:
            </param>
            <returns>
            Previous state (MF_DISABLED, MF_ENABLED, or MF_GRAYED) or –1 if not valid.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.UpdateLayeredWindow(System.IntPtr,System.IntPtr,System.Drawing.Point@,System.Drawing.Size@,System.IntPtr,System.Drawing.Point@,System.Int32,Project858.Win32.NativeMethods.BLENDFUNCTION@,System.Int32)">
            <summary>
            Updates the position, size, shape, content, and translucency of a layered window.
            </summary>
            <param name="hwnd">
            A handle to a layered window. A layered window is created by specifying WS_EX_LAYERED when creating the 
            window with the CreateWindowEx function.
            </param>
            <param name="hdcDst">
            A handle to a DC for the screen. This handle is obtained by specifying NULL when calling the function. 
            It is used for palette color matching when the window contents are updated. If hdcDst isNULL, the default 
            palette will be used. If hdcSrc is NULL, hdcDst must be NULL.
            </param>
            <param name="pptDst">
            A pointer to a structure that specifies the new screen position of the layered window. If the current 
            position is not changing, pptDst can be NULL.
            </param>
            <param name="psize">
            A pointer to a structure that specifies the new size of the layered window. If the size of the window 
            is not changing, psize can be NULL. If hdcSrc is NULL, psize must be NULL.
            </param>
            <param name="hdcSrc">
            A handle to a DC for the surface that defines the layered window. This handle can be obtained by calling 
            the CreateCompatibleDC function. If the shape and visual context of the window are not changing, hdcSrc 
            can be NULL.
            </param>
            <param name="pprSrc">
            A pointer to a structure that specifies the location of the layer in the device context. 
            If hdcSrc is NULL, pptSrc should be NULL.
            </param>
            <param name="crKey">
            A structure that specifies the color key to be used when composing the layered window. 
            To generate a COLORREF, use the RGB macro.
            </param>
            <param name="pblend">
            A pointer to a structure that specifies the transparency value to be used when composing the layered window.
            </param>
            <param name="dwFlags">
            This parameter can be one of the following values.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a device context (DC) for the client area of a specified window 
            or for the entire screen. You can use the returned handle in subsequent GDI functions to draw in the DC. 
            The device context is an opaque data structure, whose values are used internally by GDI.
            </summary>
            <param name="hWnd">
            A handle to the window whose DC is to be retrieved. If this value is NULL, 
            GetDC retrieves the DC for the entire screen.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to the DC for the specified window's client area. 
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.CreateCompatibleDC(System.IntPtr)">
            <summary>
            This function creates a memory device context (DC) compatible with the specified device.
            </summary>
            <param name="hDC">
            If this handle is NULL, the function creates a memory device context compatible with the application's 
            current screen.
            </param>
            <returns>
            The handle to a memory device context indicates success. NULL indicates failure. To get extended error 
            information, call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by other applications. 
            The effect of the ReleaseDC function depends on the type of DC. It frees only common and window DCs. 
            It has no effect on class or private DCs.
            </summary>
            <param name="hWnd">
            A handle to the window whose DC is to be released.
            </param>
            <param name="hDC">
            A handle to the DC to be released.
            </param>
            <returns>
            The return value indicates whether the DC was released. If the DC was released, the return value is 1. 
            If the DC was not released, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.DeleteDC(System.IntPtr)">
            <summary>
            The DeleteDC function deletes the specified device context (DC).
            </summary>
            <param name="hdc">
            A handle to the device context.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The SelectObject function selects an object into the specified device context (DC). 
            The new object replaces the previous object of the same type.
            </summary>
            <param name="hDC">
            A handle to the DC.
            </param>
            <param name="hObject">
            A handle to the object to be selected. The specified object must have been created by 
            using one of the following functions.
            </param>
            <returns>
            If the selected object is not a region and the function succeeds, the return value is a handle to the 
            object being replaced. If the selected object is a region and the function succeeds, the return value 
            is one of the following values. SIMPLEREGION - Region consists of a single rectangle.,
            COMPLEXREGION - Region consists of more than one rectangle. NULLREGION - Region is empty.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all 
            system resources associated with the object. After the object is deleted, 
            the specified handle is no longer valid.
            </summary>
            <param name="hObject">
            A handle to a logical pen, brush, font, bitmap, region, or palette.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the specified handle is not valid or is currently 
            selected into a DC, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.LoadLibrary(System.String)">
            <summary>
            The LoadLibrary function maps the specified executable module into the address space of the calling process.
            </summary>
            <param name="lpLibFileName">Pointer to a null-terminated string that names the executable module (either a .dll or .exe file). The name specified is the file name of the module and is not related to the name stored in the library module itself, as specified by the LIBRARY keyword in the module-definition (.def) file.</param>
            <returns>If the function succeeds, the return value is a handle to the module.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded dynamic-link library (DLL). When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hLibModule">Handle to the loaded DLL module. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function or variable. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <param name="lpProcName">Pointer to a null-terminated string containing the function or variable name, or the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value is the address of the exported function or variable.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.SetSuspendState(System.Int32,System.Int32,System.Int32)">
            <summary>
            The SetSuspendState function suspends the system by shutting power down. Depending on the Hibernate parameter, the system either enters a suspend (sleep) state or hibernation (S4). If the ForceFlag parameter is TRUE, the system suspends operation immediately; if it is FALSE, the system requests permission from all applications and device drivers before doing so.
            </summary>
            <param name="Hibernate">Specifies the state of the system. If TRUE, the system hibernates. If FALSE, the system is suspended.</param>
            <param name="ForceCritical">Forced suspension. If TRUE, the function broadcasts a PBT_APMSUSPEND event to each application and driver, then immediately suspends operation. If FALSE, the function broadcasts a PBT_APMQUERYSUSPEND event to each application to request permission to suspend operation.</param>
            <param name="DisableWakeEvent">If TRUE, the system disables all wake events. If FALSE, any system wake events remain enabled.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.OpenProcessToken(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process.
            </summary>
            <param name="ProcessHandle">Handle to the process whose access token is opened.</param>
            <param name="DesiredAccess">Specifies an access mask that specifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access-control list (DACL) to determine which accesses are granted or denied.</param>
            <param name="TokenHandle">Pointer to a handle identifying the newly-opened access token when the function returns.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.LookupPrivilegeValue(System.String,System.String,Project858.Win32.NativeMethods.LUID@)">
            <summary>
            The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name.
            </summary>
            <param name="lpSystemName">Pointer to a null-terminated string specifying the name of the system on which the privilege name is looked up. If a null string is specified, the function attempts to find the privilege name on the local system.</param>
            <param name="lpName">Pointer to a null-terminated string that specifies the name of the privilege, as defined in the Winnt.h header file. For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege".</param>
            <param name="lpLuid">Pointer to a variable that receives the locally unique identifier by which the privilege is known on the system, specified by the lpSystemName parameter.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.AdjustTokenPrivileges(System.IntPtr,System.Int32,Project858.Win32.NativeMethods.TOKEN_PRIVILEGES@,System.Int32,Project858.Win32.NativeMethods.TOKEN_PRIVILEGES@,System.Int32@)">
            <summary>
            The AdjustTokenPrivileges function enables or disables privileges in the specified access token. Enabling or disabling privileges in an access token requires TOKEN_ADJUST_PRIVILEGES access.
            </summary>
            <param name="TokenHandle">Handle to the access token that contains the privileges to be modified. The handle must have TOKEN_ADJUST_PRIVILEGES access to the token. If the PreviousState parameter is not NULL, the handle must also have TOKEN_QUERY access.</param>
            <param name="DisableAllPrivileges">Specifies whether the function disables all of the token's privileges. If this value is TRUE, the function disables all privileges and ignores the NewState parameter. If it is FALSE, the function modifies privileges based on the information pointed to by the NewState parameter.</param>
            <param name="NewState">Pointer to a TOKEN_PRIVILEGES structure that specifies an array of privileges and their attributes. If the DisableAllPrivileges parameter is FALSE, AdjustTokenPrivileges enables or disables these privileges for the token. If you set the SE_PRIVILEGE_ENABLED attribute for a privilege, the function enables that privilege; otherwise, it disables the privilege. If DisableAllPrivileges is TRUE, the function ignores this parameter.</param>
            <param name="BufferLength">Specifies the size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be zero if the PreviousState parameter is NULL.</param>
            <param name="PreviousState">Pointer to a buffer that the function fills with a TOKEN_PRIVILEGES structure that contains the previous state of any privileges that the function modifies. This parameter can be NULL.</param>
            <param name="ReturnLength">Pointer to a variable that receives the required size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be NULL if PreviousState is NULL.</param>
            <returns>If the function succeeds, the return value is nonzero. To determine whether the function adjusted all of the specified privileges, call Marshal.GetLastWin32Error.</returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.ExitWindowsEx(System.Int32,System.Int32)">
            <summary>
            The ExitWindowsEx function either logs off the current user, shuts down the system, or shuts down and restarts the system. It sends the WM_QUERYENDSESSION message to all applications to determine if they can be terminated.
            </summary>
            <param name="uFlags">Specifies the type of shutdown.</param>
            <param name="dwReserved">This parameter is ignored.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.FormatMessage(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            The FormatMessage function formats a message string. The function requires a message definition 
            as input. The message definition can come from a buffer passed into the function. It can come 
            from a message table resource in an already-loaded module. Or the caller can ask the function 
            to search the system's message table resource(s) for the message definition. The function finds 
            the message definition in a message table resource based on a message identifier and a language 
            identifier. The function copies the formatted message text to an output buffer, processing any 
            embedded insert sequences if requested.
            </summary>
            <param name="dwFlags">
            Specifies aspects of the formatting process and how to interpret the lpSource parameter. 
            The low-order byte of dwFlags specifies how the function handles line breaks in the output buffer. 
            The low-order byte can also specify the maximum width of a formatted output line.
            </param>
            <param name="lpSource">
            Specifies the location of the message definition. The type of this parameter depends upon 
            the settings in the dwFlags parameter.
            </param>
            <param name="dwMessageId">
            Specifies the message identifier for the requested message. This parameter is ignored if 
            dwFlags includes FORMAT_MESSAGE_FROM_STRING.
            </param>
            <param name="dwLanguageId">Specifies the language identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="lpBuffer">Pointer to a buffer for the formatted (and null-terminated) message. If dwFlags includes FORMAT_MESSAGE_ALLOCATE_BUFFER, the function allocates a buffer using the LocalAlloc function, and places the pointer to the buffer at the address specified in lpBuffer.</param>
            <param name="nSize">If the FORMAT_MESSAGE_ALLOCATE_BUFFER flag is not set, this parameter specifies the maximum number of TCHARs that can be stored in the output buffer. If FORMAT_MESSAGE_ALLOCATE_BUFFER is set, this parameter specifies the minimum number of TCHARs to allocate for an output buffer. For ANSI text, this is the number of bytes; for Unicode text, this is the number of characters.</param>
            <param name="Arguments">Pointer to an array of values that are used as insert values in the formatted message. A %1 in the format string indicates the first value in the Arguments array; a %2 indicates the second argument; and so on.</param>
            <returns>If the function succeeds, the return value is the number of TCHARs stored in the output buffer, excluding the terminating null character.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.SetTimer(System.IntPtr,System.UIntPtr,System.UInt32,Project858.Win32.NativeMethods.TimerProc)">
            <summary>
            Creates a timer with the specified time-out value.
            </summary>
            <param name="hWnd">
            A handle to the window to be associated with the timer. This window must be owned by the calling
            thread. If a NULL value for hWnd is passed in along with an nIDEvent of an existing timer, 
            that timer will be replaced in the same way that an existing non-NULL hWnd timer will be.
            </param>
            <param name="nIDEvent">
            A nonzero timer identifier. If the hWnd parameter is NULL, and the nIDEvent does not match an 
            existing timer then it is ignored and a new timer ID is generated. If the hWnd parameter is not 
            NULL and the window specified by hWnd already has a timer with the value nIDEvent, then the 
            existing timer is replaced by the new timer. When SetTimer replaces a timer, the timer is reset. 
            Therefore, a message will be sent after the current time-out value elapses, but the previously 
            set time-out value is ignored. If the call is not intended to replace an existing timer, 
            nIDEvent should be 0 if the hWnd is NULL
            </param>
            <param name="uElapse">
            The time-out value, in milliseconds. 
            If uElapse is less than USER_TIMER_MINIMUM (0x0000000A), the timeout is set to USER_TIMER_MINIMUM. 
            If uElapse is greater than USER_TIMER_MAXIMUM (0x7FFFFFFF), the timeout is set to USER_TIMER_MAXIMUM.
            </param>
            <param name="lpTimerFunc">
            A pointer to the function to be notified when the time-out value elapses. For more information 
            about the function, see TimerProc. If lpTimerFunc is NULL, the system posts a WM_TIMER message 
            to the application queue. The hwnd member of the message's MSG structure contains the value of 
            the hWnd parameter.
            </param>
            <returns>
            If the function succeeds and the hWnd parameter is NULL, the return value is an integer identifying 
            the new timer. An application can pass this value to the KillTimer function to destroy the timer.
            If the function succeeds and the hWnd parameter is not NULL, then the return value is a nonzero 
            integer. An application can pass the value of the nIDEvent parameter to the KillTimer function 
            to destroy the timer.
            If the function fails to create a timer, the return value is zero. To get extended error information, 
            call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure 
            for the specified window and does not return until the window procedure has processed the message.
            </summary>
            <param name="hWnd">
            A handle to the window whose window procedure will receive the message. If this parameter is 
            HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, 
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but 
            the message is not sent to child windows.  Message sending is subject to UIPI. The thread of a 
            process can send messages only to message queues of threads in processes of lesser or equal 
            integrity level.
            </param>
            <param name="Msg">
            The message to be sent. For lists of the system-provided messages, see System-Defined Messages.
            </param>
            <param name="wParam">
            Additional message-specific information.
            </param>
            <param name="lParam">
            Additional message-specific information.
            </param>
            <returns>
            The return value specifies the result of the message processing; it depends on the message sent.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.SetWindowsHookEx(System.Int32,Project858.Win32.NativeMethods.HookProc,System.IntPtr,System.Int32)">
            <summary>
            Installs an application-defined hook procedure into a hook chain. You would install a hook 
            procedure to monitor the system for certain types of events. These events are associated either 
            with a specific thread or with all threads in the same desktop as the calling thread.
            </summary>
            <param name="idHook">
            The type of hook procedure to be installed. This parameter can be one of the following values.
            </param>
            <param name="lpfn">
            A pointer to the hook procedure. If the dwThreadId parameter is zero or specifies the identifier 
            of a thread created by a different process, the lpfn parameter must point to a hook procedure in 
            a DLL. Otherwise, lpfn can point to a hook procedure in the code associated with the current process.
            </param>
            <param name="hInstance">
            A handle to the DLL containing the hook procedure pointed to by the lpfn parameter. The hMod 
            parameter must be set to NULL if the dwThreadId parameter specifies a thread created by the 
            current process and if the hook procedure is within the code associated with the current process.
            </param>
            <param name="threadId">
            \The identifier of the thread with which the hook procedure is to be associated. If this 
            parameter is zero, the hook procedure is associated with all existing threads running in the 
            same desktop as the calling thread.
            </param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure. If the function 
            fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            Removes a hook procedure installed in a hook chain by the SetWindowsHookEx function.
            </summary>
            <param name="idHook">
            A handle to the hook to be removed. This parameter is a hook handle obtained by a previous 
            call to SetWindowsHookEx.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. 
            If the function fails, the return value is zero. To get extended error information, call GetLastError
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Passes the hook information to the next hook procedure in the current hook chain. A hook 
            procedure can call this function either before or after processing the hook information.
            </summary>
            <param name="idHook">
            This parameter is ignored.
            </param>
            <param name="nCode">
            The hook code passed to the current hook procedure. The next hook procedure uses this code 
            to determine how to process the hook information.
            </param>
            <param name="wParam">
            The wParam value passed to the current hook procedure. The meaning of this parameter depends on 
            the type of hook associated with the current hook chain.
            </param>
            <param name="lParam">
            The lParam value passed to the current hook procedure. The meaning of this parameter depends on 
            the type of hook associated with the current hook chain.
            </param>
            <returns>
            This value is returned by the next hook procedure in the chain. The current hook procedure must 
            also return this value. The meaning of the return value depends on the hook type. For more 
            information, see the descriptions of the individual hook procedures.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.GetWindowTextLength(System.IntPtr)">
            <summary>
            Retrieves the length, in characters, of the specified window's title bar text (if the window 
            has a title bar). If the specified window is a control, the function retrieves the length of 
            the text within the control. However, GetWindowTextLength cannot retrieve the length of the t
            ext of an edit control in another application.
            </summary>
            <param name="hWnd">
            A handle to the window or control.
            </param>
            <returns>
            If the function succeeds, the return value is the length, in characters, of the text. 
            Under certain conditions, this value may actually be greater than the length of the text. 
            For more information, see the following Remarks section.
            If the window has no text, the return value is zero. To get extended error information, 
            call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Copies the text of the specified window's title bar (if it has one) into a buffer.
            If the specified window is a control, the text of the control is copied. However, 
            GetWindowText cannot retrieve the text of a control in another application.
            </summary>
            <param name="hWnd">
            A handle to the window or control containing the text.
            </param>
            <param name="text">
            The buffer that will receive the text. If the string is as long or longer than the buffer, 
            the string is truncated and terminated with a null character.
            </param>
            <param name="maxLength">
            The maximum number of characters to copy to the buffer, including the null character. 
            If the text exceeds this limit, it is truncated.
            </param>
            <returns>
            If the function succeeds, the return value is the length, in characters, of the copied string, 
            not including the terminating null character. If the window has no title bar or text, if the 
            title bar is empty, or if the window or control handle is invalid, the return value is zero. 
            To get extended error information, call GetLastError. 
            This function cannot retrieve the text of an edit control in another application.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethods.EndDialog(System.IntPtr,System.IntPtr)">
            <summary>
            Destroys a modal dialog box, causing the system to end any processing for the dialog box.
            </summary>
            <param name="hDlg">
            A handle to the dialog box to be destroyed.
            </param>
            <param name="nResult">
            The value to be returned to the application from the function that created the dialog box.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value 
            is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="T:Project858.Win32.NativeMethods.HookProc">
            <summary>
            Specifies the common dialog box hook procedure that is overridden to
            add specific functionality to a common dialog box. 
            </summary>
            <param name="nCode">Code</param>
            <param name="wParam">Additional information about the message.</param>
            <param name="lParam">Additional information about the message.</param>
            <returns>
            A zero value if the default dialog box procedure processes the message; a nonzero value if 
            the default dialog box procedure ignores the message. 
            </returns>
        </member>
        <member name="T:Project858.Win32.NativeMethods.TimerProc">
            <summary>
            An application-defined callback function that processes WM_TIMER messages. 
            The TIMERPROC type defines a pointer to this callback function. TimerProc is a placeholder 
            for the application-defined function name.
            </summary>
            <param name="hWnd">A handle to the window associated with the timer.</param>
            <param name="uMsg">The WM_TIMER message.</param>
            <param name="nIDEvent">The timer's identifier.</param>
            <param name="dwTime">
            The number of milliseconds that have elapsed since the system was started. 
            This is the value returned by the GetTickCount function.
            </param>
        </member>
        <member name="T:Project858.Win32.NativeMethods.BLENDFUNCTION">
            <summary>
            The BLENDFUNCTION structure controls blending by specifying the blending functions for source and 
            destination bitmaps.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.BLENDFUNCTION._blendOp">
            <summary>
            The source blend operation. Currently, the only source and destination blend operation that has been 
            defined is AC_SRC_OVER. For details, see the following Remarks section.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.BLENDFUNCTION._blendFlags">
            <summary>
            Must be zero.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.BLENDFUNCTION._sourceConstantAlpha">
            <summary>
            Specifies an alpha transparency value to be used on the entire source bitmap. The SourceConstantAlpha 
            value is combined with any per-pixel alpha values in the source bitmap. If you set SourceConstantAlpha 
            to 0, it is assumed that your image is transparent. Set the SourceConstantAlpha value to 255 (opaque) 
            when you only want to use per-pixel alpha values.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.BLENDFUNCTION._alphaFormat">
            <summary>
            This member controls the way the source and destination bitmaps are interpreted. 
            AlphaFormat has the following value.
            </summary>
        </member>
        <member name="P:Project858.Win32.NativeMethods.BLENDFUNCTION.BlendOp">
            <summary>
            The source blend operation. Currently, the only source and destination blend operation that has been 
            defined is AC_SRC_OVER. For details, see the following Remarks section.
            </summary>
        </member>
        <member name="P:Project858.Win32.NativeMethods.BLENDFUNCTION.BlendFlags">
            <summary>
            Must be zero.
            </summary>
        </member>
        <member name="P:Project858.Win32.NativeMethods.BLENDFUNCTION.SourceConstantAlpha">
            <summary>
            Specifies an alpha transparency value to be used on the entire source bitmap. The SourceConstantAlpha 
            value is combined with any per-pixel alpha values in the source bitmap. If you set SourceConstantAlpha 
            to 0, it is assumed that your image is transparent. Set the SourceConstantAlpha value to 255 (opaque) 
            when you only want to use per-pixel alpha values.
            </summary>
        </member>
        <member name="P:Project858.Win32.NativeMethods.BLENDFUNCTION.AlphaFormat">
            <summary>
            This member controls the way the source and destination bitmaps are interpreted. 
            AlphaFormat has the following value.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethods.LUID">
            <summary>
            A pointer to a variable that receives the LUID by which the privilege 
            is known on the system specified by the lpSystemName parameter.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.LUID.LowPart">
            <summary>
            The low order part of the 64 bit value.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.LUID.HighPart">
            <summary>
            The high order part of the 64 bit value.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethods.LUID_AND_ATTRIBUTES">
            <summary>
            The LUID_AND_ATTRIBUTES structure represents a locally unique identifier (LUID) and its attributes.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.LUID_AND_ATTRIBUTES.pLuid">
            <summary>
            Specifies an LUID value.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.LUID_AND_ATTRIBUTES.Attributes">
            <summary>
            Specifies attributes of the LUID. This value contains up to 32 one-bit flags. Its meaning is dependent on the definition and use of the LUID.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethods.TOKEN_PRIVILEGES">
            <summary>
            The TOKEN_PRIVILEGES structure contains information about a set of privileges for an access token.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.TOKEN_PRIVILEGES.PrivilegeCount">
            <summary>
            Specifies the number of entries in the Privileges array.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.TOKEN_PRIVILEGES.Privileges">
            <summary>
            Specifies an array of LUID_AND_ATTRIBUTES structures. Each structure contains the LUID and attributes of a privilege.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethods.APICmdShowTypes">
            <summary>
            Controls how the window is to be shown. This parameter is ignored the first time an application 
            calls ShowWindow, if the program that launched the application provides a STARTUPINFO structure. 
            Otherwise, the first time ShowWindow is called, the value should be the value obtained by the 
            WinMain function in its nCmdShow parameter. In subsequent calls, this parameter can be one of 
            the following values.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_FORCEMINIMIZE">
            <summary>
            Minimizes a window, even if the thread that owns the window is not responding. 
            This flag should only be used when minimizing windows from a different thread.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_HIDE">
            <summary>
            Hides the window and activates another window.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_MAXIMIZE">
            <summary>
            Maximizes the specified window.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_MINIMIZE">
            <summary>
            Minimizes the specified window and activates the next top-level window in the Z order.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_RESTORE">
            <summary>
            Activates and displays the window. If the window is minimized or maximized, the system restores it 
            to its original size and position. An application should specify this flag when 
            restoring a minimized window.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOW">
            <summary>
            Activates the window and displays it in its current size and position. 
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWDEFAULT">
            <summary>
            Sets the show state based on the SW_ value specified in the STARTUPINFO structure passed 
            to the CreateProcess function by the program that started the application. 
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWMAXIMIZED">
            <summary>
            Activates the window and displays it as a maximized window.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWMINIMIZED">
            <summary>
            Activates the window and displays it as a minimized window.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWMINNOACTIVE">
            <summary>
            Displays the window as a minimized window. This value is similar to 
            SW_SHOWMINIMIZED, except the window is not activated.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWNA">
            <summary>
            Displays the window in its current size and position. This value is similar to SW_SHOW, except that the window is not activated.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWNOACTIVATE">
            <summary>
            Displays a window in its most recent size and position. This value is similar to SW_SHOWNORMAL, except that the window is not activated.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APICmdShowTypes.SW_SHOWNORMAL">
            <summary>
            Activates and displays a window. If the window is minimized or maximized, the system restores it to its original size and position. An application should specify this flag when displaying the window for the first time.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethods.APITokenAccessTypes">
            <summary>
            An application cannot change the access control list of an object unless the application 
            has the rights to do so. These rights are controlled by a security descriptor in the access 
            token for the object.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_ADJUST_DEFAULT">
            <summary>
            Required to change the default owner, primary group, or DACL of an access token.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_ADJUST_GROUPS">
            <summary>
            Required to adjust the attributes of the groups in an access token.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_ADJUST_PRIVILEGES">
            <summary>
            Required to enable or disable the privileges in an access token.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_ADJUST_SESSIONID">
            <summary>
            Required to adjust the session ID of an access token. The SE_TCB_NAME privilege is required.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_ASSIGN_PRIMARY">
            <summary>
            Required to attach a primary token to a process. The SE_ASSIGNPRIMARYTOKEN_NAME privilege is also required to accomplish this task.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_DUPLICATE">
            <summary>
            Required to duplicate an access token.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_IMPERSONATE">
            <summary>
            Required to attach an impersonation access token to a process.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_QUERY">
            <summary>
            Required to query an access token.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APITokenAccessTypes.TOKEN_QUERY_SOURCE">
            <summary>
            Required to query an access token.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethods.APIEnableMenuItemStatus">
            <summary>
            Definuje mozne stavy pre stav systemoveho menu itemu
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APIEnableMenuItemStatus.NOT_VALID">
            <summary>
            Not valid
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APIEnableMenuItemStatus.MF_BYCOMMAND">
            <summary>
            Specifies that the parameter gives the command ID of the existing menu item. 
            This is the default.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APIEnableMenuItemStatus.MF_BYPOSITION">
            <summary>
            Specifies that the parameter gives the position of the existing menu item. 
            The first item is at position 0.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APIEnableMenuItemStatus.MF_DISABLED">
            <summary>
             Disables the menu item so that it cannot be selected but does not dim it.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APIEnableMenuItemStatus.MF_ENABLED">
            <summary>
            Enables the menu item so that it can be selected and restores it from its dimmed state.
            </summary>
        </member>
        <member name="F:Project858.Win32.NativeMethods.APIEnableMenuItemStatus.MF_GRAYED">
            <summary>
            Disables the menu item so that it cannot be selected and dims it.
            </summary>
        </member>
        <member name="T:Project858.Win32.NativeMethodsNet">
            <summary>
            Implementacia Native Method z WinApi
            </summary>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.ShowWindow(System.IntPtr,Project858.Win32.NativeMethods.APICmdShowTypes)">
            <summary>
            Sets the specified window's show state.
            </summary>
            <param name="hWnd">
            A handle to the window.
            </param>
            <param name="iMsg">
            Controls how the window is to be shown. This parameter is ignored the first time an application 
            calls ShowWindow, if the program that launched the application provides a STARTUPINFO structure. 
            Otherwise, the first time ShowWindow is called, the value should be the value obtained by the 
            WinMain function in its nCmdShow parameter. In subsequent calls, this parameter can be one of 
            the following values.
            </param>
            <returns>
            If the window was previously visible, the return value is nonzero. 
            If the window was previously hidden, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.IsIconic(System.IntPtr)">
            <summary>
            Determines whether the specified window is minimized (iconic).
            </summary>
            <param name="hWnd">A handle to the window to be tested.</param>
            <returns>
            If the window is iconic, the return value is nonzero.
            If the window is not iconic, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.OpenProcessToken(System.IntPtr,Project858.Win32.NativeMethods.APITokenAccessTypes,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process.
            </summary>
            <param name="processHandle">
            A handle to the process whose access token is opened. 
            The process must have the PROCESS_QUERY_INFORMATION access permission.
            </param>
            <param name="desiredAccess">
            Specifies an access mask that specifies the requested types of access to the access token. 
            These requested access types are compared with the discretionary access control list (DACL) 
            of the token to determine which accesses are granted or denied.
            </param>
            <param name="tokenHandle">
            A pointer to a handle that identifies the newly opened access token when the function returns.
            </param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.CloseHandle(System.IntPtr)">
            <summary>
            Closes an open object handle.
            </summary>
            <param name="handle">A valid handle to an open object.</param>
            <returns>If the function succeeds, the return value is nonzero.</returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.AllocateConsole">
            <summary>
            Allocate a console if application started sender within windows GUI. 
            Detects the presence of an existing console associated with the application and
            attaches itself recipients it if available.
            </summary>
            <exception cref="T:System.Exception">
            Console Allocation Failed
            </exception>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.FreeConsole">
            <summary>
            Detaches the calling process sender its console.
            </summary>
            <exception cref="T:System.Exception">
            Win32 Error
            </exception>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.SetForegroundWindow(System.IntPtr)">
            <summary>
            Activates the environment application window by calling the SetForegroundWindow Win32 API.
            </summary>
            <param name="hWnd">
            Handle recipients the window that should be activated and brought recipients the foreground.
            </param>
            <exception cref="T:System.Exception">
            Win32 Error
            </exception>
            <exception cref="M:Project858.Win32.NativeMethodsNet.SetForegroundWindow(System.IntPtr)">
            Argument is null
            </exception>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.GetSystemMenu(System.IntPtr,System.Boolean)">
            <summary>
            Allows the application to access the Control menu for copying and modification
            </summary>
            <param name="hWnd">
            Window handle
            </param>
            <param name="bRevert">
            Specifies the action to be taken. If bRevert is FALSE, GetSystemMenu returns a handle to a 
            copy of the Control menu currently in use. This copy is initially identical to the Control 
            menu but can be modified. If bRevert is TRUE, GetSystemMenu resets the Control menu back 
            to the default state. The previous, possibly modified, Control menu, if any, is destroyed. 
            The return value is undefined in this case.
            </param>
            <returns>
            Identifies a copy of the Control menu if bRevert is FALSE. If bRevert is TRUE, the return 
            value is undefined. The returned pointer may be temporary and should not be stored for later use.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.EnableMenuItem(System.IntPtr,System.Int32,Project858.Win32.NativeMethods.APIEnableMenuItemStatus)">
            <summary>
            Enables, disables, or dims a menu item.
            </summary>
            <param name="hMenu">
            Menu handle
            </param>
            <param name="nIDEnableItem">
            Specifies the menu item to be enabled, as determined by nEnable. This parameter can specify 
            pop-up menu items as well as standard menu items.
            </param>
            <param name="nEnable">
            Specifies the action to take. It can be a combination of MF_DISABLED, MF_ENABLED, or MF_GRAYED, 
            with MF_BYCOMMAND or MF_BYPOSITION. These values can be combined by using the bitwise OR 
            operator. These values have the following meanings:
            </param>
            <returns>
            Previous state (MF_DISABLED, MF_ENABLED, or MF_GRAYED) or –1 if not valid.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.UpdateLayeredWindow(System.IntPtr,System.IntPtr,System.Drawing.Point@,System.Drawing.Size@,System.IntPtr,System.Drawing.Point@,System.Int32,Project858.Win32.NativeMethods.BLENDFUNCTION@,System.Int32)">
            <summary>
            Updates the position, size, shape, content, and translucency of a layered window.
            </summary>
            <param name="hwnd">
            A handle to a layered window. A layered window is created by specifying WS_EX_LAYERED when creating the 
            window with the CreateWindowEx function.
            </param>
            <param name="hdcDst">
            A handle to a DC for the screen. This handle is obtained by specifying NULL when calling the function. 
            It is used for palette color matching when the window contents are updated. If hdcDst isNULL, the default 
            palette will be used. If hdcSrc is NULL, hdcDst must be NULL.
            </param>
            <param name="pptDst">
            A pointer to a structure that specifies the new screen position of the layered window. If the current 
            position is not changing, pptDst can be NULL.
            </param>
            <param name="psize">
            A pointer to a structure that specifies the new size of the layered window. If the size of the window 
            is not changing, psize can be NULL. If hdcSrc is NULL, psize must be NULL.
            </param>
            <param name="hdcSrc">
            A handle to a DC for the surface that defines the layered window. This handle can be obtained by calling 
            the CreateCompatibleDC function. If the shape and visual context of the window are not changing, hdcSrc 
            can be NULL.
            </param>
            <param name="pprSrc">
            A pointer to a structure that specifies the location of the layer in the device context. 
            If hdcSrc is NULL, pptSrc should be NULL.
            </param>
            <param name="crKey">
            A structure that specifies the color key to be used when composing the layered window. 
            To generate a COLORREF, use the RGB macro.
            </param>
            <param name="pblend">
            A pointer to a structure that specifies the transparency value to be used when composing the layered window.
            </param>
            <param name="dwFlags">
            This parameter can be one of the following values.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value is zero. 
            To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.GetDC(System.IntPtr)">
            <summary>
            The GetDC function retrieves a handle to a device context (DC) for the client area of a specified window 
            or for the entire screen. You can use the returned handle in subsequent GDI functions to draw in the DC. 
            The device context is an opaque data structure, whose values are used internally by GDI.
            </summary>
            <param name="hWnd">
            A handle to the window whose DC is to be retrieved. If this value is NULL, 
            GetDC retrieves the DC for the entire screen.
            </param>
            <returns>
            If the function succeeds, the return value is a handle to the DC for the specified window's client area. 
            If the function fails, the return value is NULL.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.CreateCompatibleDC(System.IntPtr)">
            <summary>
            This function creates a memory device context (DC) compatible with the specified device.
            </summary>
            <param name="hDC">
            If this handle is NULL, the function creates a memory device context compatible with the application's 
            current screen.
            </param>
            <returns>
            The handle to a memory device context indicates success. NULL indicates failure. To get extended error 
            information, call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.ReleaseDC(System.IntPtr,System.IntPtr)">
            <summary>
            The ReleaseDC function releases a device context (DC), freeing it for use by other applications. 
            The effect of the ReleaseDC function depends on the type of DC. It frees only common and window DCs. 
            It has no effect on class or private DCs.
            </summary>
            <param name="hWnd">
            A handle to the window whose DC is to be released.
            </param>
            <param name="hDC">
            A handle to the DC to be released.
            </param>
            <returns>
            The return value indicates whether the DC was released. If the DC was released, the return value is 1. 
            If the DC was not released, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.DeleteDC(System.IntPtr)">
            <summary>
            The DeleteDC function deletes the specified device context (DC).
            </summary>
            <param name="hdc">
            A handle to the device context.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.SelectObject(System.IntPtr,System.IntPtr)">
            <summary>
            The SelectObject function selects an object into the specified device context (DC). 
            The new object replaces the previous object of the same type.
            </summary>
            <param name="hDC">
            A handle to the DC.
            </param>
            <param name="hObject">
            A handle to the object to be selected. The specified object must have been created by 
            using one of the following functions.
            </param>
            <returns>
            If the selected object is not a region and the function succeeds, the return value is a handle to the 
            object being replaced. If the selected object is a region and the function succeeds, the return value 
            is one of the following values. SIMPLEREGION - Region consists of a single rectangle.,
            COMPLEXREGION - Region consists of more than one rectangle. NULLREGION - Region is empty.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all 
            system resources associated with the object. After the object is deleted, 
            the specified handle is no longer valid.
            </summary>
            <param name="hObject">
            A handle to a logical pen, brush, font, bitmap, region, or palette.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the specified handle is not valid or is currently 
            selected into a DC, the return value is zero.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.LoadLibrary(System.String)">
            <summary>
            The LoadLibrary function maps the specified executable module into the address space of the calling process.
            </summary>
            <param name="lpLibFileName">Pointer to a null-terminated string that names the executable module (either a .dll or .exe file). The name specified is the file name of the module and is not related to the name stored in the library module itself, as specified by the LIBRARY keyword in the module-definition (.def) file.</param>
            <returns>If the function succeeds, the return value is a handle to the module.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.FreeLibrary(System.IntPtr)">
            <summary>
            The FreeLibrary function decrements the reference count of the loaded dynamic-link library (DLL). When the reference count reaches zero, the module is unmapped from the address space of the calling process and the handle is no longer valid.
            </summary>
            <param name="hLibModule">Handle to the loaded DLL module. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.GetProcAddress(System.IntPtr,System.String)">
            <summary>
            The GetProcAddress function retrieves the address of an exported function or variable from the specified dynamic-link library (DLL).
            </summary>
            <param name="hModule">Handle to the DLL module that contains the function or variable. The LoadLibrary or GetModuleHandle function returns this handle.</param>
            <param name="lpProcName">Pointer to a null-terminated string containing the function or variable name, or the function's ordinal value. If this parameter is an ordinal value, it must be in the low-order word; the high-order word must be zero.</param>
            <returns>If the function succeeds, the return value is the address of the exported function or variable.<br></br><br>If the function fails, the return value is NULL. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.SetSuspendState(System.Int32,System.Int32,System.Int32)">
            <summary>
            The SetSuspendState function suspends the system by shutting power down. Depending on the Hibernate parameter, the system either enters a suspend (sleep) state or hibernation (S4). If the ForceFlag parameter is TRUE, the system suspends operation immediately; if it is FALSE, the system requests permission from all applications and device drivers before doing so.
            </summary>
            <param name="Hibernate">Specifies the state of the system. If TRUE, the system hibernates. If FALSE, the system is suspended.</param>
            <param name="ForceCritical">Forced suspension. If TRUE, the function broadcasts a PBT_APMSUSPEND event to each application and driver, then immediately suspends operation. If FALSE, the function broadcasts a PBT_APMQUERYSUSPEND event to each application to request permission to suspend operation.</param>
            <param name="DisableWakeEvent">If TRUE, the system disables all wake events. If FALSE, any system wake events remain enabled.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.OpenProcessToken(System.IntPtr,System.Int32,System.IntPtr@)">
            <summary>
            The OpenProcessToken function opens the access token associated with a process.
            </summary>
            <param name="ProcessHandle">Handle to the process whose access token is opened.</param>
            <param name="DesiredAccess">Specifies an access mask that specifies the requested types of access to the access token. These requested access types are compared with the token's discretionary access-control list (DACL) to determine which accesses are granted or denied.</param>
            <param name="TokenHandle">Pointer to a handle identifying the newly-opened access token when the function returns.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.LookupPrivilegeValue(System.String,System.String,Project858.Win32.NativeMethods.LUID@)">
            <summary>
            The LookupPrivilegeValue function retrieves the locally unique identifier (LUID) used on a specified system to locally represent the specified privilege name.
            </summary>
            <param name="lpSystemName">Pointer to a null-terminated string specifying the name of the system on which the privilege name is looked up. If a null string is specified, the function attempts to find the privilege name on the local system.</param>
            <param name="lpName">Pointer to a null-terminated string that specifies the name of the privilege, as defined in the Winnt.h header file. For example, this parameter could specify the constant SE_SECURITY_NAME, or its corresponding string, "SeSecurityPrivilege".</param>
            <param name="lpLuid">Pointer to a variable that receives the locally unique identifier by which the privilege is known on the system, specified by the lpSystemName parameter.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.AdjustTokenPrivileges(System.IntPtr,System.Int32,Project858.Win32.NativeMethods.TOKEN_PRIVILEGES@,System.Int32,Project858.Win32.NativeMethods.TOKEN_PRIVILEGES@,System.Int32@)">
            <summary>
            The AdjustTokenPrivileges function enables or disables privileges in the specified access token. Enabling or disabling privileges in an access token requires TOKEN_ADJUST_PRIVILEGES access.
            </summary>
            <param name="TokenHandle">Handle to the access token that contains the privileges to be modified. The handle must have TOKEN_ADJUST_PRIVILEGES access to the token. If the PreviousState parameter is not NULL, the handle must also have TOKEN_QUERY access.</param>
            <param name="DisableAllPrivileges">Specifies whether the function disables all of the token's privileges. If this value is TRUE, the function disables all privileges and ignores the NewState parameter. If it is FALSE, the function modifies privileges based on the information pointed to by the NewState parameter.</param>
            <param name="NewState">Pointer to a TOKEN_PRIVILEGES structure that specifies an array of privileges and their attributes. If the DisableAllPrivileges parameter is FALSE, AdjustTokenPrivileges enables or disables these privileges for the token. If you set the SE_PRIVILEGE_ENABLED attribute for a privilege, the function enables that privilege; otherwise, it disables the privilege. If DisableAllPrivileges is TRUE, the function ignores this parameter.</param>
            <param name="BufferLength">Specifies the size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be zero if the PreviousState parameter is NULL.</param>
            <param name="PreviousState">Pointer to a buffer that the function fills with a TOKEN_PRIVILEGES structure that contains the previous state of any privileges that the function modifies. This parameter can be NULL.</param>
            <param name="ReturnLength">Pointer to a variable that receives the required size, in bytes, of the buffer pointed to by the PreviousState parameter. This parameter can be NULL if PreviousState is NULL.</param>
            <returns>If the function succeeds, the return value is nonzero. To determine whether the function adjusted all of the specified privileges, call Marshal.GetLastWin32Error.</returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.ExitWindowsEx(System.Int32,System.Int32)">
            <summary>
            The ExitWindowsEx function either logs off the current user, shuts down the system, or shuts down and restarts the system. It sends the WM_QUERYENDSESSION message to all applications to determine if they can be terminated.
            </summary>
            <param name="uFlags">Specifies the type of shutdown.</param>
            <param name="dwReserved">This parameter is ignored.</param>
            <returns>If the function succeeds, the return value is nonzero.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.FormatMessage(System.Int32,System.IntPtr,System.Int32,System.Int32,System.Text.StringBuilder,System.Int32,System.Int32)">
            <summary>
            The FormatMessage function formats a message string. The function requires a message definition as input. The message definition can come from a buffer passed into the function. It can come from a message table resource in an already-loaded module. Or the caller can ask the function to search the system's message table resource(s) for the message definition. The function finds the message definition in a message table resource based on a message identifier and a language identifier. The function copies the formatted message text to an output buffer, processing any embedded insert sequences if requested.
            </summary>
            <param name="dwFlags">Specifies aspects of the formatting process and how to interpret the lpSource parameter. The low-order byte of dwFlags specifies how the function handles line breaks in the output buffer. The low-order byte can also specify the maximum width of a formatted output line.</param>
            <param name="lpSource">Specifies the location of the message definition. The type of this parameter depends upon the settings in the dwFlags parameter.</param>
            <param name="dwMessageId">Specifies the message identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="dwLanguageId">Specifies the language identifier for the requested message. This parameter is ignored if dwFlags includes FORMAT_MESSAGE_FROM_STRING.</param>
            <param name="lpBuffer">Pointer to a buffer for the formatted (and null-terminated) message. If dwFlags includes FORMAT_MESSAGE_ALLOCATE_BUFFER, the function allocates a buffer using the LocalAlloc function, and places the pointer to the buffer at the address specified in lpBuffer.</param>
            <param name="nSize">If the FORMAT_MESSAGE_ALLOCATE_BUFFER flag is not set, this parameter specifies the maximum number of TCHARs that can be stored in the output buffer. If FORMAT_MESSAGE_ALLOCATE_BUFFER is set, this parameter specifies the minimum number of TCHARs to allocate for an output buffer. For ANSI text, this is the number of bytes; for Unicode text, this is the number of characters.</param>
            <param name="Arguments">Pointer to an array of values that are used as insert values in the formatted message. A %1 in the format string indicates the first value in the Arguments array; a %2 indicates the second argument; and so on.</param>
            <returns>If the function succeeds, the return value is the number of TCHARs stored in the output buffer, excluding the terminating null character.<br></br><br>If the function fails, the return value is zero. To get extended error information, call Marshal.GetLastWin32Error.</br></returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.SetTimer(System.IntPtr,System.UIntPtr,System.UInt32,Project858.Win32.NativeMethods.TimerProc)">
            <summary>
            Creates a timer with the specified time-out value.
            </summary>
            <param name="hWnd">
            A handle to the window to be associated with the timer. This window must be owned by the calling
            thread. If a NULL value for hWnd is passed in along with an nIDEvent of an existing timer, 
            that timer will be replaced in the same way that an existing non-NULL hWnd timer will be.
            </param>
            <param name="nIDEvent">
            A nonzero timer identifier. If the hWnd parameter is NULL, and the nIDEvent does not match an 
            existing timer then it is ignored and a new timer ID is generated. If the hWnd parameter is not 
            NULL and the window specified by hWnd already has a timer with the value nIDEvent, then the 
            existing timer is replaced by the new timer. When SetTimer replaces a timer, the timer is reset. 
            Therefore, a message will be sent after the current time-out value elapses, but the previously 
            set time-out value is ignored. If the call is not intended to replace an existing timer, 
            nIDEvent should be 0 if the hWnd is NULL
            </param>
            <param name="uElapse">
            The time-out value, in milliseconds. 
            If uElapse is less than USER_TIMER_MINIMUM (0x0000000A), the timeout is set to USER_TIMER_MINIMUM. 
            If uElapse is greater than USER_TIMER_MAXIMUM (0x7FFFFFFF), the timeout is set to USER_TIMER_MAXIMUM.
            </param>
            <param name="lpTimerFunc">
            A pointer to the function to be notified when the time-out value elapses. For more information 
            about the function, see TimerProc. If lpTimerFunc is NULL, the system posts a WM_TIMER message 
            to the application queue. The hwnd member of the message's MSG structure contains the value of 
            the hWnd parameter.
            </param>
            <returns>
            If the function succeeds and the hWnd parameter is NULL, the return value is an integer identifying 
            the new timer. An application can pass this value to the KillTimer function to destroy the timer.
            If the function succeeds and the hWnd parameter is not NULL, then the return value is a nonzero 
            integer. An application can pass the value of the nIDEvent parameter to the KillTimer function 
            to destroy the timer.
            If the function fails to create a timer, the return value is zero. To get extended error information, 
            call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.SendMessage(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Sends the specified message to a window or windows. The SendMessage function calls the window procedure 
            for the specified window and does not return until the window procedure has processed the message.
            </summary>
            <param name="hWnd">
            A handle to the window whose window procedure will receive the message. If this parameter is 
            HWND_BROADCAST ((HWND)0xffff), the message is sent to all top-level windows in the system, 
            including disabled or invisible unowned windows, overlapped windows, and pop-up windows; but 
            the message is not sent to child windows.  Message sending is subject to UIPI. The thread of a 
            process can send messages only to message queues of threads in processes of lesser or equal 
            integrity level.
            </param>
            <param name="Msg">
            The message to be sent. For lists of the system-provided messages, see System-Defined Messages.
            </param>
            <param name="wParam">
            Additional message-specific information.
            </param>
            <param name="lParam">
            Additional message-specific information.
            </param>
            <returns>
            The return value specifies the result of the message processing; it depends on the message sent.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.SetWindowsHookEx(System.Int32,Project858.Win32.NativeMethods.HookProc,System.IntPtr,System.Int32)">
            <summary>
            Installs an application-defined hook procedure into a hook chain. You would install a hook 
            procedure to monitor the system for certain types of events. These events are associated either 
            with a specific thread or with all threads in the same desktop as the calling thread.
            </summary>
            <param name="idHook">
            The type of hook procedure to be installed. This parameter can be one of the following values.
            </param>
            <param name="lpfn">
            A pointer to the hook procedure. If the dwThreadId parameter is zero or specifies the identifier 
            of a thread created by a different process, the lpfn parameter must point to a hook procedure in 
            a DLL. Otherwise, lpfn can point to a hook procedure in the code associated with the current process.
            </param>
            <param name="hInstance">
            A handle to the DLL containing the hook procedure pointed to by the lpfn parameter. The hMod 
            parameter must be set to NULL if the dwThreadId parameter specifies a thread created by the 
            current process and if the hook procedure is within the code associated with the current process.
            </param>
            <param name="threadId">
            \The identifier of the thread with which the hook procedure is to be associated. If this 
            parameter is zero, the hook procedure is associated with all existing threads running in the 
            same desktop as the calling thread.
            </param>
            <returns>
            If the function succeeds, the return value is the handle to the hook procedure. If the function 
            fails, the return value is NULL. To get extended error information, call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.UnhookWindowsHookEx(System.IntPtr)">
            <summary>
            Removes a hook procedure installed in a hook chain by the SetWindowsHookEx function.
            </summary>
            <param name="idHook">
            A handle to the hook to be removed. This parameter is a hook handle obtained by a previous 
            call to SetWindowsHookEx.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. 
            If the function fails, the return value is zero. To get extended error information, call GetLastError
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.CallNextHookEx(System.IntPtr,System.Int32,System.IntPtr,System.IntPtr)">
            <summary>
            Passes the hook information to the next hook procedure in the current hook chain. A hook 
            procedure can call this function either before or after processing the hook information.
            </summary>
            <param name="idHook">
            This parameter is ignored.
            </param>
            <param name="nCode">
            The hook code passed to the current hook procedure. The next hook procedure uses this code 
            to determine how to process the hook information.
            </param>
            <param name="wParam">
            The wParam value passed to the current hook procedure. The meaning of this parameter depends on 
            the type of hook associated with the current hook chain.
            </param>
            <param name="lParam">
            The lParam value passed to the current hook procedure. The meaning of this parameter depends on 
            the type of hook associated with the current hook chain.
            </param>
            <returns>
            This value is returned by the next hook procedure in the chain. The current hook procedure must 
            also return this value. The meaning of the return value depends on the hook type. For more 
            information, see the descriptions of the individual hook procedures.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.GetWindowTextLength(System.IntPtr)">
            <summary>
            Retrieves the length, in characters, of the specified window's title bar text (if the window 
            has a title bar). If the specified window is a control, the function retrieves the length of 
            the text within the control. However, GetWindowTextLength cannot retrieve the length of the t
            ext of an edit control in another application.
            </summary>
            <param name="hWnd">
            A handle to the window or control.
            </param>
            <returns>
            If the function succeeds, the return value is the length, in characters, of the text. 
            Under certain conditions, this value may actually be greater than the length of the text. 
            For more information, see the following Remarks section.
            If the window has no text, the return value is zero. To get extended error information, 
            call GetLastError.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.GetWindowText(System.IntPtr,System.Text.StringBuilder,System.Int32)">
            <summary>
            Copies the text of the specified window's title bar (if it has one) into a buffer.
            If the specified window is a control, the text of the control is copied. However, 
            GetWindowText cannot retrieve the text of a control in another application.
            </summary>
            <param name="hWnd">
            A handle to the window or control containing the text.
            </param>
            <param name="text">
            The buffer that will receive the text. If the string is as long or longer than the buffer, 
            the string is truncated and terminated with a null character.
            </param>
            <param name="maxLength">
            The maximum number of characters to copy to the buffer, including the null character. 
            If the text exceeds this limit, it is truncated.
            </param>
            <returns>
            If the function succeeds, the return value is the length, in characters, of the copied string, 
            not including the terminating null character. If the window has no title bar or text, if the 
            title bar is empty, or if the window or control handle is invalid, the return value is zero. 
            To get extended error information, call GetLastError. 
            This function cannot retrieve the text of an edit control in another application.
            </returns>
        </member>
        <member name="M:Project858.Win32.NativeMethodsNet.EndDialog(System.IntPtr,System.IntPtr)">
            <summary>
            Destroys a modal dialog box, causing the system to end any processing for the dialog box.
            </summary>
            <param name="hDlg">
            A handle to the dialog box to be destroyed.
            </param>
            <param name="nResult">
            The value to be returned to the application from the function that created the dialog box.
            </param>
            <returns>
            If the function succeeds, the return value is nonzero. If the function fails, the return value 
            is zero. To get extended error information, call GetLastError.
            </returns>
        </member>
    </members>
</doc>
